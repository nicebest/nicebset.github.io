<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/10/20/handbook/nginx/nginx-faq/"/>
      <url>/2021/10/20/handbook/nginx/nginx-faq/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-问题集"><a href="#Nginx-问题集" class="headerlink" title="Nginx 问题集"></a>Nginx 问题集</h1><h2 id="Nginx-出现大量-TIME-WAIT"><a href="#Nginx-出现大量-TIME-WAIT" class="headerlink" title="Nginx 出现大量 TIME_WAIT"></a>Nginx 出现大量 TIME_WAIT</h2><h3 id="检测TIME-WAIT状态的语句"><a href="#检测TIME-WAIT状态的语句" class="headerlink" title="检测TIME_WAIT状态的语句"></a>检测TIME_WAIT状态的语句</h3><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">netstat</span> -n <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/^tcp/ {++S[<span class="token variable">$NF</span>]} END {for(a in S) print a, S[a]}'</span>  SYN_RECV 7ESTABLISHED 756FIN_WAIT1 21SYN_SENT 3TIME_WAIT 2000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>状态解析：</p><ul><li><code>CLOSED</code> - 无连接是活动的或正在进行</li><li><code>LISTEN</code> - 服务器在等待进入呼叫</li><li><code>SYN_RECV</code> - 一个连接请求已经到达，等待确认</li><li><code>SYN_SENT</code> - 应用已经开始，打开一个连接</li><li><code>ESTABLISHED</code> - 正常数据传输状态</li><li><code>FIN_WAIT1</code> - 应用说它已经完成</li><li><code>FIN_WAIT2</code> - 另一边已同意释放</li><li><code>ITMED_WAIT</code> - 等待所有分组死掉</li><li><code>CLOSING</code> - 两边同时尝试关闭</li><li><code>TIME_WAIT</code> - 另一边已初始化一个释放</li><li><code>LAST_ACK</code> - 等待所有分组死掉</li></ul><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>执行 <code>vim /etc/sysctl.conf</code>，并添加下面字段</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">net.ipv4.tcp_syncookies</span> <span class="token punctuation">=</span> <span class="token attr-value">1</span><span class="token attr-name">net.ipv4.tcp_tw_reuse</span> <span class="token punctuation">=</span> <span class="token attr-value">1</span><span class="token attr-name">net.ipv4.tcp_tw_recycle</span> <span class="token punctuation">=</span> <span class="token attr-value">1</span><span class="token attr-name">net.ipv4.tcp_fin_timeout</span> <span class="token punctuation">=</span> <span class="token attr-value">30</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行 /<code>sbin/sysctl -p</code> 让修改生效。</p><h2 id="上传文件大小限制"><a href="#上传文件大小限制" class="headerlink" title="上传文件大小限制"></a>上传文件大小限制</h2><h3 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h3><p>显示错误信息：<strong>413 Request Entity Too Large</strong>。</p><p>意思是请求的内容过大，浏览器不能正确显示。常见的情况是发送 <code>POST</code> 请求来上传大文件。</p><h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><ul><li>可以在 <code>http</code> 模块中设置：<code>client_max_body_size  20m;</code></li><li>可以在 <code>server</code> 模块中设置：<code>client_max_body_size  20m;</code></li><li>可以在 <code>location</code> 模块中设置：<code>client_max_body_size  20m;</code></li></ul><p>三者区别是：</p><ul><li>如果文大小限制设置在 <code>http</code> 模块中，则对所有 Nginx 收到的请求。</li><li>如果文大小限制设置在 <code>server</code> 模块中，则只对该 <code>server</code> 收到的请求生效。</li><li>如果文大小限制设置在 <code>location</code> 模块中，则只对匹配了 <code>location</code> 路由规则的请求生效。 </li></ul><h2 id="请求时间限制"><a href="#请求时间限制" class="headerlink" title="请求时间限制"></a>请求时间限制</h2><h3 id="问题现象-1"><a href="#问题现象-1" class="headerlink" title="问题现象"></a>问题现象</h3><p>请求时间较长，链接被重置页面刷新。常见的情况是：上传、下载大文件。</p><h3 id="解决方法-2"><a href="#解决方法-2" class="headerlink" title="解决方法"></a>解决方法</h3><p>修改超时时间</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/10/20/handbook/nginx/nginx-introduction/"/>
      <url>/2021/10/20/handbook/nginx/nginx-introduction/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-简介"><a href="#Nginx-简介" class="headerlink" title="Nginx 简介"></a>Nginx 简介</h1><h2 id="Ngnix-特点"><a href="#Ngnix-特点" class="headerlink" title="Ngnix 特点"></a>Ngnix 特点</h2><ul><li>模块化设计：良好的扩展性，可以通过模块方式进行功能扩展。</li><li>高可靠性：主控进程和 worker 是同步实现的，一个 worker 出现问题，会立刻启动另一个 worker。</li><li>内存消耗低：一万个长连接（keep-alive）,仅消耗 2.5MB 内存。</li><li>支持热部署：不用停止服务器，实现更新配置文件，更换日志文件、更新服务器程序版本。</li><li>并发能力强：官方数据每秒支持 5 万并发；</li><li>功能丰富：优秀的反向代理功能和灵活的负载均衡策略</li></ul><h2 id="Nginx-功能"><a href="#Nginx-功能" class="headerlink" title="Nginx 功能"></a>Nginx 功能</h2><ul><li>支持静态资源的 web 服务器。</li><li>http,smtp,pop3 协议的反向代理服务器、缓存、负载均衡；</li><li>支持 FASTCGI（fpm）</li><li>支持模块化，过滤器（让文本可以实现压缩，节约带宽）,ssl 及图像大小调整。</li><li>内置的健康检查功能</li><li>基于名称和 ip 的虚拟主机</li><li>定制访问日志</li><li>支持平滑升级</li><li>支持 KEEPALIVE</li><li>支持 url rewrite</li><li>支持路径别名</li><li>支持基于 IP 和用户名的访问控制。</li><li>支持传输速率限制，支持并发数限制。</li></ul><h2 id="Nginx-性能"><a href="#Nginx-性能" class="headerlink" title="Nginx 性能"></a>Nginx 性能</h2><p>Nginx 的高并发，官方测试支持 5 万并发连接。实际生产环境能到 2-3 万并发连接数。10000 个非活跃的 HTTP keep-alive 连接仅占用约 2.5MB 内存。三万并发连接下，10 个 Nginx 进程，消耗内存 150M。淘宝 tengine 团队测试结果是“24G 内存机器上，处理并发请求可达 200 万”。</p><h2 id="Ngnix-架构"><a href="#Ngnix-架构" class="headerlink" title="Ngnix 架构"></a>Ngnix 架构</h2><h3 id="主从模式"><a href="#主从模式" class="headerlink" title="主从模式"></a>主从模式</h3><p><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/pipbest/images/raw/master/snap/20200125161055.png" alt="img"></p><p><strong>Nginx 采用一主多从的主从架构</strong>。</p><p>但是这里 master 是使用 root 身份启动的，因为 nginx 要工作在 80 端口。而只有管理员才有权限启动小于低于 1023 的端口。master 主要是负责的作用只是启动 worker，加载配置文件，负责系统的平滑升级。其它的工作是交给 worker。那么当 worker 被启动之后，也只是负责一些 web 最简单的工作，而其他的工作都是有 worker 中调用的模块来实现的。</p><p>模块之间是以流水线的方式实现功能的。流水线，指的是一个用户请求，由多个模块组合各自的功能依次实现完成的。比如：第一个模块只负责分析请求首部，第二个模块只负责查找数据，第三个模块只负责压缩数据，依次完成各自工作。来实现整个工作的完成。</p><p>他们是如何实现热部署的呢？其实是这样的，我们前面说 master 不负责具体的工作，而是调用 worker 工作，他只是负责读取配置文件，因此当一个模块修改或者配置文件发生变化，是由 master 进行读取，因此此时不会影响到 worker 工作。在 master 进行读取配置文件之后，不会立即的把修改的配置文件告知 worker。而是让被修改的 worker 继续使用老的配置文件工作，当 worker 工作完毕之后，直接当掉这个子进程，更换新的子进程，使用新的规则。</p><h3 id="sendfile-机制"><a href="#sendfile-机制" class="headerlink" title="sendfile 机制"></a>sendfile 机制</h3><p><strong>Nginx 支持 sendfile 机制</strong>。</p><p>所谓 Sendfile 机制，是指：用户将请求发给内核，内核根据用户的请求调用相应用户进程，进程在处理时需要资源。此时再把请求发给内核（进程没有直接 IO 的能力），由内核加载数据。内核查找到数据之后，会把数据复制给用户进程，由用户进程对数据进行封装，之后交给内核，内核在进行 tcp/ip 首部的封装，最后再发给客户端。这个功能用户进程只是发生了一个封装报文的过程，却要绕一大圈。因此 nginx 引入了 sendfile 机制，使得内核在接受到数据之后，不再依靠用户进程给予封装，而是自己查找自己封装，减少了一个很长一段时间的浪费，这是一个提升性能的核心点。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://images2015.cnblogs.com/blog/820332/201512/820332-20151227195957171-1801771404.jpg"></div><p>以上内容摘自网友发布的文章，简单一句话是资源的处理，直接通过内核层进行数据传递，避免了数据传递到应用层，应用层再传递到内核层的开销。</p><p>目前高并发的处理，一般都采用 sendfile 模式。通过直接操作内核层数据，减少应用与内核层数据传递。</p><h3 id="I-O-复用机制"><a href="#I-O-复用机制" class="headerlink" title="I/O 复用机制"></a>I/O 复用机制</h3><p><strong>Nginx 通信模型采用 I/O 复用机制</strong>。</p><p>开发模型：epoll 和 kqueue。</p><p>支持的事件机制：kqueue、epoll、rt signals、/dev/poll 、event ports、select 以及 poll。</p><p>支持的 kqueue 特性包括 EV_CLEAR、EV_DISABLE、NOTE_LOWAT、EV_EOF，可用数据的数量，错误代码.</p><p>支持 sendfile、sendfile64 和 sendfilev;文件 AIO；DIRECTIO;支持 Accept-filters 和 TCP_DEFER_ACCEP.</p><p>以上概念较多，大家自行百度或谷歌，知识领域是网络通信（BIO,NIO,AIO）和多线程方面的知识。</p><h2 id="Nginx-负载均衡"><a href="#Nginx-负载均衡" class="headerlink" title="Nginx 负载均衡"></a>Nginx 负载均衡</h2><p>nginx 的负载均衡策略可以划分为两大类：内置策略和扩展策略。内置策略包含加权轮询和 ip hash，在默认情况下这两种策略会编译进 nginx 内核，只需在 nginx 配置中指明参数即可。扩展策略有很多，如 fair、通用 hash、consistent hash 等，默认不编译进 nginx 内核。由于在 nginx 版本升级中负载均衡的代码没有本质性的变化，因此下面将以 nginx1.0.15 稳定版为例，从源码角度分析各个策略。</p><h3 id="加权轮询"><a href="#加权轮询" class="headerlink" title="加权轮询"></a>加权轮询</h3><p><strong>Nginx 支持加权轮询（Weighted Round Robin）负载均衡</strong>。</p><p>轮询的原理很简单，首先我们介绍一下轮询的基本流程。如下是处理一次请求的流程图：</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://images2015.cnblogs.com/blog/820332/201512/820332-20151227201913984-412518987.jpg"></div><p>图中有两点需要注意，第一，如果可以把加权轮询算法分为先深搜索和先广搜索，那么 nginx 采用的是先深搜索算法，即将首先将请求都分给高权重的机器，直到该机器的权值降到了比其他机器低，才开始将请求分给下一个高权重的机器；第二，当所有后端机器都 down 掉时，nginx 会立即将所有机器的标志位清成初始状态，以避免造成所有的机器都处在 timeout 的状态，从而导致整个前端被夯住。</p><h3 id="Ip-Hash"><a href="#Ip-Hash" class="headerlink" title="Ip Hash"></a>Ip Hash</h3><p><strong>Nginx 支持 Ip Hash 负载均衡</strong>。</p><p>通过 Ip Hash 这种负载均衡策略，可以实现会话粘滞。</p><h3 id="Fair"><a href="#Fair" class="headerlink" title="Fair"></a>Fair</h3><p>fair 策略是扩展策略，默认不被编译进 nginx 内核。其原理是根据后端服务器的响应时间判断负载情况，从中选出负载最轻的机器进行分流。这种策略具有很强的自适应性，但是实际的网络环境往往不是那么简单，因此要慎用。</p><h3 id="通用-Hash、一致性-Hash"><a href="#通用-Hash、一致性-Hash" class="headerlink" title="通用 Hash、一致性 Hash"></a>通用 Hash、一致性 Hash</h3><p>这两种也是扩展策略，在具体的实现上有些差别，通用 hash 比较简单，可以以 nginx 内置的变量为 key 进行 hash，一致性 hash 采用了 nginx 内置的一致性 hash 环，可以支持 memcache。</p><h2 id="Nginx-场景"><a href="#Nginx-场景" class="headerlink" title="Nginx 场景"></a>Nginx 场景</h2><p>Ngnix 一般作为入口负载均衡或内部负载均衡，结合反向代理服务器使用。以下架构示例，仅供参考，具体使用根据场景而定。</p><h3 id="入口负载均衡架构"><a href="#入口负载均衡架构" class="headerlink" title="入口负载均衡架构"></a>入口负载均衡架构</h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://images2015.cnblogs.com/blog/820332/201512/820332-20151227202044781-2116477406.png"></div><p>Ngnix 服务器在用户访问的最前端。根据用户请求再转发到具体的应用服务器或二级负载均衡服务器（LVS）</p><h3 id="内部负载均衡架构"><a href="#内部负载均衡架构" class="headerlink" title="内部负载均衡架构"></a>内部负载均衡架构</h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://images2015.cnblogs.com/blog/820332/201512/820332-20151227202054421-2015542569.png"></div><p>LVS 作为入口负载均衡，将请求转发到二级 Ngnix 服务器，Ngnix 再根据请求转发到具体的应用服务器。</p><h3 id="Ngnix-高可用"><a href="#Ngnix-高可用" class="headerlink" title="Ngnix 高可用"></a>Ngnix 高可用</h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://images2015.cnblogs.com/blog/820332/201512/820332-20151227202100921-915093452.png"></div><p>分布式系统中，应用只部署一台服务器会存在单点故障，负载均衡同样有类似的问题。一般可采用主备或负载均衡设备集群的方式节约单点故障或高并发请求分流。</p><p>Ngnix 高可用，至少包含两个 Ngnix 服务器，一台主服务器，一台备服务器，之间使用 Keepalived 做健康监控和故障检测。开放 VIP 端口，通过防火墙进行外部映射。</p><p>DNS 解析公网的 IP 实际为 VIP。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/10/20/handbook/nginx/nginx-ops/"/>
      <url>/2021/10/20/handbook/nginx/nginx-ops/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-运维"><a href="#Nginx-运维" class="headerlink" title="Nginx 运维"></a>Nginx 运维</h1><!-- TOC depthFrom:2 depthTo:3 --><ul><li><a href="#windows-%E5%AE%89%E8%A3%85">Windows 安装</a></li><li><a href="#linux-%E5%AE%89%E8%A3%85">Linux 安装</a><ul><li><a href="#rpm-%E5%8C%85%E6%96%B9%E5%BC%8F%E6%8E%A8%E8%8D%90">rpm 包方式（推荐）</a></li><li><a href="#%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%96%B9%E5%BC%8F">源码编译方式</a></li></ul></li><li><a href="#linux-%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8">Linux 开机自启动</a><ul><li><a href="#rpm-%E5%8C%85%E6%96%B9%E5%BC%8F">rpm 包方式</a></li><li><a href="#%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%96%B9%E5%BC%8F-1">源码编译方式</a></li></ul></li><li><a href="#%E8%84%9A%E6%9C%AC">脚本</a></li><li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li></ul><!-- /TOC --><h2 id="一、普通安装"><a href="#一、普通安装" class="headerlink" title="一、普通安装"></a>一、普通安装</h2><h3 id="Windows-安装"><a href="#Windows-安装" class="headerlink" title="Windows 安装"></a>Windows 安装</h3><p>（1）进入<a href="https://nginx.org/en/download.html">官方下载地址</a>，选择合适版本（nginx/Windows-xxx）。</p><p><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/pipbest/images/raw/master/snap/20180920181023092347.png" alt="img"></p><p>（2）解压到本地</p><p><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/pipbest/images/raw/master/snap/20180920181023092044.png" alt="img"></p><p>（3）启动</p><p>下面以 C 盘根目录为例说明下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> C:<span class="token function">cd</span> C:\nginx-0.8.54 start nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注：Nginx / Win32 是运行在一个控制台程序，而非 windows 服务方式的。服务器方式目前还是开发尝试中。</p></blockquote><h3 id="Linux-安装"><a href="#Linux-安装" class="headerlink" title="Linux 安装"></a>Linux 安装</h3><h4 id="rpm-包方式（推荐）"><a href="#rpm-包方式（推荐）" class="headerlink" title="rpm 包方式（推荐）"></a>rpm 包方式（推荐）</h4><p>（1）进入<a href="http://nginx.org/packages/">下载页面</a>，选择合适版本下载。</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">wget</span> http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）安装 nginx rpm 包</p><p>nginx rpm 包实际上安装的是 nginx 的 yum 源。</p><pre class="line-numbers language-bash"><code class="language-bash">$ rpm -ivh nginx-*.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（3）正式安装 rpm 包</p><pre class="line-numbers language-bash"><code class="language-bash">$ yum <span class="token function">install</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（4）关闭防火墙</p><pre class="line-numbers language-bash"><code class="language-bash">$ firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>80/tcp --permanent$ firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="源码编译方式"><a href="#源码编译方式" class="headerlink" title="源码编译方式"></a>源码编译方式</h4><h5 id="安装编译工具及库"><a href="#安装编译工具及库" class="headerlink" title="安装编译工具及库"></a>安装编译工具及库</h5><p>Nginx 源码的编译依赖于 gcc 以及一些库文件，所以必须提前安装。</p><pre class="line-numbers language-bash"><code class="language-bash">$ yum -y <span class="token function">install</span> <span class="token function">make</span> zlib zlib-devel gcc-c++ libtool  openssl openssl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Nginx 依赖 pcre 库，安装步骤如下：</p><p>（1）下载解压到本地</p><p>进入<a href="https://sourceforge.net/projects/pcre/files/pcre/">pcre 官网下载页面</a>，选择合适的版本下载。</p><p>我选择的是 8.35 版本：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">wget</span> -O /opt/pcre/pcre-8.35.tar.gz http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz<span class="token function">cd</span> /opt/pcre<span class="token function">tar</span> zxvf pcre-8.35.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（2）编译安装</p><p>执行以下命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> /opt/pcre/pcre-8.35./configure<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（3）检验是否安装成功</p><p>执行 <code>pcre-config --version</code> 命令。</p><h5 id="编译安装-Nginx"><a href="#编译安装-Nginx" class="headerlink" title="编译安装 Nginx"></a>编译安装 Nginx</h5><p>安装步骤如下：</p><p>（1）下载解压到本地</p><p>进入官网下载地址：<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a> ，选择合适的版本下载。</p><p>我选择的是 1.12.2 版本：<a href="http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz">http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</a></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">wget</span> -O /opt/nginx/nginx-1.12.2.tar.gz http://nginx.org/download/nginx-1.12.2.tar.gz<span class="token function">cd</span> /opt/nginx<span class="token function">tar</span> zxvf nginx-1.12.2.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（2）编译安装</p><p>执行以下命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> /opt/nginx/nginx-1.12.2./configure --with-http_stub_status_module --with-http_ssl_module --with-pcre<span class="token operator">=</span>/opt/pcre/pcre-8.35<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（3）关闭防火墙</p><pre class="line-numbers language-bash"><code class="language-bash">$ firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>80/tcp --permanent$ firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（4） 启动 Nginx</p><p>安装成功后，直接执行 <code>nginx</code> 命令即可启动 nginx。</p><p>启动后，访问站点：</p><p><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/pipbest/images/raw/master/snap/20180920181016133223.png" alt="img"></p><h4 id="Linux-开机自启动"><a href="#Linux-开机自启动" class="headerlink" title="Linux 开机自启动"></a>Linux 开机自启动</h4><p>Centos7 以上是用 Systemd 进行系统初始化的，Systemd 是 Linux 系统中最新的初始化系统（init），它主要的设计目标是克服 sysvinit 固有的缺点，提高系统的启动速度。Systemd 服务文件以 .service 结尾。</p><h5 id="rpm-包方式"><a href="#rpm-包方式" class="headerlink" title="rpm 包方式"></a>rpm 包方式</h5><p>如果是通过 rpm 包安装的，会自动创建 nginx.service 文件。</p><p>直接用命令：</p><pre class="line-numbers language-bash"><code class="language-bash">$ systemctl <span class="token function">enable</span> nginx.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置开机启动即可。</p><h5 id="源码编译方式-1"><a href="#源码编译方式-1" class="headerlink" title="源码编译方式"></a>源码编译方式</h5><p>如果采用源码编译方式，需要手动创建 nginx.service 文件。</p><h2 id="二、Docker-安装"><a href="#二、Docker-安装" class="headerlink" title="二、Docker 安装"></a>二、Docker 安装</h2><ul><li>官网镜像：<a href="https://hub.docker.com/_/nginx/">https://hub.docker.com/_/nginx/</a></li><li>下载镜像：<code>docker pull nginx</code></li><li>启动容器：<code>docker run --name my-nginx -p 80:80 -v /data/docker/nginx/logs:/var/log/nginx -v /data/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx</code></li><li>重新加载配置（目前测试无效，只能重启服务）：<code>docker exec -it my-nginx nginx -s reload</code></li><li>停止服务：<code>docker exec -it my-nginx nginx -s stop</code> 或者：<code>docker stop my-nginx</code></li><li>重新启动服务：<code>docker restart my-nginx</code></li></ul><h2 id="三、脚本"><a href="#三、脚本" class="headerlink" title="三、脚本"></a>三、脚本</h2><blockquote><p>CentOS7 环境安装脚本：<a href="https://github.com/dunwu/linux-tutorial/tree/master/codes/linux/soft">软件运维配置脚本集合</a></p></blockquote><p><strong>安装说明</strong></p><ul><li>采用编译方式安装 Nginx, 并将其注册为 systemd 服务</li><li>安装路径为：<code>/usr/local/nginx</code></li><li>默认下载安装 <code>1.16.0</code> 版本</li></ul><p><strong>使用方法</strong></p><ul><li>默认安装 - 执行以下任意命令即可：</li></ul><pre class="line-numbers language-shell"><code class="language-shell">curl -o- https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/nginx-install.sh | bashwget -qO- https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/nginx-install.sh | bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>自定义安装 - 下载脚本到本地，并按照以下格式执行：</li></ul><pre class="line-numbers language-bash"><code class="language-bash">sh nginx-install.sh <span class="token punctuation">[</span>version<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="http://www.dohooe.com/2016/03/03/352.html?utm_source=tuicool&amp;utm_medium=referral">http://www.dohooe.com/2016/03/03/352.html?utm_source=tuicool&amp;utm_medium=referral</a></li><li><a href="https://blog.51cto.com/kling/1253474">nginx+keepalived实现nginx双主高可用的负载均衡</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/10/20/handbook/nginx/nginx-quickstart/"/>
      <url>/2021/10/20/handbook/nginx/nginx-quickstart/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-入门"><a href="#Nginx-入门" class="headerlink" title="Nginx 入门"></a>Nginx 入门</h1><blockquote><p>本文是一个 Nginx 入门教程，目的在于帮助新手快速入门 Nginx。</p></blockquote><h2 id="一、Nginx-简介"><a href="#一、Nginx-简介" class="headerlink" title="一、Nginx 简介"></a>一、Nginx 简介</h2><p><strong>什么是 Nginx?</strong></p><p><strong>Nginx (engine x)</strong> 是一款轻量级的 Web 服务器 、反向代理服务器及电子邮件（IMAP/POP3）代理服务器。</p><p><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/pipbest/images/raw/master/cs/web/nginx/nginx.jpg" alt="img"></p><p><strong>什么是反向代理？</strong></p><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p><p><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/pipbest/images/raw/master/cs/web/nginx/reverse-proxy.png" alt="img"></p><h2 id="二、Nginx-入门"><a href="#二、Nginx-入门" class="headerlink" title="二、Nginx 入门"></a>二、Nginx 入门</h2><blockquote><p>详细安装方法请参考：<a href="docs/nginx-install.md">Nginx 运维</a></p></blockquote><p>nginx 的使用比较简单，就是几条命令。</p><p>常用到的命令如下：</p><pre class="line-numbers language-batch"><code class="language-batch"><span class="token command"><span class="token keyword">nginx</span> <span class="token parameter attr-name">-s</span> stop       快速关闭Nginx，可能不保存相关信息，并迅速终止web服务。</span><span class="token command"><span class="token keyword">nginx</span> <span class="token parameter attr-name">-s</span> quit       平稳关闭Nginx，保存相关信息，有安排的结束web服务。</span><span class="token command"><span class="token keyword">nginx</span> <span class="token parameter attr-name">-s</span> reload     因改变了Nginx相关配置，需要重新加载配置而重载。</span><span class="token command"><span class="token keyword">nginx</span> <span class="token parameter attr-name">-s</span> reopen     重新打开日志文件。</span><span class="token command"><span class="token keyword">nginx</span> <span class="token parameter attr-name">-c</span> filename   为 Nginx 指定一个配置文件，来代替缺省的。</span><span class="token command"><span class="token keyword">nginx</span> <span class="token parameter attr-name">-t</span>            不运行，仅仅测试配置文件。nginx 将检查配置文件的语法的正确性，并尝试打开配置文件中所引用到的文件。</span><span class="token command"><span class="token keyword">nginx</span> <span class="token parameter attr-name">-v</span>            显示 nginx 的版本。</span><span class="token command"><span class="token keyword">nginx</span> <span class="token parameter attr-name">-V</span>            显示 nginx 的版本，编译器版本和配置参数。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果不想每次都敲命令，可以在 nginx 安装目录下新添一个启动批处理文件<strong>startup.bat</strong>，双击即可运行。内容如下：</p><pre class="line-numbers language-batch"><code class="language-batch"><span class="token operator">@</span><span class="token command"><span class="token keyword">echo</span> off</span><span class="token comment" spellcheck="true">rem 如果启动前已经启动nginx并记录下pid文件，会kill指定进程</span><span class="token command"><span class="token keyword">nginx</span>.exe <span class="token parameter attr-name">-s</span> stop</span><span class="token comment" spellcheck="true">rem 测试配置文件语法正确性</span><span class="token command"><span class="token keyword">nginx</span>.exe <span class="token parameter attr-name">-t</span> <span class="token parameter attr-name">-c</span> conf/nginx.conf</span><span class="token comment" spellcheck="true">rem 显示版本信息</span><span class="token command"><span class="token keyword">nginx</span>.exe <span class="token parameter attr-name">-v</span></span><span class="token comment" spellcheck="true">rem 按照指定配置去启动nginx</span><span class="token command"><span class="token keyword">nginx</span>.exe <span class="token parameter attr-name">-c</span> conf/nginx.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果是运行在 Linux 下，写一个 shell 脚本，大同小异。</p><h2 id="三、Nginx-实战"><a href="#三、Nginx-实战" class="headerlink" title="三、Nginx 实战"></a>三、Nginx 实战</h2><p>我始终认为，各种开发工具的配置还是结合实战来讲述，会让人更易理解。</p><h3 id="Http-反向代理"><a href="#Http-反向代理" class="headerlink" title="Http 反向代理"></a>Http 反向代理</h3><p>我们先实现一个小目标：不考虑复杂的配置，仅仅是完成一个 http 反向代理。</p><p><code>nginx.conf</code> 配置文件如下：</p><blockquote><p><strong><em>注：<code>conf/nginx.conf</code> 是 nginx 的默认配置文件。你也可以使用 nginx -c 指定你的配置文件</em></strong></p></blockquote><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">#运行用户</span><span class="token comment" spellcheck="true">#user somebody;</span><span class="token comment" spellcheck="true">#启动进程,通常设置成和cpu的数量相等</span><span class="token keyword">worker_processes</span>  <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#全局错误日志</span><span class="token keyword">error_log</span>  D<span class="token punctuation">:</span><span class="token operator">/</span>Tools<span class="token operator">/</span>nginx<span class="token number">-1.10</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>logs<span class="token operator">/</span>error<span class="token punctuation">.</span>log<span class="token punctuation">;</span><span class="token keyword">error_log</span>  D<span class="token punctuation">:</span><span class="token operator">/</span>Tools<span class="token operator">/</span>nginx<span class="token number">-1.10</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>logs<span class="token operator">/</span>notice<span class="token punctuation">.</span>log  notice<span class="token punctuation">;</span><span class="token keyword">error_log</span>  D<span class="token punctuation">:</span><span class="token operator">/</span>Tools<span class="token operator">/</span>nginx<span class="token number">-1.10</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>logs<span class="token operator">/</span>info<span class="token punctuation">.</span>log  info<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#PID文件，记录当前启动的nginx的进程ID</span><span class="token keyword">pid</span>        D<span class="token punctuation">:</span><span class="token operator">/</span>Tools<span class="token operator">/</span>nginx<span class="token number">-1.10</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>logs<span class="token operator">/</span>nginx<span class="token punctuation">.</span><span class="token keyword">pid</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#工作模式及连接数上限</span><span class="token keyword">events</span> <span class="token punctuation">{</span>    <span class="token keyword">worker_connections</span> <span class="token number">1024</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#单个后台worker process进程的最大并发链接数</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#设定http服务器，利用它的反向代理功能提供负载均衡支持</span><span class="token keyword">http</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">#设定mime类型(邮件支持类型),类型由mime.types文件定义</span>    <span class="token keyword">include</span>       D<span class="token punctuation">:</span><span class="token operator">/</span>Tools<span class="token operator">/</span>nginx<span class="token number">-1.10</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>conf<span class="token operator">/</span>mime<span class="token punctuation">.</span><span class="token keyword">types</span><span class="token punctuation">;</span>    <span class="token keyword">default_type</span>  application<span class="token operator">/</span>octet<span class="token operator">-</span>stream<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#设定日志</span>    <span class="token keyword">log_format</span>  main  <span class="token string">'[$remote_addr] - [$remote_user] [$time_local] "$request" '</span>                      <span class="token string">'$status $body_bytes_sent "$http_referer" '</span>                      <span class="token string">'"$http_user_agent" "$http_x_forwarded_for"'</span><span class="token punctuation">;</span>    <span class="token keyword">access_log</span>    D<span class="token punctuation">:</span><span class="token operator">/</span>Tools<span class="token operator">/</span>nginx<span class="token number">-1.10</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span>log main<span class="token punctuation">;</span>    rewrite_log     on<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，</span>    <span class="token comment" spellcheck="true">#必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span>    <span class="token keyword">sendfile</span>        on<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#tcp_nopush     on;</span>    <span class="token comment" spellcheck="true">#连接超时时间</span>    <span class="token keyword">keepalive_timeout</span>  <span class="token number">120</span><span class="token punctuation">;</span>    <span class="token keyword">tcp_nodelay</span>        on<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#gzip压缩开关</span>    <span class="token comment" spellcheck="true">#gzip  on;</span>    <span class="token comment" spellcheck="true">#设定实际的服务器列表</span>    <span class="token keyword">upstream</span> zp_server1<span class="token punctuation">{</span>        <span class="token keyword">server</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">8089</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">#HTTP服务器</span>    <span class="token keyword">server</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">#监听80端口，80端口是知名端口号，用于HTTP协议</span>        <span class="token keyword">listen</span>       <span class="token number">80</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#定义使用www.xx.com访问</span>        <span class="token keyword">server_name</span>  www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#首页</span>        <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>html        <span class="token comment" spellcheck="true">#指向webapp的目录</span>        <span class="token keyword">root</span> D<span class="token punctuation">:</span>\01_Workspace\Project\github\zp\SpringNotes\spring<span class="token operator">-</span>security\spring<span class="token operator">-</span>shiro\src\main\webapp<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#编码格式</span>        <span class="token keyword">charset</span> utf<span class="token number">-8</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#代理配置参数</span>        <span class="token keyword">proxy_connect_timeout</span> <span class="token number">180</span><span class="token punctuation">;</span>        <span class="token keyword">proxy_send_timeout</span> <span class="token number">180</span><span class="token punctuation">;</span>        <span class="token keyword">proxy_read_timeout</span> <span class="token number">180</span><span class="token punctuation">;</span>        <span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span><span class="token punctuation">;</span>        <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Forwarder<span class="token operator">-</span>For <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#反向代理的路径（和upstream绑定），location 后面设置映射的路径</span>        <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>            <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>zp_server1<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#静态文件，nginx自己处理</span>        <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">^</span><span class="token operator">/</span><span class="token punctuation">(</span>images<span class="token operator">|</span>javascript<span class="token operator">|</span>js<span class="token operator">|</span>css<span class="token operator">|</span>flash<span class="token operator">|</span>media<span class="token operator">|</span>static<span class="token punctuation">)</span><span class="token operator">/</span> <span class="token punctuation">{</span>            <span class="token keyword">root</span> D<span class="token punctuation">:</span>\01_Workspace\Project\github\zp\SpringNotes\spring<span class="token operator">-</span>security\spring<span class="token operator">-</span>shiro\src\main\webapp\views<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span>            <span class="token keyword">expires</span> 30d<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#设定查看Nginx状态的地址</span>        <span class="token keyword">location</span> <span class="token operator">/</span>NginxStatus <span class="token punctuation">{</span>            <span class="token keyword">stub_status</span>           on<span class="token punctuation">;</span>            <span class="token keyword">access_log</span>            on<span class="token punctuation">;</span>            <span class="token keyword">auth_basic</span>            <span class="token string">"NginxStatus"</span><span class="token punctuation">;</span>            <span class="token keyword">auth_basic_user_file</span>  conf<span class="token operator">/</span>htpasswd<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#禁止访问 .htxxx 文件</span>        <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>\<span class="token punctuation">.</span>ht <span class="token punctuation">{</span>            <span class="token keyword">deny</span> all<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#错误处理页面（可选择性配置）</span>        <span class="token comment" spellcheck="true">#error_page   404              /404.html;</span>        <span class="token comment" spellcheck="true">#error_page   500 502 503 504  /50x.html;</span>        <span class="token comment" spellcheck="true">#location = /50x.html {</span>        <span class="token comment" spellcheck="true">#    root   html;</span>        <span class="token comment" spellcheck="true">#}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>好了，让我们来试试吧：</p><ol><li> 启动 webapp，注意启动绑定的端口要和 nginx 中的 <code>upstream</code> 设置的端口保持一致。</li><li> 更改 host：在 C:\Windows\System32\drivers\etc 目录下的 host 文件中添加一条 DNS 记录</li></ol><pre><code>127.0.0.1 www.pipbest.com</code></pre><ol start="3"><li> 启动前文中 startup.bat 的命令</li><li> 在浏览器中访问 <a href="http://www.pipbest.com,不出意外,已经可以访问了./">www.pipbest.com，不出意外，已经可以访问了。</a></li></ol><h3 id="Https-反向代理"><a href="#Https-反向代理" class="headerlink" title="Https 反向代理"></a>Https 反向代理</h3><p>一些对安全性要求比较高的站点，可能会使用 HTTPS（一种使用 ssl 通信标准的安全 HTTP 协议）。</p><p>这里不科普 HTTP 协议和 SSL 标准。但是，使用 nginx 配置 https 需要知道几点：</p><ul><li>HTTPS 的固定端口号是 443，不同于 HTTP 的 80 端口</li><li>SSL 标准需要引入安全证书，所以在 nginx.conf 中你需要指定证书和它对应的 key</li></ul><p>其他和 http 反向代理基本一样，只是在 <code>Server</code> 部分配置有些不同。</p><pre class="line-numbers language-nginx"><code class="language-nginx">  <span class="token comment" spellcheck="true">#HTTP服务器</span>  <span class="token keyword">server</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">#监听443端口。443为知名端口号，主要用于HTTPS协议</span>      <span class="token keyword">listen</span>       <span class="token number">443</span> <span class="token keyword">ssl</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">#定义使用www.xx.com访问</span>      <span class="token keyword">server_name</span>  www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">#ssl证书文件位置(常见证书文件格式为：crt/pem)</span>      <span class="token keyword">ssl_certificate</span>      cert<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">#ssl证书key位置</span>      <span class="token keyword">ssl_certificate_key</span>  cert<span class="token punctuation">.</span>key<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">#ssl配置参数（选择性配置）</span>      <span class="token keyword">ssl_session_cache</span>    shared<span class="token punctuation">:</span><span class="token keyword">SSL</span><span class="token punctuation">:</span>1m<span class="token punctuation">;</span>      <span class="token keyword">ssl_session_timeout</span>  5m<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">#数字签名，此处使用MD5</span>      <span class="token keyword">ssl_ciphers</span>  HIGH<span class="token punctuation">:</span><span class="token operator">!</span>aNULL<span class="token punctuation">:</span><span class="token operator">!</span>MD5<span class="token punctuation">;</span>      <span class="token keyword">ssl_prefer_server_ciphers</span>  on<span class="token punctuation">;</span>      <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>          <span class="token keyword">root</span>   <span class="token operator">/</span><span class="token keyword">root</span><span class="token punctuation">;</span>          <span class="token keyword">index</span>  <span class="token keyword">index</span><span class="token punctuation">.</span>html <span class="token keyword">index</span><span class="token punctuation">.</span>htm<span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>前面的例子中，代理仅仅指向一个服务器。</p><p>但是，网站在实际运营过程中，大部分都是以集群的方式运行，这时需要使用负载均衡来分流。</p><p>nginx 也可以实现简单的负载均衡功能。</p><p><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/pipbest/images/raw/master/cs/web/nginx/nginx-load-balance.png" alt="img"></p><p>假设这样一个应用场景：将应用部署在 192.168.1.11:80、192.168.1.12:80、192.168.1.13:80 三台 linux 环境的服务器上。网站域名叫 <a href="http://www.pipbest.com,公网/">www.pipbest.com，公网</a> IP 为 192.168.1.11。在公网 IP 所在的服务器上部署 nginx，对所有请求做负载均衡处理（下面例子中使用的是加权轮询策略）。</p><p>nginx.conf 配置如下：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">http</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">#设定mime类型,类型由mime.type文件定义</span>    <span class="token keyword">include</span>       <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>mime<span class="token punctuation">.</span><span class="token keyword">types</span><span class="token punctuation">;</span>    <span class="token keyword">default_type</span>  application<span class="token operator">/</span>octet<span class="token operator">-</span>stream<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#设定日志格式</span>    <span class="token keyword">access_log</span>    <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>access<span class="token punctuation">.</span>log<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#设定负载均衡的服务器列表</span>    <span class="token keyword">upstream</span> load_balance_server <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">#weigth参数表示权值，权值越高被分配到的几率越大</span>        <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.11</span><span class="token punctuation">:</span><span class="token number">80</span>   weight<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>        <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.12</span><span class="token punctuation">:</span><span class="token number">80</span>   weight<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.13</span><span class="token punctuation">:</span><span class="token number">80</span>   weight<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">#HTTP服务器</span>   <span class="token keyword">server</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">#侦听80端口</span>        <span class="token keyword">listen</span>       <span class="token number">80</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#定义使用www.xx.com访问</span>        <span class="token keyword">server_name</span>  www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#对所有请求进行负载均衡请求</span>        <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>            <span class="token keyword">root</span>        <span class="token operator">/</span><span class="token keyword">root</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">#定义服务器的默认网站根目录位置</span>            <span class="token keyword">index</span>       <span class="token keyword">index</span><span class="token punctuation">.</span>html <span class="token keyword">index</span><span class="token punctuation">.</span>htm<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">#定义首页索引文件的名称</span>            <span class="token keyword">proxy_pass</span>  <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>load_balance_server <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#请求转向load_balance_server 定义的服务器列表</span>            <span class="token comment" spellcheck="true">#以下是一些反向代理的配置(可选择性配置)</span>            <span class="token comment" spellcheck="true">#proxy_redirect off;</span>            <span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span><span class="token punctuation">;</span>            <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Real<span class="token operator">-</span>IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>            <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>            <span class="token keyword">proxy_connect_timeout</span> <span class="token number">90</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">#nginx跟后端服务器连接超时时间(代理连接超时)</span>            <span class="token keyword">proxy_send_timeout</span> <span class="token number">90</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">#后端服务器数据回传时间(代理发送超时)</span>            <span class="token keyword">proxy_read_timeout</span> <span class="token number">90</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">#连接成功后，后端服务器响应时间(代理接收超时)</span>            <span class="token keyword">proxy_buffer_size</span> 4k<span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span>            <span class="token keyword">proxy_buffers</span> <span class="token number">4</span> 32k<span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span>            <span class="token keyword">proxy_busy_buffers_size</span> 64k<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">#高负荷下缓冲大小（proxy_buffers*2）</span>            <span class="token keyword">proxy_temp_file_write_size</span> 64k<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span>            <span class="token keyword">client_max_body_size</span> 10m<span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">#允许客户端请求的最大单文件字节数</span>            <span class="token keyword">client_body_buffer_size</span> 128k<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">#缓冲区代理缓冲用户端请求的最大字节数</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="负载均衡策略"><a href="#负载均衡策略" class="headerlink" title="负载均衡策略"></a>负载均衡策略</h4><p>Nginx 提供了多种负载均衡策略，让我们来一一了解一下：</p><p>负载均衡策略在各种分布式系统中基本上原理一致，对于原理有兴趣，不妨参考 <a href="https://dunwu.github.io/blog/design/theory/load-balance-theory/">负载均衡</a></p><h5 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h5><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> bck_testing_01 <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true"># 默认所有服务器权重为 1</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.220</span><span class="token punctuation">:</span><span class="token number">8080</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.221</span><span class="token punctuation">:</span><span class="token number">8080</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.222</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="加权轮询"><a href="#加权轮询" class="headerlink" title="加权轮询"></a>加权轮询</h5><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> bck_testing_01 <span class="token punctuation">{</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.220</span><span class="token punctuation">:</span><span class="token number">8080</span>   weight<span class="token operator">=</span><span class="token number">3</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.221</span><span class="token punctuation">:</span><span class="token number">8080</span>              <span class="token comment" spellcheck="true"># default weight=1</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.222</span><span class="token punctuation">:</span><span class="token number">8080</span>              <span class="token comment" spellcheck="true"># default weight=1</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="最少连接"><a href="#最少连接" class="headerlink" title="最少连接"></a>最少连接</h5><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> bck_testing_01 <span class="token punctuation">{</span>  least_conn<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true"># with default weight for all (weight=1)</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.220</span><span class="token punctuation">:</span><span class="token number">8080</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.221</span><span class="token punctuation">:</span><span class="token number">8080</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.222</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="加权最少连接"><a href="#加权最少连接" class="headerlink" title="加权最少连接"></a>加权最少连接</h5><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> bck_testing_01 <span class="token punctuation">{</span>  least_conn<span class="token punctuation">;</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.220</span><span class="token punctuation">:</span><span class="token number">8080</span>   weight<span class="token operator">=</span><span class="token number">3</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.221</span><span class="token punctuation">:</span><span class="token number">8080</span>              <span class="token comment" spellcheck="true"># default weight=1</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.222</span><span class="token punctuation">:</span><span class="token number">8080</span>              <span class="token comment" spellcheck="true"># default weight=1</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="IP-Hash"><a href="#IP-Hash" class="headerlink" title="IP Hash"></a>IP Hash</h5><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> bck_testing_01 <span class="token punctuation">{</span>  <span class="token keyword">ip_hash</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true"># with default weight for all (weight=1)</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.220</span><span class="token punctuation">:</span><span class="token number">8080</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.221</span><span class="token punctuation">:</span><span class="token number">8080</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.222</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="普通-Hash"><a href="#普通-Hash" class="headerlink" title="普通 Hash"></a>普通 Hash</h5><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> bck_testing_01 <span class="token punctuation">{</span>  hash <span class="token variable">$request_uri</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true"># with default weight for all (weight=1)</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.220</span><span class="token punctuation">:</span><span class="token number">8080</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.221</span><span class="token punctuation">:</span><span class="token number">8080</span>  <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">250.222</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="网站有多个-webapp-的配置"><a href="#网站有多个-webapp-的配置" class="headerlink" title="网站有多个 webapp 的配置"></a>网站有多个 webapp 的配置</h3><p>当一个网站功能越来越丰富时，往往需要将一些功能相对独立的模块剥离出来，独立维护。这样的话，通常，会有多个 webapp。</p><p>举个例子：假如 <a href="http://www.pipbest.com/">www.pipbest.com</a> 站点有好几个 webapp，finance（金融）、product（产品）、admin（用户中心）。访问这些应用的方式通过上下文(context)来进行区分:</p><p><a href="http://www.pipbest.com/finance/">www.pipbest.com/finance/</a></p><p><a href="http://www.pipbest.com/product/">www.pipbest.com/product/</a></p><p><a href="http://www.pipbest.com/admin/">www.pipbest.com/admin/</a></p><p>我们知道，http 的默认端口号是 80，如果在一台服务器上同时启动这 3 个 webapp 应用，都用 80 端口，肯定是不成的。所以，这三个应用需要分别绑定不同的端口号。</p><p>那么，问题来了，用户在实际访问 <a href="http://www.pipbest.com/">www.pipbest.com</a> 站点时，访问不同 webapp，总不会还带着对应的端口号去访问吧。所以，你再次需要用到反向代理来做处理。</p><p>配置也不难，来看看怎么做吧：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">http</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">#此处省略一些基本配置</span>    <span class="token keyword">upstream</span> product_server<span class="token punctuation">{</span>        <span class="token keyword">server</span> www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">8081</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">upstream</span> admin_server<span class="token punctuation">{</span>        <span class="token keyword">server</span> www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">8082</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">upstream</span> finance_server<span class="token punctuation">{</span>        <span class="token keyword">server</span> www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">8083</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">server</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">#此处省略一些基本配置</span>        <span class="token comment" spellcheck="true">#默认指向product的server</span>        <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>            <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>product_server<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">location</span> <span class="token operator">/</span>product<span class="token operator">/</span><span class="token punctuation">{</span>            <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>product_server<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">location</span> <span class="token operator">/</span>admin<span class="token operator">/</span> <span class="token punctuation">{</span>            <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>admin_server<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">location</span> <span class="token operator">/</span>finance<span class="token operator">/</span> <span class="token punctuation">{</span>            <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>finance_server<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="静态站点"><a href="#静态站点" class="headerlink" title="静态站点"></a>静态站点</h3><p>有时候，我们需要配置静态站点(即 html 文件和一堆静态资源)。</p><p>举例来说：如果所有的静态资源都放在了 <code>/app/dist</code> 目录下，我们只需要在 <code>nginx.conf</code> 中指定首页以及这个站点的 host 即可。</p><p>配置如下：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">worker_processes</span>  <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">events</span> <span class="token punctuation">{</span>    <span class="token keyword">worker_connections</span>  <span class="token number">1024</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">http</span> <span class="token punctuation">{</span>    <span class="token keyword">include</span>       mime<span class="token punctuation">.</span><span class="token keyword">types</span><span class="token punctuation">;</span>    <span class="token keyword">default_type</span>  application<span class="token operator">/</span>octet<span class="token operator">-</span>stream<span class="token punctuation">;</span>    <span class="token keyword">sendfile</span>        on<span class="token punctuation">;</span>    <span class="token keyword">keepalive_timeout</span>  <span class="token number">65</span><span class="token punctuation">;</span>    <span class="token keyword">gzip</span> on<span class="token punctuation">;</span>    <span class="token keyword">gzip_types</span> text<span class="token operator">/</span>plain application<span class="token operator">/</span>x<span class="token operator">-</span>javascript text<span class="token operator">/</span>css application<span class="token operator">/</span>xml text<span class="token operator">/</span>javascript application<span class="token operator">/</span>javascript image<span class="token operator">/</span>jpeg image<span class="token operator">/</span>gif image<span class="token operator">/</span>png<span class="token punctuation">;</span>    <span class="token keyword">gzip_vary</span> on<span class="token punctuation">;</span>    <span class="token keyword">server</span> <span class="token punctuation">{</span>        <span class="token keyword">listen</span>       <span class="token number">80</span><span class="token punctuation">;</span>        <span class="token keyword">server_name</span>  static<span class="token punctuation">.</span>zp<span class="token punctuation">.</span>cn<span class="token punctuation">;</span>        <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>            <span class="token keyword">root</span> <span class="token operator">/</span>app<span class="token operator">/</span>dist<span class="token punctuation">;</span>            <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">#转发任何请求到 index.html</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后，添加 HOST：</p><p>127.0.0.1 static.zp.cn</p><p>此时，在本地浏览器访问 static.zp.cn ，就可以访问静态站点了。</p><h3 id="搭建文件服务器"><a href="#搭建文件服务器" class="headerlink" title="搭建文件服务器"></a>搭建文件服务器</h3><p>有时候，团队需要归档一些数据或资料，那么文件服务器必不可少。使用 Nginx 可以非常快速便捷的搭建一个简易的文件服务。</p><p>Nginx 中的配置要点：</p><ul><li>将 autoindex 开启可以显示目录，默认不开启。</li><li>将 autoindex_exact_size 开启可以显示文件的大小。</li><li>将 autoindex_localtime 开启可以显示文件的修改时间。</li><li>root 用来设置开放为文件服务的根路径。</li><li>charset 设置为 <code>charset utf-8,gbk;</code>，可以避免中文乱码问题（windows 服务器下设置后，依然乱码，本人暂时没有找到解决方法）。</li></ul><p>一个最简化的配置如下：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">autoindex</span> on<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 显示目录</span><span class="token keyword">autoindex_exact_size</span> on<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 显示文件大小</span><span class="token keyword">autoindex_localtime</span> on<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 显示文件时间</span><span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">charset</span>      utf<span class="token number">-8</span><span class="token punctuation">,</span>gbk<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># windows 服务器下设置后，依然乱码，暂时无解</span>    <span class="token keyword">listen</span>       <span class="token number">9050</span> default_server<span class="token punctuation">;</span>    <span class="token keyword">listen</span>       <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">9050</span> default_server<span class="token punctuation">;</span>    <span class="token keyword">server_name</span>  _<span class="token punctuation">;</span>    <span class="token keyword">root</span>         <span class="token operator">/</span>share<span class="token operator">/</span>fs<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解决跨域"><a href="#解决跨域" class="headerlink" title="解决跨域"></a>解决跨域</h3><p>web 领域开发中，经常采用前后端分离模式。这种模式下，前端和后端分别是独立的 web 应用程序，例如：后端是 Java 程序，前端是 React 或 Vue 应用。</p><p>各自独立的 web app 在互相访问时，势必存在跨域问题。解决跨域问题一般有两种思路：</p><ol><li> <strong>CORS</strong></li></ol><p>在后端服务器设置 HTTP 响应头，把你需要允许访问的域名加入 <code>Access-Control-Allow-Origin</code> 中。</p><ol start="2"><li> <strong>jsonp</strong></li></ol><p>把后端根据请求，构造 json 数据，并返回，前端用 jsonp 跨域。</p><p>这两种思路，本文不展开讨论。</p><p>需要说明的是，nginx 根据第一种思路，也提供了一种解决跨域的解决方案。</p><p>举例：<a href="http://www.pipbest.com/">www.pipbest.com</a> 网站是由一个前端 app ，一个后端 app 组成的。前端端口号为 9000， 后端端口号为 8080。</p><p>前端和后端如果使用 http 进行交互时，请求会被拒绝，因为存在跨域问题。来看看，nginx 是怎么解决的吧：</p><p>首先，在 enable-cors.conf 文件中设置 cors ：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true"># allow origin list</span><span class="token keyword">set</span> <span class="token variable">$ACAO</span> <span class="token string">'*'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># set single origin</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$http_origin</span> <span class="token operator">~</span><span class="token operator">*</span> <span class="token punctuation">(</span>www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">)</span>$<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">set</span> <span class="token variable">$ACAO</span> <span class="token variable">$http_origin</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$cors</span> <span class="token operator">=</span> <span class="token string">"trueget"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">add_header</span> <span class="token string">'Access-Control-Allow-Origin'</span> <span class="token string">"$http_origin"</span><span class="token punctuation">;</span>    <span class="token keyword">add_header</span> <span class="token string">'Access-Control-Allow-Credentials'</span> <span class="token string">'true'</span><span class="token punctuation">;</span>    <span class="token keyword">add_header</span> <span class="token string">'Access-Control-Allow-Methods'</span> <span class="token string">'GET, POST, OPTIONS'</span><span class="token punctuation">;</span>    <span class="token keyword">add_header</span> <span class="token string">'Access-Control-Allow-Headers'</span> <span class="token string">'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request_method</span> <span class="token operator">=</span> <span class="token string">'OPTIONS'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">set</span> <span class="token variable">$cors</span> <span class="token string">"${cors}options"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request_method</span> <span class="token operator">=</span> <span class="token string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">set</span> <span class="token variable">$cors</span> <span class="token string">"${cors}get"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request_method</span> <span class="token operator">=</span> <span class="token string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">set</span> <span class="token variable">$cors</span> <span class="token string">"${cors}post"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来，在你的服务器中 <code>include enable-cors.conf</code> 来引入跨域配置：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true"># ----------------------------------------------------</span><span class="token comment" spellcheck="true"># 此文件为项目 nginx 配置片段</span><span class="token comment" spellcheck="true"># 可以直接在 nginx config 中 include（推荐）</span><span class="token comment" spellcheck="true"># 或者 copy 到现有 nginx 中，自行配置</span><span class="token comment" spellcheck="true"># www.pipbest.com 域名需配合 dns hosts 进行配置</span><span class="token comment" spellcheck="true"># 其中，api 开启了 cors，需配合本目录下另一份配置文件</span><span class="token comment" spellcheck="true"># ----------------------------------------------------</span><span class="token keyword">upstream</span> front_server<span class="token punctuation">{</span>  <span class="token keyword">server</span> www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">9000</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">upstream</span> api_server<span class="token punctuation">{</span>  <span class="token keyword">server</span> www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span>       <span class="token number">80</span><span class="token punctuation">;</span>  <span class="token keyword">server_name</span>  www<span class="token punctuation">.</span>pipbest<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">^</span><span class="token operator">/</span>api<span class="token operator">/</span> <span class="token punctuation">{</span>    <span class="token keyword">include</span> enable<span class="token operator">-</span>cors<span class="token punctuation">.</span>conf<span class="token punctuation">;</span>    <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>api_server<span class="token punctuation">;</span>    <span class="token keyword">rewrite</span> <span class="token string">"^/api/(.*)$"</span> <span class="token operator">/</span>$<span class="token number">1</span> <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">^</span><span class="token operator">/</span> <span class="token punctuation">{</span>    <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>front_server<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此，就完成了。</p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul><li><a href="http://tool.oschina.net/apidocs/apidoc?api=nginx-zh">Nginx 的中文维基</a></li><li><a href="http://tengine.taobao.org/book/index.html">Nginx 开发从入门到精通</a></li><li><a href="https://github.com/trimstray/nginx-admins-handbook">nginx-admins-handbook</a></li><li><a href="https://nginxconfig.io/">nginxconfig.io</a> - 一款 Nginx 配置生成器</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/10/20/handbook/nginx/nginx-configuration/"/>
      <url>/2021/10/20/handbook/nginx/nginx-configuration/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-配置"><a href="#Nginx-配置" class="headerlink" title="Nginx 配置"></a>Nginx 配置</h1><blockquote><p>Nginx 的默认配置文件为 <code>nginx.conf</code>。</p><ul><li><code>nginx -c xxx.conf</code> - 以指定的文件作为配置文件，启动 Nginx。</li></ul></blockquote><h2 id="配置文件实例"><a href="#配置文件实例" class="headerlink" title="配置文件实例"></a>配置文件实例</h2><p>以下为一个 <code>nginx.conf</code> 配置文件实例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">#定义 nginx 运行的用户和用户组</span><span class="token keyword">user</span> www www<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#nginx 进程数，建议设置为等于 CPU 总核心数。</span><span class="token keyword">worker_processes</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#nginx 默认没有开启利用多核 CPU, 通过增加 worker_cpu_affinity 配置参数来充分利用多核 CPU 以下是 8 核的配置参数</span><span class="token keyword">worker_cpu_affinity</span> <span class="token number">00000001</span> <span class="token number">00000010</span> <span class="token number">00000100</span> <span class="token number">00001000</span> <span class="token number">00010000</span> <span class="token number">00100000</span> <span class="token number">01000000</span> <span class="token number">10000000</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]</span><span class="token keyword">error_log</span> <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>error<span class="token punctuation">.</span>log info<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#进程文件</span><span class="token keyword">pid</span> <span class="token operator">/</span>var<span class="token operator">/</span>run<span class="token operator">/</span>nginx<span class="token punctuation">.</span><span class="token keyword">pid</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#一个 nginx 进程打开的最多文件描述符数目，理论值应该是最多打开文件数（系统的值 ulimit -n）与 nginx 进程数相除，但是 nginx 分配请求并不均匀，所以建议与 ulimit -n 的值保持一致。</span><span class="token keyword">worker_rlimit_nofile</span> <span class="token number">65535</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#工作模式与连接数上限</span><span class="token keyword">events</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">#参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll 模型是 Linux 2.6 以上版本内核中的高性能网络 I/O 模型，如果跑在 FreeBSD 上面，就用 kqueue 模型。</span>    <span class="token comment" spellcheck="true">#epoll 是多路复用 IO(I/O Multiplexing) 中的一种方式，但是仅用于 linux2.6 以上内核，可以大大提高 nginx 的性能</span>    <span class="token keyword">use</span> epoll<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">############################################################################</span>    <span class="token comment" spellcheck="true">#单个后台 worker process 进程的最大并发链接数</span>    <span class="token comment" spellcheck="true">#事件模块指令，定义 nginx 每个进程最大连接数，默认 1024。最大客户连接数由 worker_processes 和 worker_connections 决定</span>    <span class="token comment" spellcheck="true">#即 max_client=worker_processes*worker_connections, 在作为反向代理时：max_client=worker_processes*worker_connections / 4</span>    <span class="token keyword">worker_connections</span> <span class="token number">65535</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">############################################################################</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#设定 http 服务器</span><span class="token keyword">http</span> <span class="token punctuation">{</span>    <span class="token keyword">include</span> mime<span class="token punctuation">.</span><span class="token keyword">types</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#文件扩展名与文件类型映射表</span>    <span class="token keyword">default_type</span> application<span class="token operator">/</span>octet<span class="token operator">-</span>stream<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#默认文件类型</span>    <span class="token comment" spellcheck="true">#charset utf-8; #默认编码</span>    <span class="token keyword">server_names_hash_bucket_size</span> <span class="token number">128</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#服务器名字的 hash 表大小</span>    <span class="token keyword">client_header_buffer_size</span> 32k<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#上传文件大小限制</span>    <span class="token keyword">large_client_header_buffers</span> <span class="token number">4</span> 64k<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#设定请求缓</span>    <span class="token keyword">client_max_body_size</span> 8m<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#设定请求缓</span>    <span class="token keyword">sendfile</span> on<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#开启高效文件传输模式，sendfile 指令指定 nginx 是否调用 sendfile 函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘 IO 重负载应用，可设置为 off，以平衡磁盘与网络 I/O 处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成 off。</span>    <span class="token keyword">autoindex</span> on<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#开启目录列表访问，合适下载服务器，默认关闭。</span>    <span class="token keyword">tcp_nopush</span> on<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#防止网络阻塞</span>    <span class="token keyword">tcp_nodelay</span> on<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#防止网络阻塞</span>    <span class="token comment" spellcheck="true">##连接客户端超时时间各种参数设置##</span>    <span class="token keyword">keepalive_timeout</span>  <span class="token number">120</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">#单位是秒，客户端连接时时间，超时之后服务器端自动关闭该连接 如果 nginx 守护进程在这个等待的时间里，一直没有收到浏览发过来 http 请求，则关闭这个 http 连接</span>    <span class="token keyword">client_header_timeout</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#客户端请求头的超时时间</span>    <span class="token keyword">client_body_timeout</span> <span class="token number">10</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">#客户端请求主体超时时间</span>    <span class="token keyword">reset_timedout_connection</span> on<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#告诉 nginx 关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间</span>    <span class="token keyword">send_timeout</span> <span class="token number">10</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">#客户端响应超时时间，在两次客户端读取操作之间。如果在这段时间内，客户端没有读取任何数据，nginx 就会关闭连接</span>    <span class="token comment" spellcheck="true">################################</span>    <span class="token comment" spellcheck="true">#FastCGI 相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。</span>    <span class="token keyword">fastcgi_connect_timeout</span> <span class="token number">300</span><span class="token punctuation">;</span>    <span class="token keyword">fastcgi_send_timeout</span> <span class="token number">300</span><span class="token punctuation">;</span>    <span class="token keyword">fastcgi_read_timeout</span> <span class="token number">300</span><span class="token punctuation">;</span>    <span class="token keyword">fastcgi_buffer_size</span> 64k<span class="token punctuation">;</span>    <span class="token keyword">fastcgi_buffers</span> <span class="token number">4</span> 64k<span class="token punctuation">;</span>    <span class="token keyword">fastcgi_busy_buffers_size</span> 128k<span class="token punctuation">;</span>    <span class="token keyword">fastcgi_temp_file_write_size</span> 128k<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">###作为代理缓存服务器设置#######</span>    <span class="token comment" spellcheck="true">###先写到 temp 再移动到 cache</span>    <span class="token comment" spellcheck="true">#proxy_cache_path /var/tmp/nginx/proxy_cache levels=1:2 keys_zone=cache_one:512m inactive=10m max_size=64m;</span>    <span class="token comment" spellcheck="true">###以上 proxy_temp 和 proxy_cache 需要在同一个分区中</span>    <span class="token comment" spellcheck="true">###levels=1:2 表示缓存级别，表示缓存目录的第一级目录是 1 个字符，第二级目录是 2 个字符 keys_zone=cache_one:128m 缓存空间起名为 cache_one 大小为 512m</span>    <span class="token comment" spellcheck="true">###max_size=64m 表示单个文件超过 128m 就不缓存了  inactive=10m 表示缓存的数据，10 分钟内没有被访问过就删除</span>    <span class="token comment" spellcheck="true">#########end####################</span>    <span class="token comment" spellcheck="true">#####对传输文件压缩###########</span>    <span class="token comment" spellcheck="true">#gzip 模块设置</span>    <span class="token keyword">gzip</span> on<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#开启 gzip 压缩输出</span>    <span class="token keyword">gzip_min_length</span> 1k<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#最小压缩文件大小</span>    <span class="token keyword">gzip_buffers</span> <span class="token number">4</span> 16k<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#压缩缓冲区</span>    <span class="token keyword">gzip_http_version</span> <span class="token number">1.0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#压缩版本（默认 1.1，前端如果是 squid2.5 请使用 1.0）</span>    <span class="token keyword">gzip_comp_level</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#压缩等级，gzip 压缩比，1 为最小，处理最快；9 为压缩比最大，处理最慢，传输速度最快，也最消耗 CPU；</span>    <span class="token keyword">gzip_types</span> text<span class="token operator">/</span>plain application<span class="token operator">/</span>x<span class="token operator">-</span>javascript text<span class="token operator">/</span>css application<span class="token operator">/</span>xml<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#压缩类型，默认就已经包含 text/html，所以下面就不用再写了，写上去也不会有问题，但是会有一个 warn。</span>    <span class="token keyword">gzip_vary</span> on<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">##############################</span>    <span class="token comment" spellcheck="true">#limit_zone crawler $binary_remote_addr 10m; #开启限制 IP 连接数的时候需要使用</span>    <span class="token keyword">upstream</span> blog<span class="token punctuation">.</span>ha97<span class="token punctuation">.</span>com <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">#upstream 的负载均衡，weight 是权重，可以根据机器配置定义权重。weigth 参数表示权值，权值越高被分配到的几率越大。</span>        <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">80.121</span><span class="token punctuation">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">80.122</span><span class="token punctuation">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">server</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">80.123</span><span class="token punctuation">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">#虚拟主机的配置</span>    <span class="token keyword">server</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">#监听端口</span>        <span class="token keyword">listen</span> <span class="token number">80</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#############https##################</span>        <span class="token comment" spellcheck="true">#listen 443 ssl;</span>        <span class="token comment" spellcheck="true">#ssl_certificate /opt/https/xxxxxx.crt;</span>        <span class="token comment" spellcheck="true">#ssl_certificate_key /opt/https/xxxxxx.key;</span>        <span class="token comment" spellcheck="true">#ssl_protocols SSLv3 TLSv1;</span>        <span class="token comment" spellcheck="true">#ssl_ciphers HIGH:!ADH:!EXPORT57:RC4+RSA:+MEDIUM;</span>        <span class="token comment" spellcheck="true">#ssl_prefer_server_ciphers on;</span>        <span class="token comment" spellcheck="true">#ssl_session_cache shared:SSL:2m;</span>        <span class="token comment" spellcheck="true">#ssl_session_timeout 5m;</span>        <span class="token comment" spellcheck="true">####################################end</span>        <span class="token comment" spellcheck="true">#域名可以有多个，用空格隔开</span>        <span class="token keyword">server_name</span> www<span class="token punctuation">.</span>ha97<span class="token punctuation">.</span>com ha97<span class="token punctuation">.</span>com<span class="token punctuation">;</span>        <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>html <span class="token keyword">index</span><span class="token punctuation">.</span>htm <span class="token keyword">index</span><span class="token punctuation">.</span>php<span class="token punctuation">;</span>        <span class="token keyword">root</span> <span class="token operator">/</span>data<span class="token operator">/</span>www<span class="token operator">/</span>ha97<span class="token punctuation">;</span>        <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token punctuation">(</span>php<span class="token operator">|</span>php5<span class="token punctuation">)</span><span class="token operator">?</span>$ <span class="token punctuation">{</span>            <span class="token keyword">fastcgi_pass</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">9000</span><span class="token punctuation">;</span>            <span class="token keyword">fastcgi_index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>php<span class="token punctuation">;</span>            <span class="token keyword">include</span> fastcgi<span class="token punctuation">.</span>conf<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#图片缓存时间设置</span>        <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token punctuation">(</span>gif<span class="token operator">|</span>jpg<span class="token operator">|</span>jpeg<span class="token operator">|</span>png<span class="token operator">|</span>bmp<span class="token operator">|</span>swf<span class="token punctuation">)</span>$ <span class="token punctuation">{</span>            <span class="token keyword">expires</span> 10d<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#JS 和 CSS 缓存时间设置</span>        <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token punctuation">(</span>js<span class="token operator">|</span>css<span class="token punctuation">)</span><span class="token operator">?</span>$ <span class="token punctuation">{</span>            <span class="token keyword">expires</span> 1h<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#日志格式设定</span>        <span class="token keyword">log_format</span> access <span class="token string">'$remote_addr - $remote_user [$time_local] "$request" '</span> <span class="token string">'$status $body_bytes_sent "$http_referer" '</span> <span class="token string">'"$http_user_agent" $http_x_forwarded_for'</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#定义本虚拟主机的访问日志</span>        <span class="token keyword">access_log</span> <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>ha97access<span class="token punctuation">.</span>log access<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">#对 "/" 启用反向代理</span>        <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>            <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">88</span><span class="token punctuation">;</span>            <span class="token keyword">proxy_redirect</span> off<span class="token punctuation">;</span>            <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Real<span class="token operator">-</span>IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">#后端的 Web 服务器可以通过 X-Forwarded-For 获取用户真实 IP</span>            <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">#以下是一些反向代理的配置，可选。</span>            <span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span><span class="token punctuation">;</span>            <span class="token keyword">client_max_body_size</span> 10m<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#允许客户端请求的最大单文件字节数</span>            <span class="token keyword">client_body_buffer_size</span> 128k<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#缓冲区代理缓冲用户端请求的最大字节数，</span>            <span class="token comment" spellcheck="true">##代理设置 以下设置是 nginx 和后端服务器之间通讯的设置##</span>            <span class="token keyword">proxy_connect_timeout</span> <span class="token number">90</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#nginx 跟后端服务器连接超时时间（代理连接超时）</span>            <span class="token keyword">proxy_send_timeout</span> <span class="token number">90</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#后端服务器数据回传时间（代理发送超时）</span>            <span class="token keyword">proxy_read_timeout</span> <span class="token number">90</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#连接成功后，后端服务器响应时间（代理接收超时）</span>            <span class="token keyword">proxy_buffering</span> on<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#该指令开启从后端被代理服务器的响应内容缓冲 此参数开启后 proxy_buffers 和 proxy_busy_buffers_size 参数才会起作用</span>            <span class="token keyword">proxy_buffer_size</span> 4k<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span>            <span class="token keyword">proxy_buffers</span> <span class="token number">4</span> 32k<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">#proxy_buffers 缓冲区，网页平均在 32k 以下的设置</span>            <span class="token keyword">proxy_busy_buffers_size</span> 64k<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#高负荷下缓冲大小（proxy_buffers*2）</span>            <span class="token keyword">proxy_max_temp_file_size</span> 2048m<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#默认 1024m, 该指令用于设置当网页内容大于 proxy_buffers 时，临时文件大小的最大值。如果文件大于这个值，它将从 upstream 服务器同步地传递请求，而不是缓冲到磁盘</span>            <span class="token keyword">proxy_temp_file_write_size</span> 512k<span class="token punctuation">;</span> 这是当被代理服务器的响应过大时 nginx 一次性写入临时文件的数据量。            <span class="token keyword">proxy_temp_path</span>  <span class="token operator">/</span>var<span class="token operator">/</span>tmp<span class="token operator">/</span>nginx<span class="token operator">/</span>proxy_temp<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">##定义缓冲存储目录，之前必须要先手动创建此目录</span>            <span class="token keyword">proxy_headers_hash_max_size</span> <span class="token number">51200</span><span class="token punctuation">;</span>            <span class="token keyword">proxy_headers_hash_bucket_size</span> <span class="token number">6400</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">#######################################################</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#设定查看 nginx 状态的地址</span>        <span class="token keyword">location</span> <span class="token operator">/</span>nginxStatus <span class="token punctuation">{</span>            <span class="token keyword">stub_status</span> on<span class="token punctuation">;</span>            <span class="token keyword">access_log</span> on<span class="token punctuation">;</span>            <span class="token keyword">auth_basic</span> <span class="token string">"nginxStatus"</span><span class="token punctuation">;</span>            <span class="token keyword">auth_basic_user_file</span> conf<span class="token operator">/</span>htpasswd<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">#htpasswd 文件的内容可以用 apache 提供的 htpasswd 工具来产生。</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#本地动静分离反向代理配置</span>        <span class="token comment" spellcheck="true">#所有 jsp 的页面均交由 tomcat 或 resin 处理</span>        <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token punctuation">.</span><span class="token punctuation">(</span>jsp<span class="token operator">|</span>jspx<span class="token operator">|</span>do<span class="token punctuation">)</span><span class="token operator">?</span>$ <span class="token punctuation">{</span>            <span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span><span class="token punctuation">;</span>            <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Real<span class="token operator">-</span>IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>            <span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>            <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">#所有静态文件由 nginx 直接读取不经过 tomcat 或 resin</span>        <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token punctuation">(</span>htm<span class="token operator">|</span>html<span class="token operator">|</span>gif<span class="token operator">|</span>jpg<span class="token operator">|</span>jpeg<span class="token operator">|</span>png<span class="token operator">|</span>bmp<span class="token operator">|</span>swf<span class="token operator">|</span>ioc<span class="token operator">|</span>rar<span class="token operator">|</span>zip<span class="token operator">|</span>txt<span class="token operator">|</span><span class="token keyword">flv</span><span class="token operator">|</span>mid<span class="token operator">|</span>doc<span class="token operator">|</span>ppt<span class="token operator">|</span>pdf<span class="token operator">|</span>xls<span class="token operator">|</span>mp3<span class="token operator">|</span>wma<span class="token punctuation">)</span>$        <span class="token punctuation">{</span> <span class="token keyword">expires</span> 15d<span class="token punctuation">;</span> <span class="token punctuation">}</span>        <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token punctuation">(</span>js<span class="token operator">|</span>css<span class="token punctuation">)</span><span class="token operator">?</span>$        <span class="token punctuation">{</span> <span class="token keyword">expires</span> 1h<span class="token punctuation">;</span> <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h2><h3 id="管理-Nginx-配置"><a href="#管理-Nginx-配置" class="headerlink" title="管理 Nginx 配置"></a>管理 Nginx 配置</h3><blockquote><p>随着 Nginx 配置的增长，您有必要组织、管理配置内容。</p><p>当您的 Nginx 配置增加时，组织配置的需求也会增加。 井井有条的代码是：</p><ul><li>易于理解</li><li>易于维护</li><li>易于使用</li></ul></blockquote><blockquote><p>使用 <code>include</code> 指令可将常用服务器配置移动到单独的文件中，并将特定代码附加到全局配置，上下文等中。</p></blockquote><blockquote><p>我总是尝试在配置树的根目录中保留多个目录。 这些目录存储所有附加到主文件的配置文件。 我更喜欢以下结构：</p><ul><li><code>html</code> - 用于默认静态文件，例如 全局 5xx 错误页面</li><li><code>master</code> - 用于主要配置，例如 ACL，侦听指令和域<ul><li><code>_acls</code> - 用于访问控制列表，例如 地理或地图模块</li><li><code>_basic</code> - 用于速率限制规则，重定向映射或代理参数</li><li><code>_listen</code> - 用于所有侦听指令； 还存储 SSL 配置</li><li><code>_server</code> - 用于域（localhost）配置； 还存储所有后端定义</li></ul></li><li><code>modules</code> - 用于动态加载到 Nginx 中的模块</li><li><code>snippets</code> - 用于 Nginx 别名，配置模板</li></ul><p>如果有必要，我会将其中一些附加到具有 <code>server</code> 指令的文件中。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Store this configuration in https.conf for example:</span><span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span><span class="token punctuation">;</span><span class="token keyword">ssl_certificate</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>master<span class="token operator">/</span>_server<span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>certs<span class="token operator">/</span>nginx_example<span class="token punctuation">.</span>com_bundle<span class="token punctuation">.</span>crt<span class="token punctuation">;</span><span class="token keyword">ssl_certificate_key</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>master<span class="token operator">/</span>_server<span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>certs<span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token punctuation">.</span>key<span class="token punctuation">;</span><span class="token comment" spellcheck="true">## Include this file to the server section:</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">include</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>master<span class="token operator">/</span>_listen<span class="token operator">/</span><span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token operator">/</span><span class="token keyword">https</span><span class="token punctuation">.</span>conf<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## And other:</span>  <span class="token keyword">include</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>master<span class="token operator">/</span>_static<span class="token operator">/</span>errors<span class="token punctuation">.</span>conf<span class="token punctuation">;</span>  <span class="token keyword">include</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>master<span class="token operator">/</span>_server<span class="token operator">/</span>_helpers<span class="token operator">/</span>global<span class="token punctuation">.</span>conf<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">server_name</span> domain<span class="token punctuation">.</span>com www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重加载-Nginx-配置"><a href="#重加载-Nginx-配置" class="headerlink" title="重加载 Nginx 配置"></a>重加载 Nginx 配置</h3><p>示例：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1)</span>systemctl reload nginx<span class="token comment" spellcheck="true">## 2)</span><span class="token function">service</span> nginx reload<span class="token comment" spellcheck="true">## 3)</span>/etc/init.d/nginx reload<span class="token comment" spellcheck="true">## 4)</span>/usr/sbin/nginx -s reload<span class="token comment" spellcheck="true">## 5)</span><span class="token function">kill</span> -HUP <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /var/run/nginx.pid<span class="token variable">)</span></span><span class="token comment" spellcheck="true">## or</span><span class="token function">kill</span> -HUP <span class="token punctuation">$(</span>pgrep -f <span class="token string">"nginx: master"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 6)</span>/usr/sbin/nginx -g <span class="token string">'daemon on; master_process on;'</span> -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="监听-80-和-443-端口"><a href="#监听-80-和-443-端口" class="headerlink" title="监听 80 和 443 端口"></a>监听 80 和 443 端口</h3><blockquote><p>如果您使用完全相同的配置为 HTTP 和 HTTPS 提供服务（单个服务器同时处理 HTTP 和 HTTPS 请求），Nginx 足够智能，可以忽略通过端口 80 加载的 SSL 指令。</p><p>Nginx 的最佳实践是使用单独的服务器进行这样的重定向（不与您的主要配置的服务器共享），对所有内容进行硬编码，并且完全不使用正则表达式。</p><p>我不喜欢复制规则，但是单独的监听指令无疑可以帮助您维护和修改配置。</p><p>如果将多个域固定到一个 IP 地址，则很有用。 这使您可以将一个侦听指令（例如，如果将其保留在配置文件中）附加到多个域配置。</p><p>如果您使用的是 HTTPS，则可能还需要对域进行硬编码，因为您必须预先知道要提供的证书。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## For HTTP:</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## For HTTPS:</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="显示指定监听的地址和端口"><a href="#显示指定监听的地址和端口" class="headerlink" title="显示指定监听的地址和端口"></a>显示指定监听的地址和端口</h3><p>Nginx 的 listen 指令用于监听指定的 IP 地址和端口号，配置形式为：<code>listen &lt;address&gt;:&lt;port&gt;</code>。若 IP 地址或端口缺失，Nginx 会以默认值来替换。</p><p>而且，仅当需要区分与 listen 指令中的同一级别匹配的服务器块时，才会评估 server_name 指令。</p><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">## This block will be processed:</span>  <span class="token keyword">listen</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">252.10</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## --> 192.168.252.10:80</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">80</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## --> *:80 --> 0.0.0.0:80</span>  <span class="token keyword">server_name</span> api<span class="token punctuation">.</span>random<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="防止使用未定义的服务器名称处理请求"><a href="#防止使用未定义的服务器名称处理请求" class="headerlink" title="防止使用未定义的服务器名称处理请求"></a>防止使用未定义的服务器名称处理请求</h3><blockquote><p>Nginx 应该阻止使用未定义的服务器名称（也使用 IP 地址）处理请求。它可以防止配置错误，例如流量转发到不正确的后端。通过创建默认虚拟虚拟主机可以轻松解决该问题，该虚拟虚拟主机可以捕获带有无法识别的主机标头的所有请求。</p><p>如果没有一个 listen 指令具有 default_server 参数，则具有 address：port 对的第一台服务器将是该对的默认服务器（这意味着 Nginx 始终具有默认服务器）。</p><p>如果有人使用 IP 地址而不是服务器名称发出请求，则主机请求标头字段将包含 IP 地址，并且可以使用 IP 地址作为服务器名称来处理请求。</p><p>在现代版本的 Nginx 中，不需要服务器名称_。如果找不到具有匹配的 listen 和 server_name 的服务器，Nginx 将使用默认服务器。如果您的配置分散在多个文件中，则评估顺序将不明确，因此您需要显式标记默认服务器。</p><p>Nginx 使用 Host 标头进行 server_name 匹配。它不使用 TLS SNI。这意味着对于 SSL 服务器，Nginx 必须能够接受 SSL 连接，这归结为具有证书/密钥。证书/密钥可以是任意值，例如自签名。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Place it at the beginning of the configuration file to prevent mistakes:</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">## For ssl option remember about SSL parameters (private key, certs, cipher suites, etc.);</span>  <span class="token comment" spellcheck="true">## add default_server to your listen directive in the server that you want to act as the default:</span>  <span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">443</span> default_server <span class="token keyword">ssl</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## We catch:</span>  <span class="token comment" spellcheck="true">##   - invalid domain names</span>  <span class="token comment" spellcheck="true">##   - requests without the "Host" header</span>  <span class="token comment" spellcheck="true">##   - and all others (also due to the above setting)</span>  <span class="token comment" spellcheck="true">##   - default_server in server_name directive is not required - I add this for a better understanding and I think it's an unwritten standard</span>  <span class="token comment" spellcheck="true">## ...but you should know that it's irrelevant, really, you can put in everything there.</span>  <span class="token keyword">server_name</span> _ <span class="token string">""</span> default_server<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">return</span> <span class="token number">444</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## We can also serve:</span>  <span class="token comment" spellcheck="true">## location / {</span>    <span class="token comment" spellcheck="true">## static file (error page):</span>    <span class="token comment" spellcheck="true">##   root /etc/nginx/error-pages/404;</span>    <span class="token comment" spellcheck="true">## or redirect:</span>    <span class="token comment" spellcheck="true">##   return 301 https://badssl.com;</span>    <span class="token comment" spellcheck="true">## return 444;</span>  <span class="token comment" spellcheck="true">## }</span><span class="token punctuation">}</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span><span class="token punctuation">;</span>  <span class="token keyword">server_name</span> domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span><span class="token punctuation">;</span>  <span class="token keyword">server_name</span> domain<span class="token punctuation">.</span>org<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="不要在-listen-或-upstream-中使用-hostname"><a href="#不要在-listen-或-upstream-中使用-hostname" class="headerlink" title="不要在 listen 或 upstream 中使用 hostname"></a>不要在 listen 或 upstream 中使用 hostname</h3><blockquote><p>通常，在 listen 或上游指令中使用主机名是一种不好的做法。</p><p>在最坏的情况下，Nginx 将无法绑定到所需的 TCP 套接字，这将完全阻止 Nginx 启动。</p><p>最好和更安全的方法是知道需要绑定的 IP 地址，并使用该地址代替主机名。 这也可以防止 Nginx 查找地址并消除对外部和内部解析器的依赖。</p><p>在 server_name 指令中使用$ hostname（计算机的主机名）变量也是不当行为的示例（类似于使用主机名标签）。</p><p>我认为也有必要设置 IP 地址和端口号对，以防止可能难以调试的软错误。</p></blockquote><p>示例：</p><p>❌ 错误配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> <span class="token punctuation">{</span>  <span class="token keyword">server</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>x<span class="token operator">-</span>9s<span class="token operator">-</span>web01<span class="token operator">-</span>prod<span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> rev<span class="token operator">-</span><span class="token keyword">proxy</span><span class="token operator">-</span>prod<span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⭕ 正确配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> <span class="token punctuation">{</span>  <span class="token keyword">server</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">252.200</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">10.10</span><span class="token punctuation">.</span><span class="token number">100.20</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="指令中只配置一个-SSL"><a href="#指令中只配置一个-SSL" class="headerlink" title="指令中只配置一个 SSL"></a>指令中只配置一个 SSL</h3><blockquote><p>此规则使调试和维护更加容易。</p><p>请记住，无论 SSL 参数如何，您都可以在同一监听指令（IP 地址）上使用多个 SSL 证书。</p><p>我认为要在多个 HTTPS 服务器之间共享一个 IP 地址，您应该使用一个 SSL 配置（例如协议，密码，曲线）。这是为了防止错误和配置不匹配。</p><p>还请记住有关默认服务器的配置。这很重要，因为如果所有 listen 指令都没有 default_server 参数，则配置中的第一台服务器将是默认服务器。因此，您应该只使用一个 SSL 设置，并且在同一 IP 地址上使用多个名称。</p><p>从 Nginx 文档中：</p><p>这是由 SSL 协议行为引起的。在浏览器发送 HTTP 请求之前，已建立 SSL 连接，nginx 不知道所请求服务器的名称。因此，它可能仅提供默认服务器的证书。</p><p>还要看看这个：</p><p>TLS 服务器名称指示扩展名（SNI，RFC 6066）是在单个 IP 地址上运行多个 HTTPS 服务器的更通用的解决方案，它允许浏览器在 SSL 握手期间传递请求的服务器名称，因此，服务器将知道哪个用于连接的证书。</p><p>另一个好主意是将常用服务器设置移到单独的文件（即 common / example.com.conf）中，然后将其包含在单独的服务器块中。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Store this configuration in e.g. https.conf:</span><span class="token keyword">listen</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">252.10</span><span class="token punctuation">:</span><span class="token number">443</span> default_server <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span><span class="token keyword">ssl_protocols</span> TLSv1<span class="token number">.2</span><span class="token punctuation">;</span><span class="token keyword">ssl_ciphers</span> <span class="token string">"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384"</span><span class="token punctuation">;</span><span class="token keyword">ssl_prefer_server_ciphers</span> on<span class="token punctuation">;</span>ssl_ecdh_curve secp521r1<span class="token punctuation">:</span>secp384r1<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">## Include this file to the server context (attach domain-a.com for specific listen directive):</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">include</span>             <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span><span class="token keyword">https</span><span class="token punctuation">.</span>conf<span class="token punctuation">;</span>  <span class="token keyword">server_name</span>         domain<span class="token operator">-</span>a<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token keyword">ssl_certificate</span>     domain<span class="token operator">-</span>a<span class="token punctuation">.</span>com<span class="token punctuation">.</span>crt<span class="token punctuation">;</span>  <span class="token keyword">ssl_certificate_key</span> domain<span class="token operator">-</span>a<span class="token punctuation">.</span>com<span class="token punctuation">.</span>key<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## Include this file to the server context (attach domain-b.com for specific listen directive):</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">include</span>             <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span><span class="token keyword">https</span><span class="token punctuation">.</span>conf<span class="token punctuation">;</span>  <span class="token keyword">server_name</span>         domain<span class="token operator">-</span>b<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token keyword">ssl_certificate</span>     domain<span class="token operator">-</span>b<span class="token punctuation">.</span>com<span class="token punctuation">.</span>crt<span class="token punctuation">;</span>  <span class="token keyword">ssl_certificate_key</span> domain<span class="token operator">-</span>b<span class="token punctuation">.</span>com<span class="token punctuation">.</span>key<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用-geo-map-模块替代-allow-deny"><a href="#使用-geo-map-模块替代-allow-deny" class="headerlink" title="使用 geo/map 模块替代 allow/deny"></a>使用 geo/map 模块替代 allow/deny</h3><blockquote><p>使用地图或地理模块（其中之一）可以防止用户滥用您的服务器。这样就可以创建变量，其值取决于客户端 IP 地址。</p><p>由于仅在使用变量时才对其进行求值，因此甚至仅存在大量已声明的变量。地理位置变量不会为请求处理带来任何额外费用。</p><p>这些指令提供了阻止无效访问者的完美方法，例如使用 ngx_http_geoip_module。例如，geo 模块非常适合有条件地允许或拒绝 IP。</p><p>geo 模块（注意：不要将此模块误认为是 GeoIP）在加载配置时会构建内存基数树。这与路由中使用的数据结构相同，并且查找速度非常快。如果每个网络有许多唯一值，那么较长的加载时间是由在数组中搜索数据重复项引起的。否则，可能是由于插入基数树引起的。</p><p>我将两个模块都用于大型列表。您应该考虑一下，因为此规则要求使用多个 if 条件。我认为，对于简单的列表，毕竟允许/拒绝指令是更好的解决方案。看下面的例子：</p></blockquote><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Allow/deny:</span><span class="token keyword">location</span> <span class="token operator">/</span><span class="token keyword">internal</span> <span class="token punctuation">{</span>  <span class="token keyword">include</span> acls<span class="token operator">/</span><span class="token keyword">internal</span><span class="token punctuation">.</span>conf<span class="token punctuation">;</span>  <span class="token keyword">allow</span>   <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">240.0</span><span class="token operator">/</span><span class="token number">24</span><span class="token punctuation">;</span>  <span class="token keyword">deny</span>    all<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">## vs geo/map:</span><span class="token keyword">location</span> <span class="token operator">/</span><span class="token keyword">internal</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$globals_internal_map_acl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">set</span> <span class="token variable">$pass</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pass</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token number">403</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Map module:</span><span class="token keyword">map</span> <span class="token variable">$remote_addr</span> <span class="token variable">$globals_internal_map_acl</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">## Status code:</span>  <span class="token comment" spellcheck="true">##  - 0 = false</span>  <span class="token comment" spellcheck="true">##  - 1 = true</span>  default <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">### INTERNAL ###</span>  <span class="token number">10.255</span><span class="token punctuation">.</span><span class="token number">10.0</span><span class="token operator">/</span><span class="token number">24</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token number">10.255</span><span class="token punctuation">.</span><span class="token number">20.0</span><span class="token operator">/</span><span class="token number">24</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token number">10.255</span><span class="token punctuation">.</span><span class="token number">30.0</span><span class="token operator">/</span><span class="token number">24</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">/</span><span class="token number">16</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## Geo module:</span><span class="token keyword">geo</span> <span class="token variable">$globals_internal_geo_acl</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">## Status code:</span>  <span class="token comment" spellcheck="true">##  - 0 = false</span>  <span class="token comment" spellcheck="true">##  - 1 = true</span>  default <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">### INTERNAL ###</span>  <span class="token number">10.255</span><span class="token punctuation">.</span><span class="token number">10.0</span><span class="token operator">/</span><span class="token number">24</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token number">10.255</span><span class="token punctuation">.</span><span class="token number">20.0</span><span class="token operator">/</span><span class="token number">24</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token number">10.255</span><span class="token punctuation">.</span><span class="token number">30.0</span><span class="token operator">/</span><span class="token number">24</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">/</span><span class="token number">16</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Map-所有事物"><a href="#Map-所有事物" class="headerlink" title="Map 所有事物"></a>Map 所有事物</h3><blockquote><p>使用地图管理大量重定向，并使用它们来自定义键/值对。</p><p>map 指令可映射字符串，因此可以表示例如 192.168.144.0/24 作为正则表达式，并继续使用 map 指令。</p><p>Map 模块提供了一种更优雅的解决方案，用于清晰地解析大量正则表达式，例如 用户代理，引荐来源。</p><p>您还可以对地图使用 include 指令，这样配置文件看起来会很漂亮。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">map</span> <span class="token variable">$http_user_agent</span> <span class="token variable">$device_redirect</span> <span class="token punctuation">{</span>  default <span class="token string">"desktop"</span><span class="token punctuation">;</span>  <span class="token operator">~</span><span class="token punctuation">(</span><span class="token operator">?</span>i<span class="token punctuation">)</span><span class="token function">ip</span><span class="token punctuation">(</span>hone<span class="token operator">|</span>od<span class="token punctuation">)</span> <span class="token string">"mobile"</span><span class="token punctuation">;</span>  <span class="token operator">~</span><span class="token punctuation">(</span><span class="token operator">?</span>i<span class="token punctuation">)</span>android<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">(</span>mobile<span class="token operator">|</span>mini<span class="token punctuation">)</span> <span class="token string">"mobile"</span><span class="token punctuation">;</span>  <span class="token operator">~</span>Mobile<span class="token punctuation">.</span><span class="token operator">+</span>Firefox <span class="token string">"mobile"</span><span class="token punctuation">;</span>  <span class="token operator">~</span><span class="token operator">^</span>HTC <span class="token string">"mobile"</span><span class="token punctuation">;</span>  <span class="token operator">~</span>Fennec <span class="token string">"mobile"</span><span class="token punctuation">;</span>  <span class="token operator">~</span>IEMobile <span class="token string">"mobile"</span><span class="token punctuation">;</span>  <span class="token operator">~</span>BB10 <span class="token string">"mobile"</span><span class="token punctuation">;</span>  <span class="token operator">~</span>SymbianOS<span class="token punctuation">.</span><span class="token operator">*</span>AppleWebKit <span class="token string">"mobile"</span><span class="token punctuation">;</span>  <span class="token operator">~</span>Opera\sMobi <span class="token string">"mobile"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## Turn on in a specific context (e.g. location):</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$device_redirect</span> <span class="token operator">=</span> <span class="token string">"mobile"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token number">301</span> <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>m<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>com<span class="token variable">$request_uri</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="为所有未匹配的路径设置根路径"><a href="#为所有未匹配的路径设置根路径" class="headerlink" title="为所有未匹配的路径设置根路径"></a>为所有未匹配的路径设置根路径</h3><blockquote><p>为请求设置服务器指令内部的全局根路径。 它为未定义的位置指定根路径。</p><p>根据官方文档：</p><p>如果您在每个位置块中添加一个根路径，则不匹配的位置块将没有根路径。因此，重要的是，根指令必须在您的位置块之前发生，然后根目录指令可以在需要时覆盖该指令。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">server_name</span> domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token keyword">root</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>domain<span class="token punctuation">.</span>com<span class="token operator">/</span>public<span class="token punctuation">;</span>  <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">}</span>  <span class="token keyword">location</span> <span class="token operator">/</span>api <span class="token punctuation">{</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">}</span>  <span class="token keyword">location</span> <span class="token operator">/</span>static <span class="token punctuation">{</span>    <span class="token keyword">root</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>domain<span class="token punctuation">.</span>com<span class="token operator">/</span>static<span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用-return-指令进行-URL-重定向（301、302）"><a href="#使用-return-指令进行-URL-重定向（301、302）" class="headerlink" title="使用 return 指令进行 URL 重定向（301、302）"></a>使用 return 指令进行 URL 重定向（301、302）</h3><blockquote><p>这是一个简单的规则。 您应该使用服务器块和 return 语句，因为它们比评估 RegEx 更快。</p><p>因为 Nginx 停止处理请求（而不必处理正则表达式），所以它更加简单快捷。</p></blockquote><p>示例</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">server_name</span> www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## return    301 https://$host$request_uri;</span>  <span class="token keyword">return</span>      <span class="token number">301</span> <span class="token variable">$scheme</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token variable">$request_uri</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置日志轮换策略"><a href="#配置日志轮换策略" class="headerlink" title="配置日志轮换策略"></a>配置日志轮换策略</h3><blockquote><p>日志文件为您提供有关服务器活动和性能以及可能出现的任何问题的反馈。 它们记录了有关请求和 Nginx 内部的详细信息。 不幸的是，日志使用了更多的磁盘空间。</p><p>您应该定义一个过程，该过程将定期存档当前日志文件并启动一个新日志文件，重命名并有选择地压缩当前日志文件，删除旧日志文件，并强制日志记录系统开始使用新日志文件。</p><p>我认为最好的工具是 logrotate。 如果我想自动管理日志，也想睡个好觉，那么我会在任何地方使用它。 这是一个旋转日志的简单程序，使用 crontab 可以工作。 它是计划的工作，而不是守护程序，因此无需重新加载其配置。</p></blockquote><p>示例：</p><ul><li><p>手动旋转</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## Check manually (all log files):</span>logrotate -dv /etc/logrotate.conf<span class="token comment" spellcheck="true">## Check manually with force rotation (specific log file):</span>logrotate -dv --force /etc/logrotate.d/nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>自动旋转</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">></span> /etc/logrotate.d/nginx <span class="token operator">&lt;&lt;</span> <span class="token string">__EOF__/var/log/nginx/*.log {  daily  missingok  rotate 14  compress  delaycompress  notifempty  create 0640 nginx nginx  sharedscripts  prerotate    if [ -d /etc/logrotate.d/httpd-prerotate ]; then \      run-parts /etc/logrotate.d/httpd-prerotate; \    fi \  endscript  postrotate    ## test ! -f /var/run/nginx.pid || kill -USR1 <span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /var/run/nginx.pid<span class="token variable">`</span></span>    invoke-rc.d nginx reload >/dev/null 2>&amp;1  endscript}/var/log/nginx/localhost/*.log {  daily  missingok  rotate 14  compress  delaycompress  notifempty  create 0640 nginx nginx  sharedscripts  prerotate    if [ -d /etc/logrotate.d/httpd-prerotate ]; then \      run-parts /etc/logrotate.d/httpd-prerotate; \    fi \  endscript  postrotate    ## test ! -f /var/run/nginx.pid || kill -USR1 <span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /var/run/nginx.pid<span class="token variable">`</span></span>    invoke-rc.d nginx reload >/dev/null 2>&amp;1  endscript}/var/log/nginx/domains/example.com/*.log {  daily  missingok  rotate 14  compress  delaycompress  notifempty  create 0640 nginx nginx  sharedscripts  prerotate    if [ -d /etc/logrotate.d/httpd-prerotate ]; then \      run-parts /etc/logrotate.d/httpd-prerotate; \    fi \  endscript  postrotate    ## test ! -f /var/run/nginx.pid || kill -USR1 <span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /var/run/nginx.pid<span class="token variable">`</span></span>    invoke-rc.d nginx reload >/dev/null 2>&amp;1  endscript}__EOF__</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="不要重复索引指令，只能在-http-块中使用"><a href="#不要重复索引指令，只能在-http-块中使用" class="headerlink" title="不要重复索引指令，只能在 http 块中使用"></a>不要重复索引指令，只能在 http 块中使用</h3><blockquote><p>一次使用 index 指令。 它只需要在您的 http 上下文中发生，并将在下面继承。</p><p>我认为我们在复制相同规则时应格外小心。 但是，当然，规则的重复有时是可以的，或者不一定是大麻烦。</p></blockquote><p>示例：</p><p>❌ 错误配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">http</span> <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>php <span class="token keyword">index</span><span class="token punctuation">.</span>htm <span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>  <span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">server_name</span> www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token punctuation">;</span>    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>      <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>php <span class="token keyword">index</span><span class="token punctuation">.</span>html <span class="token keyword">index</span><span class="token punctuation">.</span><span class="token variable">$geo</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">server_name</span> www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token punctuation">;</span>    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>      <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>php <span class="token keyword">index</span><span class="token punctuation">.</span>htm <span class="token keyword">index</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">}</span>    <span class="token keyword">location</span> <span class="token operator">/</span>data <span class="token punctuation">{</span>      <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>php<span class="token punctuation">;</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⭕ 正确配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">http</span> <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">index</span> <span class="token keyword">index</span><span class="token punctuation">.</span>php <span class="token keyword">index</span><span class="token punctuation">.</span>htm <span class="token keyword">index</span><span class="token punctuation">.</span>html <span class="token keyword">index</span><span class="token punctuation">.</span><span class="token variable">$geo</span><span class="token punctuation">.</span>html<span class="token punctuation">;</span>  <span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">server_name</span> www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token punctuation">;</span>    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">server_name</span> www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token punctuation">;</span>    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">}</span>    <span class="token keyword">location</span> <span class="token operator">/</span>data <span class="token punctuation">{</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Debugging"><a href="#Debugging" class="headerlink" title="Debugging"></a>Debugging</h2><h3 id="使用自定义日志格式"><a href="#使用自定义日志格式" class="headerlink" title="使用自定义日志格式"></a>使用自定义日志格式</h3><blockquote><p>您可以在 Nginx 配置中作为变量访问的任何内容都可以记录，包括非标准的 HTTP 标头等。因此，这是一种针对特定情况创建自己的日志格式的简单方法。</p><p>这对于调试特定的 <code>location</code> 指令非常有帮助。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Default main log format from the Nginx repository:</span><span class="token keyword">log_format</span> main                <span class="token string">'$remote_addr - $remote_user [$time_local] "$request" '</span>                <span class="token string">'$status $body_bytes_sent "$http_referer" '</span>                <span class="token string">'"$http_user_agent" "$http_x_forwarded_for"'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">## Extended main log format:</span><span class="token keyword">log_format</span> main<span class="token operator">-</span>level<span class="token number">-0</span>                <span class="token string">'$remote_addr - $remote_user [$time_local] '</span>                <span class="token string">'"$request_method $scheme://$host$request_uri '</span>                <span class="token string">'$server_protocol" $status $body_bytes_sent '</span>                <span class="token string">'"$http_referer" "$http_user_agent" '</span>                <span class="token string">'$request_time'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">## Debug log formats:</span><span class="token keyword">log_format</span> debug<span class="token operator">-</span>level<span class="token number">-0</span>                <span class="token string">'$remote_addr - $remote_user [$time_local] '</span>                <span class="token string">'"$request_method $scheme://$host$request_uri '</span>                <span class="token string">'$server_protocol" $status $body_bytes_sent '</span>                <span class="token string">'$request_id $pid $msec $request_time '</span>                <span class="token string">'$upstream_connect_time $upstream_header_time '</span>                <span class="token string">'$upstream_response_time "$request_filename" '</span>                <span class="token string">'$request_completion'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用调试模式来跟踪意外行为"><a href="#使用调试模式来跟踪意外行为" class="headerlink" title="使用调试模式来跟踪意外行为"></a>使用调试模式来跟踪意外行为</h3><blockquote><p>通常，<code>error_log</code> 指令是在 <code>main</code> 中指定的，但是也可以在 <code>server</code> 或 <code>location</code> 块中指定，全局设置将被覆盖，并且这个 <code>error_log</code> 指令将设置其自己的日志文件路径和日志记录级别。</p><p>如果要记录 <code>ngx_http_rewrite_module</code> (at the notice level) ，应该在 <code>http</code>、<code>server</code> 或 <code>location</code> 块中开启 <code>rewrite_log on;</code>。</p><p>注意：</p><ul><li>永远不要将调试日志记录留在生产环境中的文件上</li><li>不要忘记在流量非常高的站点上恢复 <code>error_log</code> 的调试级别</li><li>必须使用日志回滚政策</li></ul></blockquote><p>示例：</p><ul><li>将 debug 信息写入文件</li></ul><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Turn on in a specific context, e.g.:</span><span class="token comment" spellcheck="true">##   - global    - for global logging</span><span class="token comment" spellcheck="true">##   - http      - for http and all locations logging</span><span class="token comment" spellcheck="true">##   - location  - for specific location</span><span class="token keyword">error_log</span> <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>error<span class="token operator">-</span>debug<span class="token punctuation">.</span>log debug<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>将 debug 信息写入内存</li></ul><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">error_log</span> memory<span class="token punctuation">:</span>32m debug<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>IP 地址/范围的调试日志：</li></ul><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">events</span> <span class="token punctuation">{</span>  <span class="token keyword">debug_connection</span>    <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">252.15</span><span class="token operator">/</span><span class="token number">32</span><span class="token punctuation">;</span>  <span class="token keyword">debug_connection</span>    <span class="token number">10.10</span><span class="token punctuation">.</span><span class="token number">10.0</span><span class="token operator">/</span><span class="token number">24</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>为不同服务器设置不同 Debug 配置</li></ul><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">error_log</span> <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>debug<span class="token punctuation">.</span>log debug<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">http</span> <span class="token punctuation">{</span>  <span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">## To enable debugging:</span>    <span class="token keyword">error_log</span> <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>domain<span class="token punctuation">.</span>com<span class="token operator">/</span>domain<span class="token punctuation">.</span>com<span class="token operator">-</span>debug<span class="token punctuation">.</span>log debug<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## To disable debugging:</span>    <span class="token keyword">error_log</span> <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>domain<span class="token punctuation">.</span>com<span class="token operator">/</span>domain<span class="token punctuation">.</span>com<span class="token operator">-</span>debug<span class="token punctuation">.</span>log<span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="核心转储"><a href="#核心转储" class="headerlink" title="核心转储"></a>核心转储</h3><blockquote><p>核心转储基本上是程序崩溃时内存的快照。</p><p>Nginx 是一个非常稳定的守护程序，但是有时可能会发生正在运行的 Nginx 进程独特终止的情况。</p><p>如果要保存内存转储，它可以确保应启用两个重要的指令，但是，为了正确处理内存转储，需要做一些事情。 有关它的完整信息，请参见转储进程的内存（来自本手册）。</p><p>当您的 Nginx 实例收到意外错误或崩溃时，应始终启用核心转储。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">worker_rlimit_core</span>    500m<span class="token punctuation">;</span><span class="token keyword">worker_rlimit_nofile</span>  <span class="token number">65535</span><span class="token punctuation">;</span><span class="token keyword">working_directory</span>     <span class="token operator">/</span>var<span class="token operator">/</span>dump<span class="token operator">/</span>nginx<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><h3 id="工作进程数"><a href="#工作进程数" class="headerlink" title="工作进程数"></a>工作进程数</h3><blockquote><p><code>worker_processes</code> - 用于设置 Nginx 的工作进程数。</p></blockquote><ul><li>worker_processes 的默认值为 1。</li><li>设置 worker_processes 的安全做法是将其设为 auto，则启动 Nginx 时会自动分配工作进程数。当然，也可以显示的设置一个工作进程数值。</li><li>一般一个进程足够了，你可以把连接数设得很大。（worker_processes: 1，worker_connections: 10,000）如果有 SSL、gzip 这些比较消耗 CPU 的工作，而且是多核 CPU 的话，可以设为和 CPU 的数量一样。或者要处理很多很多的小文件，而且文件总大小比内存大很多的时候，也可以把进程数增加，以充分利用 IO 带宽（主要似乎是 IO 操作有 block）</li></ul><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## The safest way:</span><span class="token keyword">worker_processes</span> auto<span class="token punctuation">;</span><span class="token comment" spellcheck="true">## VCPU = 4 , expr $(nproc --all) - 1</span><span class="token keyword">worker_processes</span> <span class="token number">3</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最大连接数"><a href="#最大连接数" class="headerlink" title="最大连接数"></a>最大连接数</h3><blockquote><p><code>worker_connections</code> - 单个 Nginx 工作进程允许同时建立的外部连接的数量。数字越大，能同时处理的连接越多。</p></blockquote><p><code>worker_connections</code> 不是随便设置的，而是与两个指标有重要关联：</p><ul><li>内存<ul><li>每个连接数分别对应一个 read_event、一个 write_event 事件，一个连接数大概占用 232 字节，2 个事件总占用 96 字节，那么一个连接总共占用 328 字节，通过数学公式可以算出 100000 个连接数大概会占用 31M = 100000 * 328 / 1024 / 1024，当然这只是 nginx 启动时，worker_connections 连接数所占用的 nginx。</li></ul></li><li>操作系统级别”进程最大可打开文件数“。<ul><li>进程最大可打开文件数受限于操作系统，可通过 <code>ulimit -n</code> 命令查询，以前是 1024，现在是 65535。</li><li>nginx 提供了 worker_rlimit_nofile 指令，这是除了 ulimit 的一种设置可用的描述符的方式。 该指令与使用 ulimit 对用户的设置是同样的效果。此指令的值将覆盖 ulimit 的值，如：worker_rlimit_nofile 20960; 设置 ulimits：ulimit -SHn 65535</li></ul></li></ul><h3 id="使用-HTTP-2"><a href="#使用-HTTP-2" class="headerlink" title="使用 HTTP/2"></a>使用 HTTP/2</h3><blockquote><p>HTTP / 2 将使我们的应用程序更快，更简单且更可靠。 HTTP / 2 的主要目标是通过启用完整的请求和响应多路复用来减少延迟，通过有效压缩 HTTP 标头字段来最小化协议开销，并增加对请求优先级和服务器推送的支持。</p><p>HTTP / 2 与 HTTP / 1.1 向后兼容，因此有可能完全忽略它，并且一切都会像以前一样继续工作，因为如果不支持 HTTP / 2 的客户端永远不会向服务器请求 HTTP / 2 通讯升级：它们之间的通讯将完全是 HTTP1 / 1。</p><p>请注意，HTTP / 2 在单个 TCP 连接中多路复用许多请求。 通常，当使用 HTTP / 2 时，将与服务器建立单个 TCP 连接。</p><p>您还应该包括 ssl 参数，这是必需的，因为浏览器不支持未经加密的 HTTP / 2。</p><p>HTTP / 2 对旧的和不安全的密码有一个非常大的黑名单，因此您应该避免使用它们。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="维护-SSL-会话"><a href="#维护-SSL-会话" class="headerlink" title="维护 SSL 会话"></a>维护 SSL 会话</h3><blockquote><p>客户端每次发出请求时都进行新的 SSL 握手的需求。默认情况下，内置会话缓存并不是最佳选择，因为它只能由一个工作进程使用，并且可能导致内存碎片，最好使用共享缓存。</p><p>使用 <code>ssl_session_cache</code> 时，通过 SSL 保持连接的性能可能会大大提高。10M 的值是一个很好的起点（1MB 共享缓存可以容纳大约 4,000 个会话）。通过共享，所有工作进程之间共享一个缓存（可以在多个虚拟服务器中使用相同名称的缓存）。</p><p>但是，大多数服务器不清除会话或票证密钥，因此增加了服务器受到损害将泄漏先前（和将来）连接中的数据的风险。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_session_cache</span>   shared<span class="token punctuation">:</span>NGX_SSL_CACHE<span class="token punctuation">:</span>10m<span class="token punctuation">;</span><span class="token keyword">ssl_session_timeout</span> 12h<span class="token punctuation">;</span>ssl_session_tickets off<span class="token punctuation">;</span>ssl_buffer_size     <span class="token number">1400</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="尽可能在-server-name-指令中使用确切名称"><a href="#尽可能在-server-name-指令中使用确切名称" class="headerlink" title="尽可能在 server_name 指令中使用确切名称"></a>尽可能在 server_name 指令中使用确切名称</h4><blockquote><p>确切名称，以星号开头的通配符名称和以星号结尾的通配符名称存储在绑定到侦听端口的三个哈希表中。</p><p>首先搜索确切名称哈希表。 如果未找到名称，则搜索具有以星号开头的通配符名称的哈希表。 如果未在此处找到名称，则搜索带有通配符名称以星号结尾的哈希表。 搜索通配符名称哈希表比搜索精确名称哈希表要慢，因为名称是按域部分搜索的。</p><p>正则表达式是按顺序测试的，因此是最慢的方法，并且不可缩放。由于这些原因，最好在可能的地方使用确切的名称。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## It is more efficient to define them explicitly:</span><span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">listen</span>       <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">252.10</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>    <span class="token keyword">server_name</span>  example<span class="token punctuation">.</span>org  www<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org  <span class="token operator">*</span><span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## Than to use the simplified form:</span><span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">listen</span>       <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">252.10</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>    <span class="token keyword">server_name</span>  <span class="token punctuation">.</span>example<span class="token punctuation">.</span>org<span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="避免使用-if-检查-server-name"><a href="#避免使用-if-检查-server-name" class="headerlink" title="避免使用 if 检查 server_name"></a>避免使用 <code>if</code> 检查 <code>server_name</code></h3><blockquote><p>当 Nginx 收到请求时，无论请求的是哪个子域，无论是 <a href="http://www.example.com/">www.example.com</a> 还是普通的 example.com，如果始终对 if 指令进行评估。 由于您是在请求 Nginx 检查每个请求的 Host 标头。 效率极低。</p><p>而是使用两个服务器指令，如下面的示例。 这种方法降低了 Nginx 的处理要求。</p></blockquote><p>示例：</p><p>❌ 错误配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">server_name</span>                 domain<span class="token punctuation">.</span>com www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$host</span> <span class="token operator">=</span> www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>com<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span>                    <span class="token number">301</span> <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>domain<span class="token punctuation">.</span>com<span class="token variable">$request_uri</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">server_name</span>                 domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⭕ 正确配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">server_name</span>               www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>    <span class="token keyword">return</span>                    <span class="token number">301</span> <span class="token variable">$scheme</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>domain<span class="token punctuation">.</span>com<span class="token variable">$request_uri</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## If you force your web traffic to use HTTPS:</span>    <span class="token comment" spellcheck="true">##                         301 https://domain.com$request_uri;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token keyword">server</span> <span class="token punctuation">{</span>    <span class="token keyword">listen</span>                    <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">252.10</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>    <span class="token keyword">server_name</span>               domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用-request-uri-来避免使用正则表达式"><a href="#使用-request-uri-来避免使用正则表达式" class="headerlink" title="使用 $request_uri 来避免使用正则表达式"></a>使用 <code>$request_uri</code> 来避免使用正则表达式</h3><blockquote><p>使用内置变量 <code>$request_uri</code>，我们可以完全避免进行任何捕获或匹配。默认情况下，正则表达式的代价较高，并且会降低性能。</p><p>此规则用于解决将 URL 不变地传递到新主机，确保仅通过现有 URI 进行返回的效率更高。</p></blockquote><p>示例：</p><p>❌ 错误配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## 1)</span><span class="token keyword">rewrite</span> <span class="token operator">^</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span>$ <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>$<span class="token number">1</span> permanent<span class="token punctuation">;</span><span class="token comment" spellcheck="true">## 2)</span><span class="token keyword">rewrite</span> <span class="token operator">^</span> <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token variable">$request_uri</span><span class="token operator">?</span> permanent<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⭕ 正确配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">return</span> <span class="token number">301</span> <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token variable">$request_uri</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用-try-files-指令确认文件是否存在"><a href="#使用-try-files-指令确认文件是否存在" class="headerlink" title="使用 try_files 指令确认文件是否存在"></a>使用 <code>try_files</code> 指令确认文件是否存在</h3><blockquote><p><code>try_files</code> is definitely a very useful thing. You can use <code>try_files</code> directive to check a file exists in a specified order.</p></blockquote><blockquote><p>You should use <code>try_files</code> instead of <code>if</code> directive. It’s definitely better way than using <code>if</code> for this action because <code>if</code> directive is extremely inefficient since it is evaluated every time for every request.</p></blockquote><blockquote><p>The advantage of using <code>try_files</code> is that the behavior switches immediately with one command. I think the code is more readable also.</p></blockquote><blockquote><p><code>try_files</code> allows you:</p><ul><li>to check if the file exists from a predefined list</li><li>to check if the file exists from a specified directory</li><li>to use an internal redirect if none of the files are found</li></ul></blockquote><p>示例：</p><p>❌ 错误配置</p><pre class="line-numbers language-nginx"><code class="language-nginx">  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">root</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token keyword">location</span> <span class="token operator">/</span>images <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">-</span>f <span class="token variable">$request_filename</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">expires</span> 30d<span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⭕ 正确配置</p><pre class="line-numbers language-nginx"><code class="language-nginx">  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">root</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token keyword">location</span> <span class="token operator">/</span>images <span class="token punctuation">{</span>    <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用-return-代替-rewrite-来做重定向"><a href="#使用-return-代替-rewrite-来做重定向" class="headerlink" title="使用 return 代替 rewrite 来做重定向"></a>使用 return 代替 rewrite 来做重定向</h3><blockquote><p>您应该使用服务器块和 return 语句，因为它们比通过位置块评估 RegEx 更简单，更快捷。 该指令停止处理，并将指定的代码返回给客户端。</p></blockquote><p>示例：</p><p>❌ 错误配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$host</span> <span class="token operator">=</span> api<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>com<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">rewrite</span>     <span class="token operator">^</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span>$ <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>$<span class="token number">1</span> permanent<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⭕ 正确配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$host</span> <span class="token operator">=</span> api<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>com<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span>      <span class="token number">403</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## or other examples:</span>    <span class="token comment" spellcheck="true">##   return    301 https://domain.com$request_uri;</span>    <span class="token comment" spellcheck="true">##   return    301 $scheme://$host$request_uri;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="开启-PCRE-JIT-来加速正则表达式处理"><a href="#开启-PCRE-JIT-来加速正则表达式处理" class="headerlink" title="开启 PCRE JIT 来加速正则表达式处理"></a>开启 PCRE JIT 来加速正则表达式处理</h3><blockquote><p>允许使用 JIT 的正则表达式来加速他们的处理。</p><p>通过与 PCRE 库编译 Nginx 的，你可以用你的 location 块进行复杂的操作和使用功能强大的 return 和 rewrite。</p><p>PCRE JIT 可以显著加快正则表达式的处理。 Nginx 的与 pcre_jit 比没有更快的幅度。</p><p>如果你试图在使用 pcre_jit;没有可用的 JIT，或者 Nginx 的与现有 JIT，但当前加载 PCRE 库编译不支持 JIT，将配置解析时发出警告。</p><p>当您编译使用 NGNIX 配置 PCRE 库时，才需要–with-PCRE-JIT 时（./configure –with-PCRE =）。当使用系统 PCRE 库 JIT 是否被支持依赖于库是如何被编译。</p><p>从 Nginx 的文档：</p><p>JIT 正在从与–enable-JIT 配置参数内置 8.20 版本开始 PCRE 库提供。当 PCRE 库与 nginx 的内置（–with-PCRE =）时，JIT 支持经由–with-PCRE-JIT 配置参数使能。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## In global context:</span><span class="token keyword">pcre_jit</span> on<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="进行精确的位置匹配以加快选择过程"><a href="#进行精确的位置匹配以加快选择过程" class="headerlink" title="进行精确的位置匹配以加快选择过程"></a>进行精确的位置匹配以加快选择过程</h4><blockquote><p>精确的位置匹配通常用于通过立即结束算法的执行来加快选择过程。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Matches the query / only and stops searching:</span><span class="token keyword">location</span> <span class="token operator">=</span> <span class="token operator">/</span> <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## Matches the query /v9 only and stops searching:</span><span class="token keyword">location</span> <span class="token operator">=</span> <span class="token operator">/</span>v9 <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">## Matches any query due to the fact that all queries begin at /,</span><span class="token comment" spellcheck="true">## but regular expressions and any longer conventional blocks will be matched at first place:</span><span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用-limit-conn-改善对下载速度的限制"><a href="#使用-limit-conn-改善对下载速度的限制" class="headerlink" title="使用 limit_conn 改善对下载速度的限制"></a>使用 <code>limit_conn</code> 改善对下载速度的限制</h4><blockquote><p>Nginx provides two directives to limiting download speed:</p><p>Nginx 提供了两个指令来限制下载速度：</p><ul><li><code>limit_rate_after</code> - 设置 limit_rate 指令生效之前传输的数据量</li><li><code>limit_rate</code> - 允许您限制单个客户端连接的传输速率</li></ul></blockquote><blockquote><p>此解决方案限制了每个连接的 Nginx 下载速度，因此，如果一个用户打开多个（例如） 视频文件，则可以下载 <code>X * 连接到视频文件的次数</code> 。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Create limit connection zone:</span><span class="token keyword">limit_conn_zone</span> <span class="token variable">$binary_remote_addr</span> zone<span class="token operator">=</span>conn_for_remote_addr<span class="token punctuation">:</span>1m<span class="token punctuation">;</span><span class="token comment" spellcheck="true">## Add rules to limiting the download speed:</span><span class="token keyword">limit_rate_after</span> 1m<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## run at maximum speed for the first 1 megabyte</span><span class="token keyword">limit_rate</span> 250k<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">## and set rate limit after 1 megabyte</span><span class="token comment" spellcheck="true">## Enable queue:</span><span class="token keyword">location</span> <span class="token operator">/</span>videos <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">## Max amount of data by one client: 10 megabytes (limit_rate_after * 10)</span>  <span class="token keyword">limit_conn</span> conn_for_remote_addr <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Hardening"><a href="#Hardening" class="headerlink" title="Hardening"></a>Hardening</h2><ul><li><strong><a href="https://github.com/trimstray/nginx-admins-handbook#toc-hardening-2">⬆ Hardening</a></strong><ul><li><a href="#beginner-always-keep-nginx-up-to-date">Always keep Nginx up-to-date</a></li><li><a href="#beginner-run-as-an-unprivileged-user">Run as an unprivileged user</a></li><li><a href="#beginner-disable-unnecessary-modules">Disable unnecessary modules</a></li><li><a href="#beginner-protect-sensitive-resources">Protect sensitive resources</a></li><li><a href="#beginner-hide-nginx-version-number">Hide Nginx version number</a></li><li><a href="#beginner-hide-nginx-server-signature">Hide Nginx server signature</a></li><li><a href="#beginner-hide-upstream-proxy-headers">Hide upstream proxy headers</a></li><li><a href="#beginner-force-all-connections-over-tls">Force all connections over TLS</a></li><li><a href="#beginner-use-only-the-latest-supported-openssl-version">Use only the latest supported OpenSSL version</a></li><li><a href="#beginner-use-min-2048-bit-private-keys">Use min. 2048-bit private keys</a></li><li><a href="#beginner-keep-only-tls-13-and-tls-12">Keep only TLS 1.3 and TLS 1.2</a></li><li><a href="#beginner-use-only-strong-ciphers">Use only strong ciphers</a></li><li><a href="#beginner-use-more-secure-ecdh-curve">Use more secure ECDH Curve</a></li><li><a href="#beginner-use-strong-key-exchange-with-perfect-forward-secrecy">Use strong Key Exchange with Perfect Forward Secrecy</a></li><li><a href="#beginner-prevent-replay-attacks-on-zero-round-trip-time">Prevent Replay Attacks on Zero Round-Trip Time</a></li><li><a href="#beginner-defend-against-the-beast-attack">Defend against the BEAST attack</a></li><li><a href="#beginner-mitigation-of-crimebreach-attacks">Mitigation of CRIME/BREACH attacks</a></li><li><a href="#beginner-http-strict-transport-security">HTTP Strict Transport Security</a></li><li><a href="#beginner-reduce-xss-risks-content-security-policy">Reduce XSS risks (Content-Security-Policy)</a></li><li><a href="#beginner-control-the-behaviour-of-the-referer-header-referrer-policy">Control the behaviour of the Referer header (Referrer-Policy)</a></li><li><a href="#beginner-provide-clickjacking-protection-x-frame-options">Provide clickjacking protection (X-Frame-Options)</a></li><li><a href="#beginner-prevent-some-categories-of-xss-attacks-x-xss-protection">Prevent some categories of XSS attacks (X-XSS-Protection)</a></li><li><a href="#beginner-prevent-sniff-mimetype-middleware-x-content-type-options">Prevent Sniff Mimetype middleware (X-Content-Type-Options)</a></li><li><a href="#beginner-deny-the-use-of-browser-features-feature-policy">Deny the use of browser features (Feature-Policy)</a></li><li><a href="#beginner-reject-unsafe-http-methods">Reject unsafe HTTP methods</a></li><li><a href="#beginner-prevent-caching-of-sensitive-data">Prevent caching of sensitive data</a></li><li><a href="#beginner-control-buffer-overflow-attacks">Control Buffer Overflow attacks</a></li><li><a href="#beginner-mitigating-slow-http-dos-attacks-closing-slow-connections">Mitigating Slow HTTP DoS attacks (Closing Slow Connections)</a></li></ul></li></ul><p>In this chapter I will talk about some of the Nginx hardening approaches and security standards.</p><h3 id="beginner-Always-keep-Nginx-up-to-date"><a href="#beginner-Always-keep-Nginx-up-to-date" class="headerlink" title=":beginner: Always keep Nginx up-to-date"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Always keep Nginx up-to-date</h3><h4 id="Rationale"><a href="#Rationale" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Nginx is a very secure and stable but vulnerabilities in the main binary itself do pop up from time to time. It’s the main reason for keep Nginx up-to-date as hard as you can.</p></blockquote><blockquote><p>A very safe way to plan the update is once a new stable version is released but for me the most common way to handle Nginx updates is to wait a few weeks after the stable release.</p></blockquote><blockquote><p>Before update/upgrade Nginx remember about do it on the testing environment.</p></blockquote><blockquote><p>Most modern GNU/Linux distros will not push the latest version of Nginx into their default package lists so maybe you should consider install it from sources.</p></blockquote><h4 id="External-resources"><a href="#External-resources" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="HELPERS.md#installing-from-prebuilt-packages">Installing from prebuilt packages (from this handbook)</a></li><li><a href="HELPERS.md#installing-from-source">Installing from source (from this handbook)</a></li></ul><h3 id="beginner-Run-as-an-unprivileged-user"><a href="#beginner-Run-as-an-unprivileged-user" class="headerlink" title=":beginner: Run as an unprivileged user"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Run as an unprivileged user</h3><h4 id="Rationale-1"><a href="#Rationale-1" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>There is no real difference in security just by changing the process owner name. On the other hand in security, the principle of least privilege states that an entity should be given no more permission than necessary to accomplish its goals within a given system. This way only master process runs as root.</p></blockquote><blockquote><p>This is the default Nginx behaviour, but remember to check it.</p></blockquote><h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## Edit nginx.conf:</span>user nginx<span class="token punctuation">;</span><span class="token comment" spellcheck="true">## Set owner and group for root (app, default) directory:</span><span class="token function">chown</span> -R nginx:nginx /var/www/domain.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-1"><a href="#External-resources-1" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://unix.stackexchange.com/questions/134301/why-does-nginx-starts-process-as-root">Why does nginx starts process as root?</a></li></ul><h3 id="beginner-Disable-unnecessary-modules"><a href="#beginner-Disable-unnecessary-modules" class="headerlink" title=":beginner: Disable unnecessary modules"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Disable unnecessary modules</h3><h4 id="Rationale-2"><a href="#Rationale-2" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>It is recommended to disable any modules which are not required as this will minimise the risk of any potential attacks by limiting the operations allowed by the web server.</p></blockquote><blockquote><p>The best way to unload unused modules is use the <code>configure</code> option during installation. If you have static linking a shared module you should re-compile Nginx.</p></blockquote><blockquote><p>Use only high quality modules and remember about that:</p><p><em>Unfortunately, many third‑party modules use blocking calls, and users (and sometimes even the developers of the modules) aren’t aware of the drawbacks. Blocking operations can ruin Nginx performance and must be avoided at all costs.</em></p></blockquote><h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## 1) During installation:</span><span class="token punctuation">.</span><span class="token operator">/</span>configure <span class="token operator">--</span>without<span class="token operator">-</span>http_autoindex_module<span class="token comment" spellcheck="true">## 2) Comment modules in the configuration file e.g. modules.conf:</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ndk_http_module.so;</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ngx_http_auth_pam_module.so;</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ngx_http_cache_purge_module.so;</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ngx_http_dav_ext_module.so;</span>load_module                   <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>modules<span class="token operator">/</span>ngx_http_echo_module<span class="token punctuation">.</span>so<span class="token punctuation">;</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ngx_http_fancyindex_module.so;</span>load_module                   <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>modules<span class="token operator">/</span>ngx_http_geoip_module<span class="token punctuation">.</span>so<span class="token punctuation">;</span>load_module                   <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>modules<span class="token operator">/</span>ngx_http_headers_more_filter_module<span class="token punctuation">.</span>so<span class="token punctuation">;</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ngx_http_image_filter_module.so;</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ngx_http_lua_module.so;</span>load_module                   <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>modules<span class="token operator">/</span>ngx_http_perl_module<span class="token punctuation">.</span>so<span class="token punctuation">;</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ngx_mail_module.so;</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ngx_nchan_module.so;</span><span class="token comment" spellcheck="true">## load_module                 /usr/share/nginx/modules/ngx_stream_module.so;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-2"><a href="#External-resources-2" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://github.com/nginx-modules">nginx-modules</a></li></ul><h3 id="beginner-Protect-sensitive-resources"><a href="#beginner-Protect-sensitive-resources" class="headerlink" title=":beginner: Protect sensitive resources"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Protect sensitive resources</h3><h4 id="Rationale-3"><a href="#Rationale-3" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Hidden directories and files should never be web accessible - sometimes critical data are published during application deploy. If you use control version system you should defninitely drop the access to the critical hidden directories like a <code>.git</code> or <code>.svn</code> to prevent expose source code of your application.</p></blockquote><blockquote><p>Sensitive resources contains items that abusers can use to fully recreate the source code used by the site and look for bugs, vulnerabilities, and exposed passwords.</p></blockquote><h4 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request_uri</span> <span class="token operator">~</span> <span class="token string">"/\.git"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token number">403</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## or</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>\<span class="token punctuation">.</span>git <span class="token punctuation">{</span>  <span class="token keyword">deny</span> all<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## or</span><span class="token keyword">location</span> <span class="token operator">~</span><span class="token operator">*</span> <span class="token operator">^</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">:</span>git<span class="token operator">|</span>svn<span class="token operator">|</span>htaccess<span class="token punctuation">)</span><span class="token punctuation">)</span>$ <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token number">403</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## or all . directories/files excepted .well-known</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>\<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>well<span class="token operator">-</span>known\<span class="token operator">/</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">deny</span> all<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-3"><a href="#External-resources-3" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://github.com/bl4de/research/tree/master/hidden_directories_leaks">Hidden directories and files as a source of sensitive information about web application</a></li></ul><h3 id="beginner-Hide-Nginx-version-number"><a href="#beginner-Hide-Nginx-version-number" class="headerlink" title=":beginner: Hide Nginx version number"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Hide Nginx version number</h3><h4 id="Rationale-4"><a href="#Rationale-4" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Disclosing the version of Nginx running can be undesirable, particularly in environments sensitive to information disclosure.</p></blockquote><p>But the “Official Apache Documentation (Apache Core Features)” (yep, it’s not a joke…) say:</p><blockquote><p><em>Setting ServerTokens to less than minimal is not recommended because it makes it more difficult to debug interoperational problems. Also note that disabling the Server: header does nothing at all to make your server more secure. The idea of “security through obscurity” is a myth and leads to a false sense of safety.</em></p></blockquote><h4 id="Example-3"><a href="#Example-3" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server_tokens</span> off<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-4"><a href="#External-resources-4" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://geekflare.com/remove-server-header-banner-nginx/">Remove Version from Server Header Banner in nginx</a></li><li><a href="https://www.tunetheweb.com/security/http-security-headers/server-header/">Reduce or remove server headers</a></li></ul><h3 id="beginner-Hide-Nginx-server-signature"><a href="#beginner-Hide-Nginx-server-signature" class="headerlink" title=":beginner: Hide Nginx server signature"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Hide Nginx server signature</h3><h4 id="Rationale-5"><a href="#Rationale-5" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>One of the easiest first steps to undertake, is to prevent the web server from showing its used software via the server header. Certainly, there are several reasons why you would like to change the server header. It could be security, it could be redundant systems, load balancers etc.</p></blockquote><blockquote><p>In my opinion there is no real reason or need to show this much information about your server. It is easy to look up particular vulnerabilities once you know the version number.</p></blockquote><blockquote><p>You should compile Nginx from sources with <code>ngx_headers_more</code> to used <code>more_set_headers</code> directive or use a <a href="https://gitlab.com/buik/nginx/blob/master/nginx-remove-server-header.patch">nginx-remove-server-header.patch</a>.</p></blockquote><h4 id="Example-4"><a href="#Example-4" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx">more_set_headers <span class="token string">"Server: Unknown"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-5"><a href="#External-resources-5" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://www.troyhunt.com/shhh-dont-let-your-response-headers/">Shhh… don’t let your response headers talk too loudly</a></li><li><a href="https://stackoverflow.com/questions/24594971/how-to-changehide-the-nginx-server-signature">How to change (hide) the Nginx Server Signature?</a></li></ul><h3 id="beginner-Hide-upstream-proxy-headers"><a href="#beginner-Hide-upstream-proxy-headers" class="headerlink" title=":beginner: Hide upstream proxy headers"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Hide upstream proxy headers</h3><h4 id="Rationale-6"><a href="#Rationale-6" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Securing a server goes far beyond not showing what’s running but I think less is more is better.</p></blockquote><blockquote><p>When Nginx is used to proxy requests to an upstream server (such as a PHP-FPM instance), it can be beneficial to hide certain headers sent in the upstream response (e.g. the version of PHP running).</p></blockquote><h4 id="Example-5"><a href="#Example-5" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">proxy_hide_header</span> X<span class="token operator">-</span>Powered<span class="token operator">-</span>By<span class="token punctuation">;</span><span class="token keyword">proxy_hide_header</span> X<span class="token operator">-</span>AspNetMvc<span class="token operator">-</span>Version<span class="token punctuation">;</span><span class="token keyword">proxy_hide_header</span> X<span class="token operator">-</span>AspNet<span class="token operator">-</span>Version<span class="token punctuation">;</span><span class="token keyword">proxy_hide_header</span> X<span class="token operator">-</span>Drupal<span class="token operator">-</span>Cache<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-6"><a href="#External-resources-6" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://veggiespam.com/headers/">Remove insecure http headers</a></li></ul><h3 id="beginner-Force-all-connections-over-TLS"><a href="#beginner-Force-all-connections-over-TLS" class="headerlink" title=":beginner: Force all connections over TLS"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Force all connections over TLS</h3><h4 id="Rationale-7"><a href="#Rationale-7" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>TLS provides two main services. For one, it validates the identity of the server that the user is connecting to for the user. It also protects the transmission of sensitive information from the user to the server.</p></blockquote><blockquote><p>In my opinion you should always use HTTPS instead of HTTP to protect your website, even if it doesn’t handle sensitive communications. The application can have many sensitive places that should be protected.</p></blockquote><blockquote><p>Always put login page, registration forms, all subsequent authenticated pages, contact forms, and payment details forms in HTTPS to prevent injection and sniffing. Them must be accessed only over TLS to ensure your traffic is secure.</p></blockquote><blockquote><p>If page is available over TLS, it must be composed completely of content which is transmitted over TLS. Requesting subresources using the insecure HTTP protocol weakens the security of the entire page and HTTPS protocol. Modern browsers should blocked or report all active mixed content delivered via HTTP on pages by default.</p></blockquote><blockquote><p>Also remember to implement the <a href="#beginner-http-strict-transport-security">HTTP Strict Transport Security (HSTS)</a>.</p></blockquote><blockquote><p>We have currently the first free and open CA - <a href="https://letsencrypt.org/">Let’s Encrypt</a> - so generating and implementing certificates has never been so easy. It was created to provide free and easy-to-use TLS and SSL certificates.</p></blockquote><h4 id="Example-6"><a href="#Example-6" class="headerlink" title="Example"></a>Example</h4><ul><li><p>force all traffic to use TLS:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>  <span class="token keyword">server_name</span> domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">301</span> <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token variable">$host</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span><span class="token punctuation">;</span>  <span class="token keyword">server_name</span> domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>force e.g. login page to use TLS:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">10.240</span><span class="token punctuation">.</span><span class="token number">20.2</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>  <span class="token keyword">server_name</span> domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">location</span> <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span>login <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token number">301</span> <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>domain<span class="token punctuation">.</span>com<span class="token variable">$request_uri</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="External-resources-7"><a href="#External-resources-7" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://security.stackexchange.com/questions/23646/should-we-force-user-to-https-on-website">Should we force user to HTTPS on website?</a></li><li><a href="https://security.stackexchange.com/questions/137542/force-a-user-to-https">Force a user to HTTPS</a></li><li><a href="https://letsencrypt.org/docs/">Let’s Encrypt Documentation</a></li></ul><h3 id="beginner-Use-only-the-latest-supported-OpenSSL-version"><a href="#beginner-Use-only-the-latest-supported-OpenSSL-version" class="headerlink" title=":beginner: Use only the latest supported OpenSSL version"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Use only the latest supported OpenSSL version</h3><h4 id="Rationale-8"><a href="#Rationale-8" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Before start see <a href="https://www.openssl.org/policies/releasestrat.html">Release Strategy Policies</a> and <a href="https://www.openssl.org/news/changelog.html">Changelog</a> on the OpenSSL website.</p></blockquote><blockquote><p>Criteria for choosing OpenSSL version can vary and it depends all on your use.</p></blockquote><blockquote><p>The latest versions of the major OpenSSL library are (may be changed):</p><ul><li>the next version of OpenSSL will be 3.0.0</li><li>version 1.1.1 will be supported until 2023-09-11 (LTS)<ul><li>last minor version: 1.1.1c (May 23, 2019)</li></ul></li><li>version 1.1.0 will be supported until 2019-09-11<ul><li>last minor version: 1.1.0k (May 28, 2018)</li></ul></li><li>version 1.0.2 will be supported until 2019-12-31 (LTS)<ul><li>last minor version: 1.0.2s (May 28, 2018)</li></ul></li><li>any other versions are no longer supported</li></ul></blockquote><blockquote><p>In my opinion the only safe way is based on the up-to-date and still supported version of the OpenSSL. And what’s more, I recommend to hang on to the latest versions (e.g. 1.1.1).</p></blockquote><blockquote><p>If your system repositories do not have the newest OpenSSL, you can do the <a href="https://github.com/trimstray/nginx-admins-handbook#installing-from-source">compilation</a> process (see OpenSSL sub-section).</p></blockquote><h4 id="External-resources-8"><a href="#External-resources-8" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://www.openssl.org/">OpenSSL Official Website</a></li><li><a href="https://www.openssl.org/blog/">OpenSSL Official Blog</a></li><li><a href="https://www.openssl.org/news/newslog.html">OpenSSL Official Newslog</a></li></ul><h3 id="beginner-Use-min-2048-bit-private-keys"><a href="#beginner-Use-min-2048-bit-private-keys" class="headerlink" title=":beginner: Use min. 2048-bit private keys"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Use min. 2048-bit private keys</h3><h4 id="Rationale-9"><a href="#Rationale-9" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Advisories recommend 2048 for now. Security experts are projecting that 2048 bits will be sufficient for commercial use until around the year 2030 (as per NIST).</p></blockquote><blockquote><p>The latest version of FIPS-186 also say the U.S. Federal Government generate (and use) digital signatures with 1024, 2048, or 3072 bit key lengths.</p></blockquote><blockquote><p>Generally there is no compelling reason to choose 4096 bit keys over 2048 provided you use sane expiration intervals.</p></blockquote><blockquote><p>If you want to get <strong>A+ with 100%s on SSL Lab</strong> (for Key Exchange) you should definitely use 4096 bit private keys. That’s the main reason why you should use them.</p></blockquote><blockquote><p>Longer keys take more time to generate and require more CPU and power when used for encrypting and decrypting, also the SSL handshake at the start of each connection will be slower. It also has a small impact on the client side (e.g. browsers).</p></blockquote><blockquote><p>You can test above on your server with <code>openssl speed rsa</code> but remember: in OpenSSL speed tests you see difference on block cipher speed, while in real life most cpu time is spent on asymmetric algorithms during ssl handshake. On the other hand, modern processors are capable of executing at least 1k of RSA 1024-bit signs per second on a single core, so this isn’t usually an issue.</p></blockquote><blockquote><p>Use of alternative solution: <a href="https://en.wikipedia.org/wiki/Elliptic-curve_cryptography">ECC Certificate Signing Request (CSR)</a> - <code>ECDSA</code> certificates contain an <code>ECC</code> public key. <code>ECC</code> keys are better than <code>RSA &amp; DSA</code> keys in that the <code>ECC</code> algorithm is harder to break.</p></blockquote><p>The “SSL/TLS Deployment Best Practices” book say:</p><blockquote><p><em>The cryptographic handshake, which is used to establish secure connections, is an operation whose cost is highly influenced by private key size. Using a key that is too short is insecure, but using a key that is too long will result in “too much” security and slow operation. For most web sites, using RSA keys stronger than 2048 bits and ECDSA keys stronger than 256 bits is a waste of CPU power and might impair user experience. Similarly, there is little benefit to increasing the strength of the ephemeral key exchange beyond 2048 bits for DHE and 256 bits for ECDHE.</em></p></blockquote><p>Konstantin Ryabitsev (Reddit):</p><blockquote><p><em>Generally speaking, if we ever find ourselves in a world where 2048-bit keys are no longer good enough, it won’t be because of improvements in brute-force capabilities of current computers, but because RSA will be made obsolete as a technology due to revolutionary computing advances. If that ever happens, 3072 or 4096 bits won’t make much of a difference anyway. This is why anything above 2048 bits is generally regarded as a sort of feel-good hedging theatre.</em></p></blockquote><p><strong>My recommendation:</strong></p><blockquote><p>Use 2048-bit key instead of 4096-bit at this moment.</p></blockquote><h4 id="Example-7"><a href="#Example-7" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">### Example (RSA):</span><span class="token punctuation">(</span> _fd<span class="token operator">=</span><span class="token string">"domain.com.key"</span> <span class="token punctuation">;</span> _len<span class="token operator">=</span><span class="token string">"2048"</span> <span class="token punctuation">;</span> openssl genrsa -out <span class="token variable">${_fd}</span> <span class="token variable">${_len}</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">## Let's Encrypt:</span>certbot certonly -d domain.com -d www.domain.com --rsa-key-size 2048<span class="token comment" spellcheck="true">### Example (ECC):</span><span class="token comment" spellcheck="true">## _curve: prime256v1, secp521r1, secp384r1</span><span class="token punctuation">(</span> _fd<span class="token operator">=</span><span class="token string">"domain.com.key"</span> <span class="token punctuation">;</span> _fd_csr<span class="token operator">=</span><span class="token string">"domain.com.csr"</span> <span class="token punctuation">;</span> _curve<span class="token operator">=</span><span class="token string">"prime256v1"</span> <span class="token punctuation">;</span> \openssl ecparam -out <span class="token variable">${_fd}</span> -name <span class="token variable">${_curve}</span> -genkey <span class="token punctuation">;</span> \openssl req -new -key <span class="token variable">${_fd}</span> -out <span class="token variable">${_fd_csr}</span> -sha256 <span class="token punctuation">)</span><span class="token comment" spellcheck="true">## Let's Encrypt (from above):</span>certbot --csr <span class="token variable">${_fd_csr}</span> -<span class="token punctuation">[</span>other-args<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>For <code>x25519</code>:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">(</span> _fd<span class="token operator">=</span><span class="token string">"private.key"</span> <span class="token punctuation">;</span> _curve<span class="token operator">=</span><span class="token string">"x25519"</span> <span class="token punctuation">;</span> \openssl genpkey -algorithm <span class="token variable">${_curve}</span> -out <span class="token variable">${_fd}</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>100%</b></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">(</span> _fd<span class="token operator">=</span><span class="token string">"domain.com.key"</span> <span class="token punctuation">;</span> _len<span class="token operator">=</span><span class="token string">"2048"</span> <span class="token punctuation">;</span> openssl genrsa -out <span class="token variable">${_fd}</span> <span class="token variable">${_len}</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">## Let's Encrypt:</span>certbot certonly -d domain.com -d www.domain.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>90%</b></p><h4 id="External-resources-9"><a href="#External-resources-9" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://csrc.nist.gov/Projects/Key-Management/Key-Management-Guidelines">Key Management Guidelines by NIST</a></li><li><a href="https://csrc.nist.gov/publications/detail/sp/800-131a/archive/2011-01-13">Recommendation for Transitioning the Use of Cryptographic Algorithms and Key Lengths</a></li><li><a href="http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf">FIPS PUB 186-4 - Digital Signature Standard (DSS)</a> <sup>[pdf]</sup></li><li><a href="https://www.keylength.com/">Cryptographic Key Length Recommendations</a></li><li><a href="https://certsimple.com/blog/measuring-ssl-rsa-keys">So you’re making an RSA key for an HTTPS certificate. What key size do you use?</a></li><li><a href="https://danielpocock.com/rsa-key-sizes-2048-or-4096-bits/">RSA Key Sizes: 2048 or 4096 bits?</a></li><li><a href="https://msol.io/blog/tech/create-a-self-signed-ecc-certificate/">Create a self-signed ECC certificate</a></li></ul><h3 id="beginner-Keep-only-TLS-1-3-and-TLS-1-2"><a href="#beginner-Keep-only-TLS-1-3-and-TLS-1-2" class="headerlink" title=":beginner: Keep only TLS 1.3 and TLS 1.2"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Keep only TLS 1.3 and TLS 1.2</h3><h4 id="Rationale-10"><a href="#Rationale-10" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>It is recommended to run TLS 1.2/1.3 and fully disable SSLv2, SSLv3, TLS 1.0 and TLS 1.1 that have protocol weaknesses and uses older cipher suites (do not provide any modern ciper modes).</p></blockquote><blockquote><p>TLS 1.0 and TLS 1.1 must not be used (see <a href="https://tools.ietf.org/id/draft-moriarty-tls-oldversions-diediedie-00.html">Deprecating TLSv1.0 and TLSv1.1</a>) and were superceded by TLS 1.2, which has now itself been superceded by TLS 1.3. They are also actively being deprecated in accordance with guidance from government agencies (e.g. NIST SP 80052r2) and industry consortia such as the Payment Card Industry Association (PCI) [PCI-TLS1].</p></blockquote><blockquote><p>TLS 1.2 and TLS 1.3 are both without security issues. Only these versions provides modern cryptographic algorithms. TLS 1.3 is a new TLS version that will power a faster and more secure web for the next few years. What’s more, TLS 1.3 comes without a ton of stuff (was removed): renegotiation, compression, and many legacy algorithms: <code>DSA</code>, <code>RC4</code>, <code>SHA1</code>, <code>MD5</code>, <code>CBC</code> MAC-then-Encrypt ciphers. TLS 1.0 and TLS 1.1 protocols will be removed from browsers at the beginning of 2020.</p></blockquote><blockquote><p>TLS 1.2 does require careful configuration to ensure obsolete cipher suites with identified vulnerabilities are not used in conjunction with it. TLS 1.3 removes the need to make these decisions. TLS 1.3 version also improves TLS 1.2 security, privace and performance issues.</p></blockquote><blockquote><p>Before enabling specific protocol version, you should check which ciphers are supported by the protocol. So if you turn on TLS 1.2 and TLS 1.3 both remember about <a href="#beginner-use-only-strong-ciphers">the correct (and strong)</a> ciphers to handle them. Otherwise, they will not be anyway works without supported ciphers (no TLS handshake will succeed).</p></blockquote><blockquote><p>I think the best way to deploy secure configuration is: enable TLS 1.2 without any <code>CBC</code> Ciphers (is safe enough) only TLS 1.3 is safer because of its handling improvement and the exclusion of everything that went obsolete since TLS 1.2 came up.</p></blockquote><blockquote><p>If you told Nginx to use TLS 1.3, it will use TLS 1.3 only where is available. Nginx supports TLS 1.3 since version 1.13.0 (released in April 2017), when built against OpenSSL 1.1.1 or more.</p></blockquote><blockquote><p>For TLS 1.3, think about using <a href="#beginner-prevent-replay-attacks-on-zero-round-trip-time"><code>ssl_early_data</code></a> to allow TLS 1.3 0-RTT handshakes.</p></blockquote><p><strong>My recommendation:</strong></p><blockquote><p>Use only <a href="#keep-only-tls1.2-tls13">TLSv1.3 and TLSv1.2</a>.</p></blockquote><h4 id="Example-8"><a href="#Example-8" class="headerlink" title="Example"></a>Example</h4><p>TLS 1.3 + 1.2:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_protocols</span> TLSv1<span class="token number">.3</span> TLSv1<span class="token number">.2</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>TLS 1.2:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_protocols</span> TLSv1<span class="token number">.2</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>100%</b></p><p>TLS 1.3 + 1.2 + 1.1:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_protocols</span> TLSv1<span class="token number">.3</span> TLSv1<span class="token number">.2</span> TLSv1<span class="token number">.1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>TLS 1.2 + 1.1:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_protocols</span> TLSv1<span class="token number">.2</span> TLSv1<span class="token number">.1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>95%</b></p><h4 id="External-resources-10"><a href="#External-resources-10" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://www.ietf.org/rfc/rfc5246.txt">The Transport Layer Security (TLS) Protocol Version 1.2</a></li><li><a href="https://tools.ietf.org/html/draft-ietf-tls-tls13-18">The Transport Layer Security (TLS) Protocol Version 1.3</a></li><li><a href="https://tls12.ulfheim.net/">TLS1.2 - Every byte explained and reproduced</a></li><li><a href="https://tls13.ulfheim.net/">TLS1.3 - Every byte explained and reproduced</a></li><li><a href="https://wiki.openssl.org/index.php/TLS1.3">TLS1.3 - OpenSSLWiki</a></li><li><a href="https://medium.com/@ethicalevil/tls-handshake-protocol-overview-a39e8eee2cf5">TLS v1.2 handshake overview</a></li><li><a href="https://kinsta.com/blog/tls-1-3/">An Overview of TLS 1.3 - Faster and More Secure</a></li><li><a href="https://blog.cloudflare.com/rfc-8446-aka-tls-1-3/">A Detailed Look at RFC 8446 (a.k.a. TLS 1.3)</a></li><li><a href="https://www.wolfssl.com/differences-between-tls-1-2-and-tls-1-3/">Differences between TLS 1.2 and TLS 1.3</a></li><li><a href="https://assured.se/2018/08/29/tls-1-3-in-a-nut-shell/">TLS 1.3 in a nutshell</a></li><li><a href="https://www.ssl.com/article/tls-1-3-is-here-to-stay/">TLS 1.3 is here to stay</a></li><li><a href="https://ma.ttias.be/enable-tls-1-3-nginx/">How to enable TLS 1.3 on Nginx</a></li><li><a href="https://blog.probely.com/how-to-deploy-modern-tls-in-2018-1b9a9cafc454">How to deploy modern TLS in 2019?</a></li><li><a href="https://media.ccc.de/v/33c3-8348-deploying_tls_1_3_the_great_the_good_and_the_bad">Deploying TLS 1.3: the great, the good and the bad</a></li><li><a href="https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2019/february/downgrade-attack-on-tls-1.3-and-vulnerabilities-in-major-tls-libraries/">Downgrade Attack on TLS 1.3 and Vulnerabilities in Major TLS Libraries</a></li><li><a href="https://www.fastly.com/blog/phase-two-our-tls-10-and-11-deprecation-plan">Phase two of our TLS 1.0 and 1.1 deprecation plan</a></li><li><a href="https://www.keycdn.com/blog/deprecating-tls-1-0-and-1-1">Deprecating TLS 1.0 and 1.1 - Enhancing Security for Everyone</a></li><li><a href="https://www.acunetix.com/blog/articles/tls-vulnerabilities-attacks-final-part/">TLS/SSL Explained – Examples of a TLS Vulnerability and Attack, Final Part</a></li><li><a href="https://security.googleblog.com/2014/10/this-poodle-bites-exploiting-ssl-30.html">This POODLE bites: exploiting the SSL 3.0 fallback</a></li><li><a href="https://blog.pcisecuritystandards.org/are-you-ready-for-30-june-2018-sayin-goodbye-to-ssl-early-tls">Are You Ready for 30 June 2018? Saying Goodbye to SSL/early TLS</a></li><li><a href="https://tools.ietf.org/id/draft-moriarty-tls-oldversions-diediedie-00.html">Deprecating TLSv1.0 and TLSv1.1</a></li></ul><h3 id="beginner-Use-only-strong-ciphers"><a href="#beginner-Use-only-strong-ciphers" class="headerlink" title=":beginner: Use only strong ciphers"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Use only strong ciphers</h3><h4 id="Rationale-11"><a href="#Rationale-11" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>This parameter changes quite often, the recommended configuration for today may be out of date tomorrow.</p></blockquote><blockquote><p>To check ciphers supported by OpenSSL on your server: <code>openssl ciphers -s -v</code>, <code>openssl ciphers -s -v ECDHE</code> or <code>openssl ciphers -s -v DHE</code>.</p></blockquote><blockquote><p>For more security use only strong and not vulnerable cipher suites. Place <code>ECDHE</code> and <code>DHE</code> suites at the top of your list. The order is important because <code>ECDHE</code> suites are faster, you want to use them whenever clients supports them. Ephemeral <code>DHE/ECDHE</code> are recommended and support Perfect Forward Secrecy.</p></blockquote><blockquote><p>For backward compatibility software components you should use less restrictive ciphers. Not only that you have to enable at least one special <code>AES128</code> cipher for HTTP/2 support regarding to <a href="https://tools.ietf.org/html/rfc7540#section-9.2.2">RFC7540: TLS 1.2 Cipher Suites</a>, you also have to allow <code>prime256</code> elliptic curves which reduces the score for key exchange by another 10% even if a secure server preferred order is set.</p></blockquote><blockquote><p>Also modern cipher suites (e.g. from Mozilla recommendations) suffers from compatibility troubles mainly because drops <code>SHA-1</code>. But be careful if you want to use ciphers with <code>HMAC-SHA-1</code> - there’s a perfectly good <a href="https://crypto.stackexchange.com/a/26518">explanation</a> why.</p></blockquote><blockquote><p>If you want to get <strong>A+ with 100%s on SSL Lab</strong> (for Cipher Strength) you should definitely disable <code>128-bit</code> ciphers. That’s the main reason why you should not use them.</p></blockquote><blockquote><p>In my opinion <code>128-bit</code> symmetric encryption doesn’t less secure. Moreover, there are about 30% faster and still secure. For example TLS 1.3 use <code>TLS_AES_128_GCM_SHA256 (0x1301)</code> (for TLS-compliant applications).</p></blockquote><blockquote><p>It is not possible to control ciphers for TLS 1.3 without support from client to use new API for TLS 1.3 cipher suites. Nginx isn’t able to influence that so at this moment it’s always on (also if you disable potentially weak cipher from Nginx). On the other hand the ciphers in TLSv1.3 have been restricted to only a handful of completely secure ciphers by leading crypto experts.</p></blockquote><blockquote><p>For TLS 1.2 you should consider disable weak ciphers without forward secrecy like ciphers with <code>CBC</code> algorithm. Using them also reduces the final grade because they don’t use ephemeral keys. In my opinion you should use ciphers with <code>AEAD</code> (TLS 1.3 supports only these suites) encryption because they don’t have any known weaknesses.</p></blockquote><blockquote><p>Recently new vulnerabilities like Zombie POODLE, GOLDENDOODLE, 0-Length OpenSSL and Sleeping POODLE were published for websites that use <code>CBC</code> (Cipher Block Chaining) block cipher modes. These vulnerabilities are applicable only if the server uses TLS 1.2 or TLS 1.1 or TLS 1.0 with <code>CBC</code> cipher modes. Look at <a href="https://i.blackhat.com/asia-19/Fri-March-29/bh-asia-Young-Zombie-Poodle-Goldendoodle-and-How-TLSv13-Can-Save-Us-All.pdf">Zombie POODLE, GOLDENDOODLE, &amp; How TLSv1.3 Can Save Us All</a> presentation from Black Hat Asia 2019.</p></blockquote><blockquote><p>Disable TLS cipher modes (all ciphers that start with <code>TLS_RSA_WITH_*</code>) that use RSA encryption because they are vulnerable to <a href="https://robotattack.org/">ROBOT</a> attack. Not all servers that support RSA key exchange are vulnerable, but it is recommended to disable RSA key exchange ciphers as it does not support forward secrecy.</p></blockquote><blockquote><p>You should also absolutely disable weak ciphers regardless of the TLS version do you use, like those with <code>DSS</code>, <code>DSA</code>, <code>DES/3DES</code>, <code>RC4</code>, <code>MD5</code>, <code>SHA1</code>, <code>null</code>, anon in the name.</p></blockquote><blockquote><p>We have a nice online tool for testing compatibility cipher suites with user agents: <a href="https://cryptcheck.fr/suite/">CryptCheck</a>. I think it will be very helpful for you.</p></blockquote><p><strong>My recommendation:</strong></p><blockquote><p>Use only <a href="#keep-only-tls1.2-tls13">TLSv1.3 and TLSv1.2</a> with below cipher suites:</p></blockquote><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_ciphers</span> <span class="token string">"TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Example-9"><a href="#Example-9" class="headerlink" title="Example"></a>Example</h4><p>Cipher suites for TLS 1.3:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_ciphers</span> <span class="token string">"TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Cipher suites for TLS 1.2:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_ciphers</span> <span class="token string">"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>100%</b></p><p>Cipher suites for TLS 1.3:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_ciphers</span> <span class="token string">"TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Cipher suites for TLS 1.2:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## 1)</span><span class="token keyword">ssl_ciphers</span> <span class="token string">"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">## 2)</span><span class="token keyword">ssl_ciphers</span> <span class="token string">"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">## 3)</span><span class="token keyword">ssl_ciphers</span> <span class="token string">"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">## 4)</span><span class="token keyword">ssl_ciphers</span> <span class="token string">"EECDH+CHACHA20:EDH+AESGCM:AES256+EECDH:AES256+EDH"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Cipher suites for TLS 1.1 + 1.2:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## 1)</span><span class="token keyword">ssl_ciphers</span> <span class="token string">"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">## 2)</span><span class="token keyword">ssl_ciphers</span> <span class="token string">"ECDHE-ECDSA-CHACHA20-POLY1305:ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:!AES256-GCM-SHA256:!AES256-GCM-SHA128:!aNULL:!MD5"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>90%</b></p><p>This will also give a baseline for comparison with <a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/">Mozilla SSL Configuration Generator</a>:</p><ul><li>Modern profile with OpenSSL 1.1.0b (TLSv1.2)</li></ul><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_ciphers</span> <span class="token string">'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>Intermediate profile with OpenSSL 1.1.0b (TLSv1, TLSv1.1 and TLSv1.2)</li></ul><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_ciphers</span> <span class="token string">'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-11"><a href="#External-resources-11" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://tools.ietf.org/html/rfc7525">RFC 7525 - TLS Recommendations</a></li><li><a href="https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-4">TLS Cipher Suites</a></li><li><a href="https://technology.amis.nl/2017/07/04/ssltls-choose-cipher-suite/">SSL/TLS: How to choose your cipher suite</a></li><li><a href="https://sparanoid.com/note/http2-and-ecdsa-cipher-suites/">HTTP/2 and ECDSA Cipher Suites</a></li><li><a href="https://www.securityevaluators.com/ssl-tls-protocol-versions-cipher-suites-use/">Which SSL/TLS Protocol Versions and Cipher Suites Should I Use?</a></li><li><a href="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/TLS_Cipher_String_Cheat_Sheet.md">Recommendations for a cipher string by OWASP</a></li><li><a href="https://www.acunetix.com/blog/articles/tls-ssl-cipher-hardening/">Recommendations for TLS/SSL Cipher Hardening by Acunetix</a></li><li><a href="https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility">Mozilla’s Modern compatibility suite</a></li><li><a href="https://tls.mbed.org/kb/cryptography/ephemeral-diffie-hellman">Why use Ephemeral Diffie-Hellman</a></li><li><a href="https://blogs.technet.microsoft.com/askpfeplat/2017/12/26/cipher-suite-breakdown/">Cipher Suite Breakdown</a></li><li><a href="https://blog.qualys.com/technology/2019/04/22/zombie-poodle-and-goldendoodle-vulnerabilities">Zombie POODLE and GOLDENDOODLE Vulnerabilities</a></li><li><a href="https://testssl.sh/openssl-iana.mapping.html">OpenSSL IANA Mapping</a></li><li><a href="https://lightshipsec.com/goodbye-tls_rsa/">Goodbye TLS_RSA</a></li></ul><h3 id="beginner-Use-more-secure-ECDH-Curve"><a href="#beginner-Use-more-secure-ECDH-Curve" class="headerlink" title=":beginner: Use more secure ECDH Curve"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Use more secure ECDH Curve</h3><h4 id="Rationale-12"><a href="#Rationale-12" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>In my opinion your main source of knowledge should be <a href="https://safecurves.cr.yp.to/">The SafeCurves web site</a>. This site reports security assessments of various specific curves.</p></blockquote><blockquote><p>For a SSL server certificate, an “elliptic curve” certificate will be used only with digital signatures (<code>ECDSA</code> algorithm). Nginx provides directive to specifies a curve for <code>ECDHE</code> ciphers.</p></blockquote><blockquote><p><code>x25519</code> is a more secure (also with SafeCurves requirements) but slightly less compatible option. I think to maximise interoperability with existing browsers and servers, stick to <code>P-256 prime256v1</code> and <code>P-384 secp384r1</code> curves. Of course there’s tons of different opinions about <code>P-256</code> and <code>P-384</code> curves.</p></blockquote><blockquote><p>NSA Suite B says that NSA uses curves <code>P-256</code> and <code>P-384</code> (in OpenSSL, they are designated as, respectively, <code>prime256v1</code> and <code>secp384r1</code>). There is nothing wrong with <code>P-521</code>, except that it is, in practice, useless. Arguably, <code>P-384</code> is also useless, because the more efficient <code>P-256</code> curve already provides security that cannot be broken through accumulation of computing power.</p></blockquote><blockquote><p>Bernstein and Lange believe that the NIST curves are not optimal and there are better (more secure) curves that work just as fast, e.g. <code>x25519</code>.</p></blockquote><blockquote><p>Keep an eye also on this:</p><p><em>Secure implementations of the standard curves are theoretically possible but very hard.</em></p><p>The SafeCurves say:</p><ul><li><code>NIST P-224</code>, <code>NIST P-256</code> and <code>NIST P-384</code> are UNSAFE</li></ul><p>From the curves described here only <code>x25519</code> is a curve meets all SafeCurves requirements.</p></blockquote><blockquote><p>I think you can use <code>P-256</code> to minimise trouble. If you feel that your manhood is threatened by using a 256-bit curve where a 384-bit curve is available, then use <code>P-384</code>: it will increases your computational and network costs.</p></blockquote><blockquote><p>If you use TLS 1.3 you should enable <code>prime256v1</code> signature algorithm. Without this SSL Lab reports <code>TLS_AES_128_GCM_SHA256 (0x1301)</code> signature as weak.</p></blockquote><blockquote><p>If you do not set <code>ssl_ecdh_curve</code>, then Nginx will use its default settings, e.g. Chrome will prefer <code>x25519</code>, but it is <strong>not recommended</strong> because you can not control default settings (seems to be <code>P-256</code>) from the Nginx.</p></blockquote><blockquote><p>Explicitly set <code>ssl_ecdh_curve X25519:prime256v1:secp521r1:secp384r1;</code> <strong>decreases the Key Exchange SSL Labs rating</strong>.</p></blockquote><blockquote><p>Definitely do not use the <code>secp112r1</code>, <code>secp112r2</code>, <code>secp128r1</code>, <code>secp128r2</code>, <code>secp160k1</code>, <code>secp160r1</code>, <code>secp160r2</code>, <code>secp192k1</code> curves. They have a too small size for security application according to NIST recommendation.</p></blockquote><p><strong>My recommendation:</strong></p><blockquote><p>Use only <a href="#keep-only-tls1.2-tls13">TLSv1.3 and TLSv1.2</a> and <a href="#use-only-strong-ciphers">only strong ciphers</a> with above curves:</p></blockquote><pre class="line-numbers language-nginx"><code class="language-nginx">ssl_ecdh_curve X25519<span class="token punctuation">:</span>secp521r1<span class="token punctuation">:</span>secp384r1<span class="token punctuation">:</span>prime256v1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Example-10"><a href="#Example-10" class="headerlink" title="Example"></a>Example</h4><p>Curves for TLS 1.2:</p><pre class="line-numbers language-nginx"><code class="language-nginx">ssl_ecdh_curve secp521r1<span class="token punctuation">:</span>secp384r1<span class="token punctuation">:</span>prime256v1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>100%</b></p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Alternative (this one doesn’t affect compatibility, by the way; it’s just a question of the preferred order).</span><span class="token comment" spellcheck="true">## This setup downgrade Key Exchange score but is recommended for TLS 1.2 + 1.3:</span>ssl_ecdh_curve X25519<span class="token punctuation">:</span>secp521r1<span class="token punctuation">:</span>secp384r1<span class="token punctuation">:</span>prime256v1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-12"><a href="#External-resources-12" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://tools.ietf.org/html/rfc7748">Elliptic Curves for Security</a></li><li><a href="http://www.secg.org/">Standards for Efficient Cryptography Group</a></li><li><a href="https://safecurves.cr.yp.to/">SafeCurves: choosing safe curves for elliptic-curve cryptography</a></li><li><a href="https://eprint.iacr.org/2013/647">A note on high-security general-purpose elliptic curves</a></li><li><a href="https://blog.cr.yp.to/20140323-ecdsa.html">P-521 is pretty nice prime</a></li><li><a href="https://certsimple.com/blog/safe-curves-and-openssl">Safe ECC curves for HTTPS are coming sooner than you think</a></li><li><a href="https://www.keylength.com/">Cryptographic Key Length Recommendations</a></li><li><a href="https://www.owasp.org/index.php/Testing_for_Weak_SSL/TLS_Ciphers,_Insufficient_Transport_Layer_Protection_(OTG-CRYPST-001)">Testing for Weak SSL/TLS Ciphers, Insufficient Transport Layer Protection (OTG-CRYPST-001)</a></li><li><a href="https://tls.mbed.org/kb/cryptography/elliptic-curve-performance-nist-vs-brainpool">Elliptic Curve performance: NIST vs Brainpool</a></li><li><a href="https://security.stackexchange.com/questions/78621/which-elliptic-curve-should-i-use/91562">Which elliptic curve should I use?</a></li><li><a href="http://www.lapsedordinary.net/files/ECC_BSidesLDN_2015.pdf">Elliptic Curve Cryptography for those who are afraid of maths</a></li></ul><h3 id="beginner-Use-strong-Key-Exchange-with-Perfect-Forward-Secrecy"><a href="#beginner-Use-strong-Key-Exchange-with-Perfect-Forward-Secrecy" class="headerlink" title=":beginner: Use strong Key Exchange with Perfect Forward Secrecy"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Use strong Key Exchange with Perfect Forward Secrecy</h3><h4 id="Rationale-13"><a href="#Rationale-13" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>To use a signature based authentication you need some kind of DH exchange (fixed or ephemeral/temporary), to exchange the session key. If you use it, Nginx will use the default Ephemeral Diffie-Hellman (<code>DHE</code>) paramaters to define how performs the Diffie-Hellman (DH) key-exchange. This uses a weak key (by default: <code>1024 bit</code>) that gets lower scores.</p></blockquote><blockquote><p>You should always use the Elliptic Curve Diffie Hellman Ephemeral (<code>ECDHE</code>). Due to increasing concern about pervasive surveillance, key exchanges that provide Forward Secrecy are recommended, see for example <a href="https://tools.ietf.org/html/rfc7525#section-6.3">RFC 7525</a>.</p></blockquote><blockquote><p>For greater compatibility but still for security in key exchange, you should prefer the latter E (ephemeral) over the former E (EC). There is recommended configuration: <code>ECDHE</code> &gt; <code>DHE</code> (with min. <code>2048 bit</code> size) &gt; <code>ECDH</code>. With this if the initial handshake fails, another handshake will be initiated using <code>DHE</code>.</p></blockquote><blockquote><p><code>DHE</code> is slower than <code>ECDHE</code>. If you are concerned about performance, prioritize <code>ECDHE-ECDSA</code> over <code>DHE</code>. OWASP estimates that the TLS handshake with <code>DHE</code> hinders the CPU by a factor of 2.4 compared to <code>ECDHE</code>.</p></blockquote><blockquote><p>Diffie-Hellman requires some set-up parameters to begin with. Parameters from <code>ssl_dhparam</code> (which are generated with <code>openssl dhparam ...</code>) define how OpenSSL performs the Diffie-Hellman (DH) key-exchange. They include a field prime <code>p</code> and a generator <code>g</code>. The purpose of the availability to customize these parameter is to allow everyone to use own parameters for this. This can be used to prevent being affected from the Logjam attack.</p></blockquote><blockquote><p>Modern clients prefer <code>ECDHE</code> instead other variants and if your Nginx accepts this preference then the handshake will not use the DH param at all since it will not do a <code>DHE</code> key exchange but an <code>ECDHE</code> key exchange. Thus, if no plain <code>DH/DHE</code> ciphers are configured at your server but only Eliptic curve DH (e.g. <code>ECDHE</code>) then you don’t need to set your own <code>ssl_dhparam</code> directive. Enabling <code>DHE</code> requires us to take care of our DH primes (a.k.a. <code>dhparams</code>) and to trust in <code>DHE</code>.</p></blockquote><blockquote><p>Elliptic curve Diffie-Hellman is a modified Diffie-Hellman exchange which uses Elliptic curve cryptography instead of the traditional RSA-style large primes. So while I’m not sure what parameters it may need (if any), I don’t think it needs the kind you’re generating (<code>ECDH</code> is based on curves, not primes, so I don’t think the traditional DH params will do you any good).</p></blockquote><blockquote><p>Cipher suites using <code>DHE</code> key exchange in OpenSSL require <code>tmp_DH</code> parameters, which the <code>ssl_dhparam</code> directive provides. The same is true for <code>DH_anon</code> key exchange, but in practice nobody uses those. The OpenSSL wiki page for Diffie Hellman Parameters it says: <em>To use perfect forward secrecy cipher suites, you must set up Diffie-Hellman parameters (on the server side).</em> Look also at <a href="https://www.openssl.org/docs/man1.0.2/man3/SSL_CTX_set_tmp_dh.html">SSL_CTX_set_tmp_dh_callback</a>.</p></blockquote><blockquote><p>If you use <code>ECDH/ECDHE</code> key exchange please see <a href="#beginner-use-more-secure-ecdh-curve">Use more secure ECDH Curve</a> rule.</p></blockquote><blockquote><p>Default key size in OpenSSL is <code>1024 bits</code> - it’s vulnerable and breakable. For the best security configuration use your own DH Group (min. <code>2048 bit</code>) or use known safe ones pre-defined DH groups (it’s recommended) from the <a href="https://wiki.mozilla.org/Security/Server_Side_TLS#ffdhe4096">Mozilla</a>.</p></blockquote><blockquote><p>The <code>2048 bit</code> is generally expected to be safe and is already very far into the “cannot break it zone”. However years ago people expected 1024 bit to be safe so if you are after long term resistance You would go up to <code>4096 bit</code> (for both RSA keys and DH parameters). It’s also important if you want to get 100% on Key Exchange of the SSL Labs test.</p></blockquote><blockquote><p>You should remember that the <code>4096 bit</code> modulus will make DH computations slower and won’t actually improve security.</p></blockquote><p>There is <a href="https://security.stackexchange.com/questions/47204/dh-parameters-recommended-size/47207#47207">good explanation</a> about DH parameters recommended size:</p><blockquote><p><em>Current recommendations from various bodies (including NIST) call for a <code>2048-bit</code> modulus for DH. Known DH-breaking algorithms would have a cost so ludicrously high that they could not be run to completion with known Earth-based technology. See this site for pointers on that subject.</em></p></blockquote><blockquote><p><em>You don’t want to overdo the size because the computational usage cost rises relatively sharply with prime size (somewhere between quadratic and cubic, depending on some implementation details) but a <code>2048-bit</code> DH ought to be fine (a basic low-end PC can do several hundreds of <code>2048-bit</code> DH per second).</em></p></blockquote><p>Look also at this answer by <a href="https://www.hezmatt.org/~mpalmer/blog/">Matt Palmer</a>:</p><blockquote><p><em>Indeed, characterising <code>2048 bit</code> DH parameters as “weak as hell” is quite misleading. There are no known feasible cryptographic attacks against arbitrary strong 2048 bit DH groups. To protect against future disclosure of a session key due to breaking DH, sure, you want your DH parameters to be as long as is practical, but since <code>1024 bit</code> DH is only just getting feasible, <code>2048 bits</code> should be OK for most purposes for a while yet.</em></p></blockquote><p><strong>My recommendation:</strong></p><blockquote><p>If you use only TLS 1.3 - <code>ssl_dhparam</code> is not required (not used). Also, if you use <code>ECDHE/ECDH</code> - <code>ssl_dhparam</code> is not required (not used). If you use <code>DHE/DH</code> - <code>ssl_dhparam</code> with DH parameters is required (min. <code>2048 bit</code>). By default no parameters are set, and therefore <code>DHE</code> ciphers will not be used.</p></blockquote><h4 id="Example-11"><a href="#Example-11" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## To generate a DH parameters:</span>openssl dhparam -out /etc/nginx/ssl/dhparam_4096.pem 4096<span class="token comment" spellcheck="true">## To produce "DSA-like" DH parameters:</span>openssl dhparam -dsaparam -out /etc/nginx/ssl/dhparam_4096.pem 4096<span class="token comment" spellcheck="true">## Nginx configuration only for DH/DHE:</span>ssl_dhparam /etc/nginx/ssl/dhparams_4096.pem<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>100%</b></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## To generate a DH parameters:</span>openssl dhparam -out /etc/nginx/ssl/dhparam_2048.pem 2048<span class="token comment" spellcheck="true">## To produce "DSA-like" DH parameters:</span>openssl dhparam -dsaparam -out /etc/nginx/ssl/dhparam_2048.pem 2048<span class="token comment" spellcheck="true">## Nginx configuration only for DH/DHE:</span>ssl_dhparam /etc/nginx/ssl/dhparam_2048.pem<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>90%</b></p><h4 id="External-resources-13"><a href="#External-resources-13" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://weakdh.org/">Weak Diffie-Hellman and the Logjam Attack</a></li><li><a href="https://weakdh.org/sysadmin.html">Guide to Deploying Diffie-Hellman for TLS</a></li><li><a href="https://wiki.mozilla.org/Security/Server_Side_TLS#ffdhe4096">Pre-defined DHE groups</a></li><li><a href="https://security.stackexchange.com/questions/95178/diffie-hellman-parameters-still-calculating-after-24-hours/95184#95184">Instructs OpenSSL to produce “DSA-like” DH parameters</a></li><li><a href="https://security.stackexchange.com/questions/44251/openssl-generate-different-types-of-self-signed-certificate">OpenSSL generate different types of self signed certificate</a></li><li><a href="https://2ton.com.au/dhtool/">Public Diffie-Hellman Parameter Service/Tool</a></li><li><a href="http://vincent.bernat.im/en/blog/2011-ssl-perfect-forward-secrecy.html">Vincent Bernat’s SSL/TLS &amp; Perfect Forward Secrecy</a></li><li><a href="https://securitypitfalls.wordpress.com/2014/10/06/rsa-and-ecdsa-performance/">RSA and ECDSA performance</a></li><li><a href="https://technology.amis.nl/2017/07/04/ssltls-choose-cipher-suite/">SSL/TLS: How to choose your cipher suite</a></li><li><a href="https://security.stackexchange.com/questions/41205/diffie-hellman-and-its-tls-ssl-usage">Diffie-Hellman and its TLS/SSL usage</a></li></ul><h3 id="beginner-Prevent-Replay-Attacks-on-Zero-Round-Trip-Time"><a href="#beginner-Prevent-Replay-Attacks-on-Zero-Round-Trip-Time" class="headerlink" title=":beginner: Prevent Replay Attacks on Zero Round-Trip Time"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Prevent Replay Attacks on Zero Round-Trip Time</h3><h4 id="Rationale-14"><a href="#Rationale-14" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>This rules is only important for TLS 1.3. By default enabling TLS 1.3 will not enable 0-RTT support. After all, you should be fully aware of all the potential exposure factors and related risks with the use of this option.</p></blockquote><blockquote><p>0-RTT Handshakes is part of the replacement of TLS Session Resumption and was inspired by the QUIC Protocol.</p></blockquote><blockquote><p>0-RTT creates a significant security risk. With 0-RTT, a threat actor can intercept an encrypted client message and resend it to the server, tricking the server into improperly extending trust to the threat actor and thus potentially granting the threat actor access to sensitive data.</p></blockquote><blockquote><p>On the other hand, including 0-RTT (Zero Round Trip Time Resumption) results in a significant increase in efficiency and connection times. TLS 1.3 has a faster handshake that completes in 1-RTT. Additionally, it has a particular session resumption mode where, under certain conditions, it is possible to send data to the server on the first flight (0-RTT).</p></blockquote><blockquote><p>For example, Cloudflare only supports 0-RTT for <a href="https://new.blog.cloudflare.com/introducing-0-rtt/">GET requests with no query parameters</a> in an attempt to limit the attack surface. Moreover, in order to improve identify connection resumption attempts, they relay this information to the origin by adding an extra header to 0-RTT requests. This header uniquely identifies the request, so if one gets repeated, the origin will know it’s a replay attack (the application needs to track values received from that and reject duplicates on non-idempotent endpoints).</p></blockquote><blockquote><p>To protect against such attacks at the application layer, the <code>$ssl_early_data</code> variable should be used. You’ll also need to ensure that the <code>Early-Data</code> header is passed to your application. <code>$ssl_early_data</code> returns 1 if TLS 1.3 early data is used and the handshake is not complete.</p></blockquote><blockquote><p>However, as part of the upgrade, you should disable 0-RTT until you can audit your application for this class of vulnerability.</p></blockquote><blockquote><p>In order to send early-data, client and server <a href="https://tools.ietf.org/html/rfc8446#section-2.3">must support PSK exchange mode</a> (session cookies).</p></blockquote><blockquote><p>In addition, I would like to recommend <a href="https://news.ycombinator.com/item?id=16667036">this</a> great discussion about TLS 1.3 and 0-RTT.</p></blockquote><p>If you are unsure to enable 0-RTT, look what Cloudflare say about it:</p><blockquote><p><em>Generally speaking, 0-RTT is safe for most web sites and applications. If your web application does strange things and you’re concerned about its replay safety, consider not using 0-RTT until you can be certain that there are no negative effects. […] TLS 1.3 is a big step forward for web performance and security. By combining TLS 1.3 with 0-RTT, the performance gains are even more dramatic.</em></p></blockquote><h4 id="Example-12"><a href="#Example-12" class="headerlink" title="Example"></a>Example</h4><p>Test 0-RTT with OpenSSL:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 1)</span>_host<span class="token operator">=</span><span class="token string">"example.com"</span><span class="token function">cat</span> <span class="token operator">></span> req.in <span class="token operator">&lt;&lt;</span> <span class="token string">__EOF__HEAD / HTTP/1.1Host: <span class="token variable">$_host</span>Connection: close__EOF__</span><span class="token comment" spellcheck="true">## or:</span><span class="token comment" spellcheck="true">## echo -e "GET / HTTP/1.1\r\nHost: $_host\r\nConnection: close\r\n\r\n" > req.in</span>openssl s_client -connect <span class="token variable">${_host}</span>:443 -tls1_3 -sess_out session.pem -ign_eof <span class="token operator">&lt;</span> req.inopenssl s_client -connect <span class="token variable">${_host}</span>:443 -tls1_3 -sess_in session.pem -early_data req.in<span class="token comment" spellcheck="true">## 2)</span>python -m sslyze --early_data <span class="token string">"<span class="token variable">$_host</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Enable 0-RTT with <code>$ssl_early_data</code> variable:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">ssl_protocols</span>   TLSv1<span class="token number">.2</span> TLSv1<span class="token number">.3</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## To enable 0-RTT (TLS 1.3):</span>  ssl_early_data  on<span class="token punctuation">;</span>  <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>    <span class="token keyword">proxy_pass</span>       <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>backend_x20<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## It protect against such attacks at the application layer:</span>    <span class="token keyword">proxy_set_header</span> Early<span class="token operator">-</span>Data <span class="token variable">$ssl_early_data</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-14"><a href="#External-resources-14" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://github.com/tlswg/tls13-spec/issues/1001">Security Review of TLS1.3 0-RTT</a></li><li><a href="https://new.blog.cloudflare.com/introducing-0-rtt/">Introducing Zero Round Trip Time Resumption (0-RTT)</a></li><li><a href="https://blog.trailofbits.com/2019/03/25/what-application-developers-need-to-know-about-tls-early-data-0rtt/">What Application Developers Need To Know About TLS Early Data (0RTT)</a></li><li><a href="https://eprint.iacr.org/2017/082.pdf">Replay Attacks on Zero Round-Trip Time: The Case of the TLS 1.3 Handshake Candidates</a></li><li><a href="https://tools.ietf.org/html/rfc8446#section-8">0-RTT and Anti-Replay</a></li><li><a href="https://tools.ietf.org/id/draft-thomson-http-replay-00.html_">Using Early Data in HTTP (2017)</a></li><li><a href="https://tools.ietf.org/html/draft-ietf-httpbis-replay-04">Using Early Data in HTTP (2018)</a></li><li><a href="https://ldapwiki.com/wiki/0-RTT%20Handshakes">0-RTT Handshakes</a></li></ul><h3 id="beginner-Defend-against-the-BEAST-attack"><a href="#beginner-Defend-against-the-BEAST-attack" class="headerlink" title=":beginner: Defend against the BEAST attack"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Defend against the BEAST attack</h3><h4 id="Rationale-15"><a href="#Rationale-15" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Generally the BEAST attack relies on a weakness in the way <code>CBC</code> mode is used in SSL/TLS.</p></blockquote><blockquote><p>More specifically, to successfully perform the BEAST attack, there are some conditions which needs to be met:</p><ul><li>vulnerable version of SSL must be used using a block cipher (<code>CBC</code> in particular)</li><li>JavaScript or a Java applet injection - should be in the same origin of the web site</li><li>data sniffing of the network connection must be possible</li></ul></blockquote><blockquote><p>To prevent possible use BEAST attacks you should enable server-side protection, which causes the server ciphers should be preferred over the client ciphers, and completely excluded TLS 1.0 from your protocol stack.</p></blockquote><h4 id="Example-13"><a href="#Example-13" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">ssl_prefer_server_ciphers</span> on<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-15"><a href="#External-resources-15" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://commandlinefanatic.com/cgi-bin/showarticle.cgi?article=art027">An Illustrated Guide to the BEAST Attack</a></li><li><a href="https://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html">Is BEAST still a threat?</a></li><li><a href="https://blogs.cisco.com/security/beat-the-beast-with-tls">Beat the BEAST with TLS 1.1/1.2 and More</a></li><li><a href="#beginner-use-only-strong-ciphers">Use only strong ciphers (from this handbook)</a></li></ul><h3 id="beginner-Mitigation-of-CRIME-BREACH-attacks"><a href="#beginner-Mitigation-of-CRIME-BREACH-attacks" class="headerlink" title=":beginner: Mitigation of CRIME/BREACH attacks"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Mitigation of CRIME/BREACH attacks</h3><h4 id="Rationale-16"><a href="#Rationale-16" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Disable HTTP compression or compress only zero sensitive content.</p></blockquote><blockquote><p>You should probably never use TLS compression. Some user agents (at least Chrome) will disable it anyways. Disabling SSL/TLS compression stops the attack very effectively. A deployment of HTTP/2 over TLS 1.2 must disable TLS compression (please see <a href="https://tools.ietf.org/html/rfc7540#section-9.2">RFC 7540: 9.2. Use of TLS Features</a>).</p></blockquote><blockquote><p>CRIME exploits SSL/TLS compression which is disabled since nginx 1.3.2. BREACH exploits HTTP compression</p></blockquote><blockquote><p>Some attacks are possible (e.g. the real BREACH attack is a complicated) because of gzip (HTTP compression not TLS compression) being enabled on SSL requests. In most cases, the best action is to simply disable gzip for SSL.</p></blockquote><blockquote><p>Compression is not the only requirement for the attack to be done so using it does not mean that the attack will succeed. Generally you should consider whether having an accidental performance drop on HTTPS sites is better than HTTPS sites being accidentally vulnerable.</p></blockquote><blockquote><p>You shouldn’t use HTTP compression on private responses when using TLS.</p></blockquote><blockquote><p>I would gonna to prioritise security over performance but compression can be (I think) okay to HTTP compress publicly available static content like css or js and HTML content with zero sensitive info (like an “About Us” page).</p></blockquote><blockquote><p>Remember: by default, Nginx doesn’t compress image files using its per-request gzip module.</p></blockquote><blockquote><p>Gzip static module is better, for 2 reasons:</p><ul><li>you don’t have to gzip for each request</li><li>you can use a higher gzip level</li></ul></blockquote><blockquote><p>You should put the <code>gzip_static on;</code> inside the blocks that configure static files, but if you’re only running one site, it’s safe to just put it in the http block.</p></blockquote><h4 id="Example-14"><a href="#Example-14" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## Disable dynamic HTTP compression:</span><span class="token keyword">gzip</span> off<span class="token punctuation">;</span><span class="token comment" spellcheck="true">## Enable dynamic HTTP compression for specific location context:</span><span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>  <span class="token keyword">gzip</span> on<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">## Enable static gzip compression:</span><span class="token keyword">location</span> <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span>assets<span class="token operator">/</span> <span class="token punctuation">{</span>  <span class="token keyword">gzip_static</span> on<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-16"><a href="#External-resources-16" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://security.stackexchange.com/questions/20406/is-http-compression-safe">Is HTTP compression safe?</a></li><li><a href="https://www.pcworld.com/article/3051675/http-compression-continues-to-put-encrypted-communications-at-risk.html">HTTP compression continues to put encrypted communications at risk</a></li><li><a href="http://niiconsulting.com/checkmate/2013/12/ssltls-attacks-part-2-crime-attack/">SSL/TLS attacks: Part 2 – CRIME Attack</a></li><li><a href="https://blog.qualys.com/ssllabs/2013/08/07/defending-against-the-breach-attack">Defending against the BREACH Attack</a></li><li><a href="https://security.stackexchange.com/questions/172581/to-avoid-breach-can-we-use-gzip-on-non-token-responses">To avoid BREACH, can we use gzip on non-token responses?</a></li><li><a href="https://blog.ircmaxell.com/2013/08/dont-worry-about-breach.html">Don’t Worry About BREACH</a></li><li><a href="http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html">Module ngx_http_gzip_static_module</a></li><li><a href="https://theartofmachinery.com/2016/06/06/nginx_gzip_static.html">Offline Compression with Nginx</a></li></ul><h3 id="beginner-HTTP-Strict-Transport-Security"><a href="#beginner-HTTP-Strict-Transport-Security" class="headerlink" title=":beginner: HTTP Strict Transport Security"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> HTTP Strict Transport Security</h3><h4 id="Rationale-17"><a href="#Rationale-17" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Generally HSTS is a way for websites to tell browsers that the connection should only ever be encrypted. This prevents MITM attacks, downgrade attacks, sending plain text cookies and session ids.</p></blockquote><blockquote><p>The header indicates for how long a browser should unconditionally refuse to take part in unsecured HTTP connection for a specific domain.</p></blockquote><blockquote><p>When a browser knows that a domain has enabled HSTS, it does two things:</p><ul><li>always uses an <code>https://</code> connection, even when clicking on an <code>http://</code> link or after typing a domain into the location bar without specifying a protocol</li><li>removes the ability for users to click through warnings about invalid certificates</li></ul></blockquote><blockquote><p>I recommend to set the <code>max-age</code> to a big value like <code>31536000</code> (12 months) or <code>63072000</code> (24 months).</p></blockquote><blockquote><p>There are a few simple best practices for HSTS (from <a href="https://blog.qualys.com/securitylabs/2016/03/28/the-importance-of-a-proper-http-strict-transport-security-implementation-on-your-web-server"> The Importance of a Proper HTTP Strict Transport Security Implementation on Your Web Server</a>):</p><ul><li><p>The strongest protection is to ensure that all requested resources use only TLS with a well-formed HSTS header. Qualys recommends providing an HSTS header on all HTTPS resources in the target domain</p></li><li><p>It is advisable to assign the max-age directive’s value to be greater than <code>10368000</code> seconds (120 days) and ideally to <code>31536000</code> (one year). Websites should aim to ramp up the max-age value to ensure heightened security for a long duration for the current domain and/or subdomains</p></li><li><p><a href="https://tools.ietf.org/html/rfc6797">RFC 6797</a>, section 14.4 advocates that a web application must aim to add the <code>includeSubDomain</code> directive in the policy definition whenever possible. The directive’s presence ensures the HSTS policy is applied to the domain of the issuing host and all of its subdomains, e.g. <code>example.com</code> and <code>www.example.com</code></p></li><li><p>The application should never send an HSTS header over a plaintext HTTP header, as doing so makes the connection vulnerable to SSL stripping attacks</p></li><li><p>It is not recommended to provide an HSTS policy via the http-equiv attribute of a meta tag. According to HSTS RFC 6797, user agents don’t heed <code>http-equiv="Strict-Transport-Security"</code> attribute on <code>&lt;meta&gt;</code> elements on the received content`</p></li></ul></blockquote><blockquote><p>To meet the HSTS preload list standard a root domain needs to return a <code>strict-transport-security</code> header that includes both the <code>includeSubDomains</code> and <code>preload</code> directives and has a minimum <code>max-age</code> of one year. Your site must also serve a valid SSL certificate on the root domain and all subdomains, as well as redirect all HTTP requests to HTTPS on the same host.</p></blockquote><blockquote><p>You had better be pretty sure that your website is indeed all HTTPS before you turn this on because HSTS adds complexity to your rollback strategy. Google recommend enabling HSTS this way:</p><ol><li>Roll out your HTTPS pages without HSTS first</li><li>Start sending HSTS headers with a short <code>max-age</code>. Monitor your traffic both from users and other clients, and also dependents’ performance, such as ads</li><li>Slowly increase the HSTS <code>max-age</code></li><li>If HSTS doesn’t affect your users and search engines negatively, you can, if you wish, ask your site to be added to the HSTS preload list used by most major browsers</li></ol></blockquote><h4 id="Example-15"><a href="#Example-15" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">add_header</span> Strict<span class="token operator">-</span>Transport<span class="token operator">-</span>Security <span class="token string">"max-age=63072000; includeSubdomains"</span> always<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>&nbsp;&nbsp;<span class="github-emoji"><span>➡</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> ssllabs score: <b>A+</b></p><h4 id="External-resources-17"><a href="#External-resources-17" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security">Strict-Transport-Security</a></li><li><a href="https://zinoui.com/blog/security-http-headers#strict-transport-security">Security HTTP Headers - Strict-Transport-Security</a></li><li><a href="https://https.cio.gov/hsts/">HTTP Strict Transport Security</a></li><li><a href="https://www.owasp.org/index.php/HTTP_Strict_Transport_Security_Cheat_Sheet">HTTP Strict Transport Security Cheat Sheet</a></li><li><a href="https://scotthelme.co.uk/hsts-cheat-sheet/">HSTS Cheat Sheet</a></li><li><a href="https://textslashplain.com/2018/04/09/hsts-preload-and-subdomains/">HSTS Preload and Subdomains</a></li><li><a href="https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/">HTTP Strict Transport Security (HSTS) and Nginx</a></li><li><a href="https://www.reddit.com/r/bigseo/comments/8zw45d/is_hsts_as_a_proper_substitute_for_httptohttps/">Is HSTS as a proper substitute for HTTP-to-HTTPS redirects?</a></li><li><a href="https://www.danielmorell.com/blog/how-to-configure-hsts-on-www-and-other-subdomains">How to configure HSTS on www and other subdomains</a></li><li><a href="https://serverfault.com/questions/927336/hsts-is-includesubdomains-on-main-domain-sufficient">HSTS: Is includeSubDomains on main domain sufficient?</a></li><li><a href="https://www.danielmorell.com/blog/how-to-configure-hsts-on-www-and-other-subdomains">The HSTS preload list eligibility</a></li><li><a href="https://hstspreload.org/">Check HSTS preload status and eligibility</a></li><li><a href="https://hstspreload.org/#deployment-recommendations">HSTS Deployment Recommendations</a></li><li><a href="https://serverfault.com/questions/927145/how-does-hsts-handle-mixed-content">How does HSTS handle mixed content?</a></li></ul><h3 id="beginner-Reduce-XSS-risks-Content-Security-Policy"><a href="#beginner-Reduce-XSS-risks-Content-Security-Policy" class="headerlink" title=":beginner: Reduce XSS risks (Content-Security-Policy)"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Reduce XSS risks (Content-Security-Policy)</h3><h4 id="Rationale-18"><a href="#Rationale-18" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>CSP reduce the risk and impact of XSS attacks in modern browsers.</p></blockquote><blockquote><p>Whitelisting known-good resource origins, refusing to execute potentially dangerous inline scripts, and banning the use of eval are all effective mechanisms for mitigating cross-site scripting attacks.</p></blockquote><blockquote><p>The inclusion of CSP policies significantly impedes successful XSS attacks, UI Redressing (Clickjacking), malicious use of frames or CSS injections.</p></blockquote><blockquote><p>CSP is a good defence-in-depth measure to make exploitation of an accidental lapse in that less likely.</p></blockquote><blockquote><p>The default policy that starts building a header is: block everything. By modifying the CSP value, the programmer loosens restrictions for specific groups of resources (e.g. separately for scripts, images, etc.).</p></blockquote><blockquote><p>Before enable this header you should discuss with developers about it. They probably going to have to update your application to remove any inline script and style, and make some additional modifications there.</p></blockquote><blockquote><p>Strict policies will significantly increase security, and higher code quality will reduce the overall number of errors. CSP can never replace secure code - new restrictions help reduce the effects of attacks (such as XSS), but they are not mechanisms to prevent them!</p></blockquote><blockquote><p>You should always validate CSP before implement: <a href="https://csp-evaluator.withgoogle.com/">CSP Evaluator</a> and <a href="https://cspvalidator.org/">Content Security Policy (CSP) Validator</a>.</p></blockquote><blockquote><p>For generate a policy: <a href="https://report-uri.com/home/generate">https://report-uri.com/home/generate</a>. Remember, however, that these types of tools may become outdated or have errors.</p></blockquote><h4 id="Example-16"><a href="#Example-16" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## This policy allows images, scripts, AJAX, and CSS from the same origin, and does not allow any other resources to load:</span><span class="token keyword">add_header</span> Content<span class="token operator">-</span>Security<span class="token operator">-</span>Policy <span class="token string">"default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';"</span> always<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="External-resources-18"><a href="#External-resources-18" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://content-security-policy.com/">Content Security Policy (CSP) Quick Reference Guide</a></li><li><a href="https://www.owasp.org/index.php/Content_Security_Policy_Cheat_Sheet">Content Security Policy Cheat Sheet – OWASP</a></li><li><a href="https://www.owasp.org/index.php/Content_Security_Policy">Content Security Policy – OWASP</a></li><li><a href="https://scotthelme.co.uk/content-security-policy-an-introduction/">Content Security Policy - An Introduction - Scott Helme</a></li><li><a href="https://scotthelme.co.uk/csp-cheat-sheet/">CSP Cheat Sheet - Scott Helme</a></li><li><a href="https://zinoui.com/blog/security-http-headers#content-security-policy">Security HTTP Headers - Content-Security-Policy</a></li><li><a href="https://csp-evaluator.withgoogle.com/">CSP Evaluator</a></li><li><a href="https://cspvalidator.org/">Content Security Policy (CSP) Validator</a></li><li><a href="https://caniuse.com/#search=CSP">Can I Use CSP</a></li><li><a href="https://ai.google/research/pubs/pub45542">CSP Is Dead, Long Live CSP!</a></li></ul><h3 id="beginner-Control-the-behaviour-of-the-Referer-header-Referrer-Policy"><a href="#beginner-Control-the-behaviour-of-the-Referer-header-Referrer-Policy" class="headerlink" title=":beginner: Control the behaviour of the Referer header (Referrer-Policy)"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Control the behaviour of the Referer header (Referrer-Policy)</h3><h4 id="Rationale-19"><a href="#Rationale-19" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Determine what information is sent along with the requests.</p></blockquote><h4 id="Example-17"><a href="#Example-17" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">add_header</span> Referrer<span class="token operator">-</span>Policy <span class="token string">"no-referrer"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-19"><a href="#External-resources-19" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://scotthelme.co.uk/a-new-security-header-referrer-policy/">A new security header: Referrer Policy</a></li><li><a href="https://zinoui.com/blog/security-http-headers#referrer-policy">Security HTTP Headers - Referrer-Policy</a></li></ul><h3 id="beginner-Provide-clickjacking-protection-X-Frame-Options"><a href="#beginner-Provide-clickjacking-protection-X-Frame-Options" class="headerlink" title=":beginner: Provide clickjacking protection (X-Frame-Options)"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Provide clickjacking protection (X-Frame-Options)</h3><h4 id="Rationale-20"><a href="#Rationale-20" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Helps to protect your visitors against clickjacking attacks. It is recommended that you use the <code>x-frame-options</code> header on pages which should not be allowed to render a page in a frame.</p></blockquote><h4 id="Example-18"><a href="#Example-18" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">add_header</span> X<span class="token operator">-</span>Frame<span class="token operator">-</span>Options <span class="token string">"SAMEORIGIN"</span> always<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-20"><a href="#External-resources-20" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://tools.ietf.org/html/rfc7034">HTTP Header Field X-Frame-Options</a></li><li><a href="https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet">Clickjacking Defense Cheat Sheet</a></li><li><a href="https://zinoui.com/blog/security-http-headers#x-frame-options">Security HTTP Headers - X-Frame-Options</a></li><li><a href="https://scotthelme.co.uk/hardening-your-http-response-headers/#x-frame-options">X-Frame-Options - Scott Helme</a></li></ul><h3 id="beginner-Prevent-some-categories-of-XSS-attacks-X-XSS-Protection"><a href="#beginner-Prevent-some-categories-of-XSS-attacks-X-XSS-Protection" class="headerlink" title=":beginner: Prevent some categories of XSS attacks (X-XSS-Protection)"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Prevent some categories of XSS attacks (X-XSS-Protection)</h3><h4 id="Rationale-21"><a href="#Rationale-21" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Enable the cross-site scripting (XSS) filter built into modern web browsers.</p></blockquote><h4 id="Example-19"><a href="#Example-19" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">add_header</span> X<span class="token operator">-</span>XSS<span class="token operator">-</span>Protection <span class="token string">"1; mode=block"</span> always<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-21"><a href="#External-resources-21" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet">XSS (Cross Site Scripting) Prevention Cheat Sheet</a></li><li><a href="https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet">DOM based XSS Prevention Cheat Sheet</a></li><li><a href="https://www.tunetheweb.com/security/http-security-headers/x-xss-protection/">X-XSS-Protection HTTP Header</a></li><li><a href="https://zinoui.com/blog/security-http-headers#x-xss-protection">Security HTTP Headers - X-XSS-Protection</a></li></ul><h3 id="beginner-Prevent-Sniff-Mimetype-middleware-X-Content-Type-Options"><a href="#beginner-Prevent-Sniff-Mimetype-middleware-X-Content-Type-Options" class="headerlink" title=":beginner: Prevent Sniff Mimetype middleware (X-Content-Type-Options)"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Prevent Sniff Mimetype middleware (X-Content-Type-Options)</h3><h4 id="Rationale-22"><a href="#Rationale-22" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>It prevents the browser from doing MIME-type sniffing (prevents “mime” based attacks).</p></blockquote><h4 id="Example-20"><a href="#Example-20" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">add_header</span> X<span class="token operator">-</span>Content<span class="token operator">-</span>Type<span class="token operator">-</span>Options <span class="token string">"nosniff"</span> always<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-22"><a href="#External-resources-22" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://www.keycdn.com/support/x-content-type-options">X-Content-Type-Options HTTP Header</a></li><li><a href="https://zinoui.com/blog/security-http-headers#x-content-type-options">Security HTTP Headers - X-Content-Type-Options</a></li><li><a href="https://scotthelme.co.uk/hardening-your-http-response-headers/#x-content-type-options">X-Content-Type-Options - Scott Helme</a></li></ul><h3 id="beginner-Deny-the-use-of-browser-features-Feature-Policy"><a href="#beginner-Deny-the-use-of-browser-features-Feature-Policy" class="headerlink" title=":beginner: Deny the use of browser features (Feature-Policy)"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Deny the use of browser features (Feature-Policy)</h3><h4 id="Rationale-23"><a href="#Rationale-23" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>This header protects your site from third parties using APIs that have security and privacy implications, and also from your own team adding outdated APIs or poorly optimised images.</p></blockquote><h4 id="Example-21"><a href="#Example-21" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">add_header</span> Feature<span class="token operator">-</span>Policy <span class="token string">"geolocation 'none'; midi 'none'; notifications 'none'; push 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; vibrate 'none'; fullscreen 'none'; payment 'none'; usb 'none';"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-23"><a href="#External-resources-23" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://docs.google.com/document/d/1k0Ua-ZWlM_PsFCFdLMa8kaVTo32PeNZ4G7FFHqpFx4E/edit">Feature Policy Explainer</a></li><li><a href="https://github.com/w3c/webappsec-feature-policy/blob/master/features.md">Policy Controlled Features</a></li><li><a href="https://zinoui.com/blog/security-http-headers#feature-policy">Security HTTP Headers - Feature-Policy</a></li></ul><h3 id="beginner-Reject-unsafe-HTTP-methods"><a href="#beginner-Reject-unsafe-HTTP-methods" class="headerlink" title=":beginner: Reject unsafe HTTP methods"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Reject unsafe HTTP methods</h3><h4 id="Rationale-24"><a href="#Rationale-24" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Set of methods support by a resource. An ordinary web server supports the <code>HEAD</code>, <code>GET</code> and <code>POST</code> methods to retrieve static and dynamic content. Other (e.g. <code>OPTIONS</code>, <code>TRACE</code>) methods should not be supported on public web servers, as they increase the attack surface.</p></blockquote><h4 id="Example-22"><a href="#Example-22" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">add_header</span> <span class="token keyword">Allow</span> <span class="token string">"GET, POST, HEAD"</span> always<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request_method</span> <span class="token operator">!</span><span class="token operator">~</span> <span class="token operator">^</span><span class="token punctuation">(</span>GET<span class="token operator">|</span>POST<span class="token operator">|</span>HEAD<span class="token punctuation">)</span>$<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token number">405</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-24"><a href="#External-resources-24" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://www.onwebsecurity.com/security/unsafe-http-methods.html">Vulnerability name: Unsafe HTTP methods</a></li></ul><h3 id="beginner-Prevent-caching-of-sensitive-data"><a href="#beginner-Prevent-caching-of-sensitive-data" class="headerlink" title=":beginner: Prevent caching of sensitive data"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Prevent caching of sensitive data</h3><h4 id="Rationale-25"><a href="#Rationale-25" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>This policy should be implemented by the application architect, however, I know from experience that this does not always happen.</p></blockquote><blockquote><p>Don’ to cache or persist sensitive data. As browsers have different default behaviour for caching HTTPS content, pages containing sensitive information should include a <code>Cache-Control</code> header to ensure that the contents are not cached.</p></blockquote><blockquote><p>One option is to add anticaching headers to relevant HTTP/1.1 and HTTP/2 responses, e.g. <code>Cache-Control: no-cache, no-store</code> and <code>Expires: 0</code>.</p></blockquote><blockquote><p>To cover various browser implementations the full set of headers to prevent content being cached should be:</p><p><code>Cache-Control: no-cache, no-store, private, must-revalidate, max-age=0, no-transform</code> &gt; <code>Pragma: no-cache</code> &gt; <code>Expires: 0</code></p></blockquote><h4 id="Example-23"><a href="#Example-23" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">/</span>api <span class="token punctuation">{</span>  <span class="token keyword">expires</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">add_header</span> Cache<span class="token operator">-</span>Control <span class="token string">"no-cache, no-store"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-25"><a href="#External-resources-25" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://tools.ietf.org/html/rfc2616">RFC 2616 - Hypertext Transfer Protocol (HTTP/1.1): Standards Track</a></li><li><a href="https://tools.ietf.org/html/rfc7234">RFC 7234 - Hypertext Transfer Protocol (HTTP/1.1): Caching</a></li><li><a href="https://www.keycdn.com/blog/http-cache-headers">HTTP Cache Headers - A Complete Guide</a></li><li><a href="https://jakearchibald.com/2016/caching-best-practices/">Caching best practices &amp; max-age gotchas</a></li><li><a href="https://devcenter.heroku.com/articles/increasing-application-performance-with-http-cache-headers">Increasing Application Performance with HTTP Cache Headers</a></li><li><a href="https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching">HTTP Caching</a></li></ul><h3 id="beginner-Control-Buffer-Overflow-attacks"><a href="#beginner-Control-Buffer-Overflow-attacks" class="headerlink" title=":beginner: Control Buffer Overflow attacks"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Control Buffer Overflow attacks</h3><h4 id="Rationale-26"><a href="#Rationale-26" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Buffer overflow attacks are made possible by writing data to a buffer and exceeding that buffers’ boundary and overwriting memory fragments of a process. To prevent this in Nginx we can set buffer size limitations for all clients.</p></blockquote><h4 id="Example-24"><a href="#Example-24" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">client_body_buffer_size</span> 100k<span class="token punctuation">;</span><span class="token keyword">client_header_buffer_size</span> 1k<span class="token punctuation">;</span><span class="token keyword">client_max_body_size</span> 100k<span class="token punctuation">;</span><span class="token keyword">large_client_header_buffers</span> <span class="token number">2</span> 1k<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-26"><a href="#External-resources-26" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://www.owasp.org/index.php/SCG_WS_nginx">SCG WS nginx</a></li></ul><h3 id="beginner-Mitigating-Slow-HTTP-DoS-attacks-Closing-Slow-Connections"><a href="#beginner-Mitigating-Slow-HTTP-DoS-attacks-Closing-Slow-Connections" class="headerlink" title=":beginner: Mitigating Slow HTTP DoS attacks (Closing Slow Connections)"></a><span class="github-emoji"><span>🔰</span><img src="https://cdn.jsdelivr.net/gh/pipbest/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f530.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Mitigating Slow HTTP DoS attacks (Closing Slow Connections)</h3><h4 id="Rationale-27"><a href="#Rationale-27" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Close connections that are writing data too infrequently, which can represent an attempt to keep connections open as long as possible.</p></blockquote><blockquote><p>You can close connections that are writing data too infrequently, which can represent an attempt to keep connections open as long as possible (thus reducing the server’s ability to accept new connections).</p></blockquote><h4 id="Example-25"><a href="#Example-25" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">client_body_timeout</span> 10s<span class="token punctuation">;</span><span class="token keyword">client_header_timeout</span> 10s<span class="token punctuation">;</span><span class="token keyword">keepalive_timeout</span> 5s 5s<span class="token punctuation">;</span><span class="token keyword">send_timeout</span> 10s<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-27"><a href="#External-resources-27" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://www.nginx.com/blog/mitigating-ddos-attacks-with-nginx-and-nginx-plus/">Mitigating DDoS Attacks with Nginx and Nginx Plus</a></li><li><a href="https://www.owasp.org/index.php/SCG_WS_nginx">SCG WS nginx</a></li><li><a href="https://blog.qualys.com/securitylabs/2011/11/02/how-to-protect-against-slow-http-attacks">How to Protect Against Slow HTTP Attacks</a></li><li><a href="https://ma.ttias.be/effectively-using-detecting-the-slowloris-http-dos-tool/">Effectively Using and Detecting The Slowloris HTTP DoS Tool</a></li></ul><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><h3 id="使用与后端协议兼容的-pass-指令"><a href="#使用与后端协议兼容的-pass-指令" class="headerlink" title="使用与后端协议兼容的 pass 指令"></a>使用与后端协议兼容的 pass 指令</h3><blockquote><p>All <code>proxy_*</code> directives are related to the backends that use the specific backend protocol.</p></blockquote><blockquote><p>You should use <code>proxy_pass</code> only for HTTP servers working on the backend layer (set also the <code>http://</code> protocol before referencing the HTTP backend) and other <code>*_pass</code> directives only for non-HTTP backend servers (like a uWSGI or FastCGI).</p></blockquote><blockquote><p>Directives such as <code>uwsgi_pass</code>, <code>fastcgi_pass</code>, or <code>scgi_pass</code> are designed specifically for non-HTTP apps and you should use them instead of the <code>proxy_pass</code> (non-HTTP talking).</p></blockquote><blockquote><p>For example: <code>uwsgi_pass</code> uses an uwsgi protocol. <code>proxy_pass</code> uses normal HTTP to talking with uWSGI server. uWSGI docs claims that uwsgi protocol is better, faster and can benefit from all of uWSGI special features. You can send to uWSGI information what type of data you are sending and what uWSGI plugin should be invoked to generate response. With http (<code>proxy_pass</code>) you won’t get that.</p></blockquote><p>示例：</p><p>❌ 错误配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">location</span> <span class="token operator">/</span>app<span class="token operator">/</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">## For this, you should use uwsgi_pass directive.</span>    <span class="token keyword">proxy_pass</span>      <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">154.102</span><span class="token punctuation">:</span><span class="token number">4000</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">## backend layer: uWSGI Python app.</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⭕ 正确配置</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">{</span>  <span class="token keyword">location</span> <span class="token operator">/</span>app<span class="token operator">/</span> <span class="token punctuation">{</span>    <span class="token keyword">proxy_pass</span>      <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">154.102</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## backend layer: OpenResty as a front for app.</span>  <span class="token punctuation">}</span>  <span class="token keyword">location</span> <span class="token operator">/</span>app<span class="token operator">/</span>v3 <span class="token punctuation">{</span>    uwsgi_pass      <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">154.102</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">## backend layer: uWSGI Python app.</span>  <span class="token punctuation">}</span>  <span class="token keyword">location</span> <span class="token operator">/</span>app<span class="token operator">/</span>v4 <span class="token punctuation">{</span>    <span class="token keyword">fastcgi_pass</span>    <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">154.102</span><span class="token punctuation">:</span><span class="token number">8081</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">## backend layer: php-fpm app.</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="小心-proxy-pass-指令中的斜杠"><a href="#小心-proxy-pass-指令中的斜杠" class="headerlink" title="小心 proxy_pass 指令中的斜杠"></a>小心 <code>proxy_pass</code> 指令中的斜杠</h3><blockquote><p>注意尾随斜杠，因为 Nginx 会逐字替换部分，并且您可能会得到一些奇怪的 URL。</p><p>如果 proxy_pass 不带 URI 使用（即 server:port 之后没有路径），Nginx 会将原始请求中的 URI 与所有双斜杠 <code>../</code> 完全一样。</p><p><code>proxy_pass</code> 中的 URI 就像别名指令一样，意味着 Nginx 将用 <code>proxy_pass</code> 指令中的 URI 替换与位置前缀匹配的部分（我故意将其与位置前缀相同），因此 URI 将与请求的相同，但被规范化（没有小写斜杠和其他所有内容） 员工）。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">=</span> <span class="token operator">/</span>a <span class="token punctuation">{</span>  <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token operator">/</span>a<span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token keyword">location</span> <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span>a<span class="token operator">/</span> <span class="token punctuation">{</span>  <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token operator">/</span>a<span class="token operator">/</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="仅使用-host-变量设置和传递-Host-头"><a href="#仅使用-host-变量设置和传递-Host-头" class="headerlink" title="仅使用 $host 变量设置和传递 Host 头"></a>仅使用 <code>$host</code> 变量设置和传递 Host 头</h4><blockquote><p>几乎应该始终将 <code>$host</code> 用作传入的主机变量，因为无论用户代理如何行为，它都是保证具有某种意义的唯一变量，除非您特别需要其他变量之一的语义。</p><p>变量 <code>$host</code> 是请求行或http头中的主机名。 变量 <code>$server_name</code> 是我们当前所在的服务器块的名称。</p></blockquote><blockquote><p>区别：</p><ul><li><code>$host</code> 包含“按此优先顺序：请求行中的主机名，或“主机”请求标头字段中的主机名，或与请求匹配的服务器名”</li><li>如果请求中包含HTTP主机标头字段，则 <code>$http_host</code> 包含该内容（始终等于HTTP_HOST请求标头）</li><li><code>$server_name</code> contains the <code>server_name</code> of the virtual host which processed the request, as it was defined in the Nginx configuration. If a server contains multiple server names, only the first one will be present in this variable</li></ul></blockquote><blockquote><p><code>http_host</code>, moreover, is better than <code>$host:$server_port</code> because it uses the port as present in the URL, unlike <code>$server_port</code> which uses the port that Nginx listens on.</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">proxy_set_header</span>    Host    <span class="token variable">$host</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="正确设置-X-Forwarded-For-头的值"><a href="#正确设置-X-Forwarded-For-头的值" class="headerlink" title="正确设置 X-Forwarded-For 头的值"></a>正确设置 <code>X-Forwarded-For</code> 头的值</h3><h4 id="Rationale-28"><a href="#Rationale-28" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>In the light of the latest httpoxy vulnerabilities, there is really a need for a full example, how to use <code>HTTP_X_FORWARDED_FOR</code> properly. In short, the load balancer sets the ‘most recent’ part of the header. In my opinion, for security reasons, the proxy servers must be specified by the administrator manually.</p></blockquote><blockquote><p><code>X-Forwarded-For</code> is the custom HTTP header that carries along the original IP address of a client so the app at the other end knows what it is. Otherwise it would only see the proxy IP address, and that makes some apps angry.</p></blockquote><blockquote><p>The <code>X-Forwarded-For</code> depends on the proxy server, which should actually pass the IP address of the client connecting to it. Where a connection passes through a chain of proxy servers, <code>X-Forwarded-For</code> can give a comma-separated list of IP addresses with the first being the furthest downstream (that is, the user). Because of this, servers behind proxy servers need to know which of them are trustworthy.</p></blockquote><blockquote><p>The proxy used can set this header to anything it wants to, and therefore you can’t trust its value. Most proxies do set the correct value though. This header is mostly used by caching proxies, and in those cases you’re in control of the proxy and can thus verify that is gives you the correct information. In all other cases its value should be considered untrustworthy.</p></blockquote><blockquote><p>Some systems also use <code>X-Forwarded-For</code> to enforce access control. A good number of applications rely on knowing the actual IP address of a client to help prevent fraud and enable access.</p></blockquote><blockquote><p>Value of the <code>X-Forwarded-For</code> header field can be set at the client’s side - this can also be termed as <code>X-Forwarded-For</code> spoofing. However, when the web request is made via a proxy server, the proxy server modifies the <code>X-Forwarded-For</code> field by appending the IP address of the client (user). This will result in 2 comma separated IP addresses in the <code>X-Forwarded-For</code> field.</p></blockquote><blockquote><p>A reverse proxy is not source IP address transparent. This is a pain when you need the client source IP address to be correct in the logs of the backend servers. I think the best solution of this problem is configure the load balancer to add/modify an <code>X-Forwarded-For</code> header with the source IP of the client and forward it to the backend in the correct form.</p></blockquote><blockquote><p>Unfortunately, on the proxy side we are not able to solve this problem (all solutions can be spoofable), it is important that this header is correctly interpreted by application servers. Doing so ensures that the apps or downstream services have accurate information on which to make their decisions, including those regarding access and authorization.</p></blockquote><p>There is also an interesing idea what to do in this situation:</p><blockquote><p><em>To prevent this we must distrust that header by default and follow the IP address breadcrumbs backwards from our server. First we need to make sure the <code>REMOTE_ADDR</code> is someone we trust to have appended a proper value to the end of <code>X-Forwarded-For</code>. If so then we need to make sure we trust the <code>X-Forwarded-For</code> IP to have appended the proper IP before it, so on and so forth. Until, finally we get to an IP we don’t trust and at that point we have to assume that’s the IP of our user.</em> - it comes from <a href="https://xyu.io/2013/07/04/proxies-ip-spoofing/">Proxies &amp; IP Spoofing</a> by <a href="https://github.com/xyu">Xiao Yu</a>.</p></blockquote><h4 id="Example-26"><a href="#Example-26" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## The whole purpose that it exists is to do the appending behavior:</span><span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For    <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">## Above is equivalent for this:</span><span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For    <span class="token variable">$http_x_forwarded_for</span><span class="token punctuation">,</span><span class="token variable">$remote_addr</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">## The following is also equivalent for above but in this example we use http_realip_module:</span><span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For    <span class="token string">"$http_x_forwarded_for, $realip_remote_addr"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="External-resources-28"><a href="#External-resources-28" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://totaluptime.com/kb/prevent-x-forwarded-for-spoofing-or-manipulation/">Prevent X-Forwarded-For Spoofing or Manipulation</a></li><li><a href="https://www.sjoerdlangkemper.nl/2017/03/01/bypass-ip-block-with-x-forwarded-for-header/">Bypass IP blocks with the X-Forwarded-For header</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Forwarded">Forwarded header</a></li></ul><h3 id="不要在反向代理后面使用带有-scheme-的-X-Forwarded-Proto"><a href="#不要在反向代理后面使用带有-scheme-的-X-Forwarded-Proto" class="headerlink" title="不要在反向代理后面使用带有 $scheme 的 X-Forwarded-Proto"></a>不要在反向代理后面使用带有 <code>$scheme</code> 的 <code>X-Forwarded-Proto</code></h3><blockquote><p>反向代理可以设置 <code>X-Forwarded-Proto</code>，以告知应用程序它是HTTPS还是HTTP甚至是无效名称。schema 变量仅在需要的时候才会被评估（仅用于当前请求）。</p><p>如果设置了 $schema 变量且沿途遇上多个代理，则会导致变形。例如：如果客户端转到<a href="https://example.com,则代理将方案值存储为https./">https://example.com，则代理将方案值存储为HTTPS。</a> 如果代理与下一级代理之间的通信是通过HTTP进行的，则后端会将方案视为HTTP。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token comment" spellcheck="true">## 1) client &lt;-> proxy &lt;-> backend</span><span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>Proto  <span class="token variable">$scheme</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">## 2) client &lt;-> proxy &lt;-> proxy &lt;-> backend</span><span class="token comment" spellcheck="true">## proxy_set_header  X-Forwarded-Proto  https;</span><span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>Proto  <span class="token variable">$proxy_x_forwarded_proto</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="始终将-Host，X-Real-IP-和-X-Forwarded-标头传递给后端"><a href="#始终将-Host，X-Real-IP-和-X-Forwarded-标头传递给后端" class="headerlink" title="始终将 Host，X-Real-IP 和 X-Forwarded 标头传递给后端"></a>始终将 Host，X-Real-IP 和 X-Forwarded 标头传递给后端</h4><h4 id="Rationale-29"><a href="#Rationale-29" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>When using Nginx as a reverse proxy you may want to pass through some information of the remote client to your backend web server. I think it’s good practices because gives you more control of forwarded headers.</p></blockquote><blockquote><p>It’s very important for servers behind proxy because it allow to interpret the client correctly. Proxies are the “eyes” of such servers, they should not allow a curved perception of reality. If not all requests are passed through a proxy, as a result, requests received directly from clients may contain e.g. inaccurate IP addresses in headers.</p></blockquote><blockquote><p><code>X-Forwarded</code> headers are also important for statistics or filtering. Other example could be access control rules on your app, because without these headers filtering mechanism may not working properly.</p></blockquote><blockquote><p>If you use a front-end service like Apache or whatever else as the front-end to your APIs, you will need these headers to understand what IP or hostname was used to connect to the API.</p></blockquote><blockquote><p>Forwarding these headers is also important if you use the https protocol (it has become a standard nowadays).</p></blockquote><blockquote><p>However, I would not rely on either the presence of all <code>X-Forwarded</code> headers, or the validity of their data.</p></blockquote><h4 id="Example-27"><a href="#Example-27" class="headerlink" title="Example"></a>Example</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>  <span class="token keyword">proxy_pass</span>          <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>bk_upstream_01<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## The following headers also should pass to the backend:</span>  <span class="token comment" spellcheck="true">##   - Host - host name from the request line, or host name from the Host request header field, or the server name matching a request</span>  <span class="token comment" spellcheck="true">## proxy_set_header  Host               $host:$server_port;</span>  <span class="token comment" spellcheck="true">## proxy_set_header  Host               $http_host;</span>  <span class="token keyword">proxy_set_header</span>    Host               <span class="token variable">$host</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">##   - X-Real-IP - forwards the real visitor remote IP address to the proxied server</span>  <span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Real<span class="token operator">-</span>IP          <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">## X-Forwarded headers stack:</span>  <span class="token comment" spellcheck="true">##   - X-Forwarded-For - mark origin IP of client connecting to server through proxy</span>  <span class="token comment" spellcheck="true">## proxy_set_header  X-Forwarded-For    $remote_addr;</span>  <span class="token comment" spellcheck="true">## proxy_set_header  X-Forwarded-For    $http_x_forwarded_for,$remote_addr;</span>  <span class="token comment" spellcheck="true">## proxy_set_header  X-Forwarded-For    "$http_x_forwarded_for, $realip_remote_addr";</span>  <span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For    <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">##   - X-Forwarded-Host - mark origin host of client connecting to server through proxy</span>  <span class="token comment" spellcheck="true">## proxy_set_header  X-Forwarded-Host   $host:443;</span>  <span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>Host   <span class="token variable">$host</span><span class="token punctuation">:</span><span class="token variable">$server_port</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">##   - X-Forwarded-Server - the hostname of the proxy server</span>  <span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span><span class="token keyword">Server</span> <span class="token variable">$host</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">##   - X-Forwarded-Port - defines the original port requested by the client</span>  <span class="token comment" spellcheck="true">## proxy_set_header  X-Forwarded-Port   443;</span>  <span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>Port   <span class="token variable">$server_port</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">##   - X-Forwarded-Proto - mark protocol of client connecting to server through proxy</span>  <span class="token comment" spellcheck="true">## proxy_set_header  X-Forwarded-Proto  https;</span>  <span class="token comment" spellcheck="true">## proxy_set_header  X-Forwarded-Proto  $proxy_x_forwarded_proto;</span>  <span class="token keyword">proxy_set_header</span>    X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>Proto  <span class="token variable">$scheme</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="prefix-使用不带-X-前缀的自定义头"><a href="#prefix-使用不带-X-前缀的自定义头" class="headerlink" title="prefix 使用不带 X- 前缀的自定义头"></a>prefix 使用不带 <code>X-</code> 前缀的自定义头</h3><h4 id="Rationale-30"><a href="#Rationale-30" class="headerlink" title="Rationale"></a>Rationale</h4><blockquote><p>Internet Engineering Task Force released a new RFC (<a href="https://tools.ietf.org/html/rfc6648">RFC-6648</a>), recommending deprecation of <code>X-</code> prefix.</p></blockquote><blockquote><p>The <code>X-</code> in front of a header name customarily has denoted it as experimental/non-standard/vendor-specific. Once it’s a standard part of HTTP, it’ll lose the prefix.</p></blockquote><blockquote><p>If it’s possible for new custom header to be standardized, use a non-used and meaningful header name.</p></blockquote><blockquote><p>The use of custom headers with <code>X-</code> prefix is not forbidden but discouraged. In other words, you can keep using <code>X-</code> prefixed headers, but it’s not recommended and you may not document them as if they are public standard.</p></blockquote><h4 id="Example-28"><a href="#Example-28" class="headerlink" title="Example"></a>Example</h4><p>Not recommended configuration:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">add_header</span> X<span class="token operator">-</span>Backend<span class="token operator">-</span><span class="token keyword">Server</span> <span class="token variable">$hostname</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Recommended configuration:</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">add_header</span> Backend<span class="token operator">-</span><span class="token keyword">Server</span>   <span class="token variable">$hostname</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="External-resources-29"><a href="#External-resources-29" class="headerlink" title="External resources"></a>External resources</h4><ul><li><a href="https://tools.ietf.org/html/draft-saintandre-xdash-00">Use of the “X-“ Prefix in Application Protocols</a></li><li><a href="https://stackoverflow.com/questions/3561381/custom-http-headers-naming-conventions/3561399#3561399">Custom HTTP headers : naming conventions</a></li></ul><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>负载平衡是一种有用的机制，可将传入的流量分布在几个有能力的服务器之间。</p><h3 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h3><blockquote><p>健康监控对于所有类型的负载平衡都非常重要，主要是为了业务连续性。 被动检查会按照客户端的请求监视通过 Nginx 的连接失败或超时。</p><p>默认情况下启用此功能，但是此处提到的参数允许您调整其行为。 默认值为：<code>max_fails = 1</code> 和 <code>fail_timeout = 10s</code>。</p></blockquote><p>示例：</p><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> backend <span class="token punctuation">{</span>  <span class="token keyword">server</span> bk01_node<span class="token punctuation">:</span><span class="token number">80</span> max_fails<span class="token operator">=</span><span class="token number">3</span> fail_timeout<span class="token operator">=</span>5s<span class="token punctuation">;</span>  <span class="token keyword">server</span> bk02_node<span class="token punctuation">:</span><span class="token number">80</span> max_fails<span class="token operator">=</span><span class="token number">3</span> fail_timeout<span class="token operator">=</span>5s<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="down-参数"><a href="#down-参数" class="headerlink" title="down 参数"></a>down 参数</h3><blockquote><p>有时我们需要关闭后端，例如 在维护时。 我认为良好的解决方案是使用 down 参数将服务器标记为永久不可用，即使停机时间很短也是如此。</p><p>如果您使用 IP 哈希负载平衡技术，那也很重要。 如果其中一台服务器需要临时删除，则应使用此参数进行标记，以保留客户端 IP 地址的当前哈希值。</p><p>注释对于真正永久禁用服务器或要出于历史目的而保留信息非常有用。</p><p>Nginx 还提供了一个备份参数，将该服务器标记为备份服务器。 当主服务器不可用时，将传递请求。 仅当我确定后端将在维护时正常工作时，我才很少将此选项用于上述目的。</p></blockquote><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">upstream</span> backend <span class="token punctuation">{</span>  <span class="token keyword">server</span> bk01_node<span class="token punctuation">:</span><span class="token number">80</span> max_fails<span class="token operator">=</span><span class="token number">3</span> fail_timeout<span class="token operator">=</span>5s down<span class="token punctuation">;</span>  <span class="token keyword">server</span> bk02_node<span class="token punctuation">:</span><span class="token number">80</span> max_fails<span class="token operator">=</span><span class="token number">3</span> fail_timeout<span class="token operator">=</span>5s<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h2><h3 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h3><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">~</span><span class="token operator">*</span> \<span class="token punctuation">.</span><span class="token punctuation">(</span>gif<span class="token operator">|</span>jpg<span class="token operator">|</span>png<span class="token punctuation">)</span>$ <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true"># 只允许 192.168.0.1 请求资源</span>    <span class="token keyword">valid_referers</span> none blocked <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$invalid_referer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token keyword">rewrite</span> <span class="token operator">^</span><span class="token operator">/</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token variable">$host</span><span class="token operator">/</span>logo<span class="token punctuation">.</span>png<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://juejin.im/post/5d81906c518825300a3ec7ca">nginx 这一篇就够了</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>macOS苹果免费资源大全</title>
      <link href="/2021/10/18/awesome/mac-ping-guo-mian-fei-zi-yuan-da-quan/"/>
      <url>/2021/10/18/awesome/mac-ping-guo-mian-fei-zi-yuan-da-quan/</url>
      
        <content type="html"><![CDATA[<h1 id="Mac苹果免费资源大全"><a href="#Mac苹果免费资源大全" class="headerlink" title="Mac苹果免费资源大全"></a>Mac苹果免费资源大全</h1><p> 现在我们变得非常大，与最初的想法不同，如今我们需要收集各种类别非常好用的 Mac 应用程序、软件以及工具。我需要它们帮助我高效的工作，同时也分享给你。</p><h2 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h2><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><p><em>一种用于编辑纯文本文件的程序，建议使用免费开源的编辑器</em></p><ul><li>  <a href="https://atom.io/">Atom</a> - GitHub 推出的开源编辑器，<a href="editor-plugin-zh.md#atom-plugin">Atom常用插件</a>。<a href="https://github.com/atom/atom"></a> <a href="https://github.com/mehcode/awesome-atom#readme"></a></li><li>  <a href="https://developer.android.com/studio/index.html">Android Studio</a> - Android 的官方 IDE，基于 Intellij IDEA。 <a href="http://tools.android.com/"></a><a href="https://github.com/balsikandar/Android-Studio-Plugins#readme"></a></li><li>  <a href="http://brackets.io/">Brackets</a> - Adobe 推出的 Brackets 免费/开源编辑器。<a href="https://github.com/adobe/brackets/"></a> </li><li>  <a href="http://www.barebones.com/products/bbedit/">BBEdit</a> - 强大的文件编辑器，用于编辑文件，文本文件及程序源代码。</li><li>  <a href="http://panic.com/coda/">Coda2</a> - 用于编写 Web 应用，长得漂亮的编辑器。</li><li>  <a href="https://coteditor.com/">CotEditor</a> - 轻量级的纯文本编辑器。 <a href="https://github.com/coteditor/CotEditor/"></a></li><li>  <a href="https://chocolatapp.com/">Chocolat</a> - 轻量级本地编辑器。</li><li>  <a href="https://www.decosoftware.com/">Deco IDE</a> - React Native IDE 支持控件拖拽界面实时变更。<a href="https://github.com/decosoftware/deco-ide"></a></li><li>  <a href="http://espressoapp.com/">Espresso</a> - Web 编程利器，具备了快速且强大的编辑功能、专业检查与分类、即时预览编辑成果、发布与同步功能等。</li><li>  <a href="https://www.emacswiki.org/emacs/EmacsForMacOS">Emacs</a> - Emacs 是基于控制台的编辑器和高度可定制的。 <a href="https://git.savannah.gnu.org/cgit/"></a><a href="https://github.com/emacs-tw/awesome-emacs#readme"></a></li><li>  <a href="https://www.eclipse.org/">Eclipse</a> - 流行的开源 IDE，主要用于 Java，也为多种语言提供插件支持。 </li><li>  <a href="http://www.sublimetext.com/3">Sublime Text</a> - 一个比较简洁大方带插件管理系统的流行编辑器，<a href="editor-plugin-zh.md#sublime-text-plugin">Sublime常用插件</a>。<a href="https://github.com/dreikanter/sublime-bookmarks#readme"></a></li><li>  <a href="http://haskellformac.com/">Haskell for Mac</a> - Haskell 的现代开发环境。<a href="https://itunes.apple.com/app/haskell-development-platform/id841285201"></a></li><li>  <a href="http://www.dcloud.io/">HBuilder</a> - HBuilder 是 DCloud（数字天堂）推出的一款支持 HTML5 的 Web 开发 IDE。</li><li><a href="https://www.jetbrains.com/toolbox/">JetBrains Toolbox App</a> - 管理已安装的JetBrains工具，下载新工具并打开最近的项目。 <ul><li>  <a href="https://www.jetbrains.com/clion/">CLion</a> - 强大的 C 和 C++ IDE。(<strong>学生免费</strong>)</li><li>  <a href="http://www.jetbrains.com/datagrip/">DataGrip</a> - 用于数据库和SQL的跨平台IDE。 (<strong>学生免费</strong>), 查看<a href="https://www.jetbrains.com/student/">此处</a>了解更多。</li><li>  <a href="https://www.jetbrains.com/rider/">Rider</a> - 跨平台 C# IDE。 它是 Microsoft 的 Visual Studio 的替代方案.</li><li>  <a href="https://www.jetbrains.com/objc/">AppCode</a> - 适用于 iOS / macOS 开发的智能 IDE</li><li>  <a href="https://www.jetbrains.com/pycharm/">PyCharm</a> - 一款 Python 开发集成环境，有专业版和社区版。</li><li>  <a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a> - 一款 Java 开发集成环境。(<strong>学生</strong>免费)</li><li>  <a href="https://www.jetbrains.com/go/">GoLand</a> - JetBrains出品的Go开发IDE，智能，灵活</li><li><a href="http://www.jetbrains.com/webstorm/">Webstorm</a> - 是 JetBrains 公司旗下一款 JavaScript 开发工具。<strong>学生</strong>免费，<a href="https://www.jetbrains.com/student/">点击这里</a> 查看更多。<ul><li>  <a href="https://plugins.jetbrains.com/plugin/6098-nodejs">NodeJS</a> - 集成 <code>Node.js</code>，你肯定需要它，很多功能需要它。</li><li>  <a href="https://plugins.jetbrains.com/plugin/7294-editorconfig">EditorConfig</a> - 帮助开发者在不同的编辑器和 IDE 之间定义和维护一致的代码风格。</li><li>  <a href="https://plugins.jetbrains.com/plugin/8006-material-theme-ui">Material Theme UI</a> - Google 为 React 开发的主题。</li></ul></li></ul></li><li>  <a href="http://lighttable.com/">LightTable</a> - 下一代代码编辑器。<a href="https://github.com/LightTable/LightTable"></a> </li><li>  <a href="https://micro-editor.github.io/">micro</a> - 一个现代直观的基于终端的文本编辑器。 <a href="https://github.com/ory/editor"></a></li><li>  <a href="https://netbeans.org/">NetBeans IDE</a> - 免费、开源的 IDE，主要用于 Java 开发，可支持多种语言和框架。 <a href="https://netbeans.org/community/sources/"></a></li><li>  <a href="https://github.com/onivim/oni">ONI</a> - 由 Neovim 提供的 IDE。</li><li>  <a href="https://www1.qt.io/cn/">Qt</a> - 跨平台 C++ 图形用户界面应用程序开发框架。</li><li>  <a href="https://macromates.com/">TextMate</a> - 文本编辑器软件，与 BBedit 一起并称苹果机上的 emacs 和 vim。<a href="https://github.com/textmate/textmate"></a> </li><li>  <a href="https://codingfriends.github.io/Tincta/">Tincta</a> - 一个免费的文本编辑器。<a href="https://github.com/CodingFriends/Tincta"></a><a href="https://itunes.apple.com/cn/app/tincta/id448340648"></a></li><li>  <a href="https://code.visualstudio.com/">Visual Studio Code</a> - 微软推出的免费/开源编辑器，TypeScript 支持杠杠的，<a href="editor-plugin-zh.md#vscode-plugin">VSCode常用插件</a>。<a href="https://github.com/Microsoft/vscode"></a> <a href="https://github.com/viatsko/awesome-vscode#readme"></a></li><li>  <a href="http://www.vim.org/">Vim</a> - Vim 古老的终端中使用的编辑器，<a href="editor-plugin-zh.md#vim-plugin">Vim常用插件</a>。<a href="https://github.com/vim/vim"></a> <a href="https://github.com/mhinz/vim-galore#readme"></a></li><li>  <a href="http://vimr.org/">Vimr</a> - Vim 客户端，升级 Vim 体验。<a href="https://github.com/qvacua/vimr/"></a></li><li>  <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio Community for Mac</a> - 免费，开源，功能齐全的 IDE。 </li><li>  <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Xamarin Studio</a> - 免费的跨平台的 C# IDE。支持 IOS、Android 和 .net 开发。<a href="https://github.com/mono/monodevelop"></a> <a href="https://github.com/benoitjadinon/awesome-xamarin#readme"></a></li><li>  <a href="https://developer.apple.com/xcode/">Xcode</a> - 开发 iOS 和 MacOS 基本 IDE。<a href="https://itunes.apple.com/cn/app/xcode/id497799835"></a></li></ul><h3 id="开发者实用工具"><a href="#开发者实用工具" class="headerlink" title="开发者实用工具"></a>开发者实用工具</h3><ul><li>  <a href="http://www.publicspace.net/BetterRename/">BetterRename</a> - 一款强大的批量重命名工具，可以通过搜索功能改名。<a href="https://itunes.apple.com/cn/app/better-rename-9/id414209656"></a></li><li>  <a href="http://www.scootersoftware.com/download.php">Beyond Compare</a> - 对比两个文件夹或者文件，并将差异以颜色标示。</li><li>  <a href="https://codekitapp.com/">CodeKit</a> - 自动编译 Less、Sass、Stylus、CoffeeScript、Jade &amp; Haml等文件。</li><li>  <a href="https://www.cacher.io/">Cacher</a> - 基于云的团队代码片段管理器，具有Gist同步，VSCode/Atom/Sublime软件包和Mac/Windows/Linux/Web客户端。</li><li>  <a href="https://kapeli.com/dash">Dash</a> - 强大到你无法想象的 API 离线文档软件。</li><li>  <a href="http://sourcegear.com/diffmerge/">DiffMerge</a> - 可视化的文件比较（也可进行目录比较）与合并工具。</li><li>  <a href="https://github.com/hschmidt/EnvPane">EnvPane</a> - 图形终端查看环境变量的应用工具。<a href="https://github.com/hschmidt/EnvPane"></a></li><li>  <a href="https://github.com/TencentOpen/Fanvas">Fanvas</a> - 把 swf 转为 HTML5 canvas 动画的系统。<a href="https://github.com/oklai/koala/"></a></li><li>  <a href="https://github.com/onmyway133/FinderGo">FinderGo</a> Finder 中快速打开终端，定位到目录<a href="https://github.com/onmyway133/FinderGo"></a></li><li>  <a href="https://github.com/2ndalpha/gasmask">Gas Mask</a> - 编辑 hosts 文件的工具，更简单方便。<a href="https://github.com/2ndalpha/gasmask"></a> </li><li>  <a href="http://zipzapmac.com/Go2Shell">Go2Shell</a> - 从 Finder 打开命令行。</li><li>  <a href="https://macpaw.com/gemini">Gemini</a> - 智能的重复文件查找器。</li><li>  <a href="https://github.com/specialunderwear/Hosts.prefpane">Hosts.prefpane</a> - 编辑 hosts 文件的工具。<a href="https://github.com/specialunderwear/Hosts.prefpane"></a></li><li>  <a href="https://ridiculousfish.com/hexfiend/">Hex Fiend</a> - 快速而聪明的开源十六进制编辑器。 <a href="https://github.com/ridiculousfish/HexFiend/"></a><a href="https://itunes.apple.com/cn/app/hex-fiend/id1342896380"></a></li><li>  <a href="https://en.toolinbox.net/iHosts/">iHosts</a> - 唯一上架 Mac App Store 的 /etc/hosts 编辑神器。 <a href="https://itunes.apple.com/cn/app/ihosts-%E7%BC%96%E8%BE%91%E7%A5%9E%E5%99%A8/id1102004240"></a></li><li>  <a href="http://peacockmedia.software/mac/integrity/free.html">Integrity</a> - 轻松找到无效链接。</li><li>  <a href="http://koala-app.com/">Koala</a> - 预处理器语言图形编译工具，支持 Less、Sass、CoffeeScript、Compass framework 的即时编译。<a href="https://github.com/oklai/koala/"></a> </li><li>  <a href="http://www.kaleidoscopeapp.com/">Kaleidoscope</a> - 一款很强大的文本文件和图像比较工具，同时和 git、svn 等版本控制工具能够完美的结合。</li><li>  <a href="http://localname.io/">Localname</a> - 提供对本地开发服务器的访问权限。 </li><li>  <a href="https://mjmlio.github.io/mjml-app/">MJML</a> - 简化设计回应电子邮件的方式。<a href="https://github.com/mjmlio/mjml"></a></li><li>  <a href="https://www.paintcodeapp.com/">PaintCode</a> - 将设计转换成 Objective-C, Swift 或 C# 代码。</li><li>  <a href="https://pushmate.app/">PushMate</a> 可通过确保推送有效载荷正确来解决常见的推送通知问题。</li><li>  <a href="https://github.com/jkpang/PPRows">PPRows</a> - 计算你写了多少行代码。<a href="https://github.com/jkpang/PPRows"></a></li><li>  <a href="https://oldj.github.io/SwitchHosts/">SwitchHosts</a> - 一个管理、切换多个 hosts 方案的工具。<a href="https://github.com/oldj/SwitchHosts"></a> </li><li>  <a href="https://github.com/scmbreeze/scm_breeze">SCM Breeze</a> - 用于增强与git交互的shell脚本集(用于bash和zsh)。<a href="https://github.com/scmbreeze/scm_breeze"></a></li><li>  <a href="https://www.renfei.org/snippets-lab/">SnippetsLab</a> - 管理和组织你的代码片段。</li><li>  <a href="http://staruml.io/">StarUML</a> - 强大的软件建模软件。</li><li>  <a href="https://www.vandyke.com/products/securecrt/">SecureCRT</a> - 一款支持 SSH、Telnet 等多种协议的终端仿真程序。</li><li>  <a href="https://objectivec2swift.com/#/xcode-extension/">Swiftify</a> - Xcode ＆ Finder 扩展 Objective-C 转 Swift 代码转换器</li><li>  <a href="https://github.com/zqqf16/SYM">SYM</a> - 一个图形化的崩溃日志解析工具。<a href="https://github.com/zqqf16/SYM"></a></li><li>  <a href="http://www.texstudio.org/">TeXstudio</a> - 集成创建 LaTeX 文档的写作环境。 <a href="https://sourceforge.net/projects/texstudio/"></a></li><li>  <a href="https://u.tools/">uTools</a> - 一款基于插件的程序员效率工具，包含非常多的实用插件，如图床、UUID、密码、翻译、JSON格式化等。<a href="https://u.tools/"></a></li><li>  <a href="http://vagrantmanager.com/">Vagrant Manager</a> - 管理你本地服务。<a href="https://github.com/lanayotech/vagrant-manager/"></a></li><li>  <a href="https://www.vagrantup.com/">Vagrant</a> - 用来构建虚拟开发环境的工具。 <a href="https://github.com/mitchellh/vagrant"></a><a href="https://github.com/iJackUA/awesome-vagrant#readme"></a></li><li>  <a href="https://weflow.io/">WeFlow</a> - 一个基于 <a href="https://github.com/Tencent/tmt-workflow">tmt-workflow</a> 前端工作流的开发工具。<a href="https://github.com/Tencent/WeFlow"></a></li><li>  <a href="http://www.woodpeck.cn/">Woodpecker</a> - 在Mac上查看、编辑iOS App的沙盒文件, UserDefaults, Keychain项<a href="https://itunes.apple.com/cn/app/woodpecker/id1333548463"></a></li><li>  <a href="https://www.zeplin.io/">zeplin</a> - 前端与设计协同工作专用工具。</li></ul><h3 id="正则编辑器"><a href="#正则编辑器" class="headerlink" title="正则编辑器"></a>正则编辑器</h3><ul><li>  <a href="http://krillapps.com/patterns/">Patterns</a> - 正则表达式编辑器。</li><li>  <a href="http://motionobj.com/regex/?utm_source=RegexApp&amp;utm_medium=app">Regex</a> - 感觉是用过最漂亮的正则表达式测试工具。</li><li>  <a href="http://reggyapp.com/">Reggy</a> - 正则表达式编辑器。<a href="https://github.com/samsouder/reggy"></a> </li><li>  <a href="http://www.mactechnologies.com/index.php?page=downloads#regexrx">RegExRX</a> - 正则表达式的开发工具。</li></ul><h3 id="API开发和分析"><a href="#API开发和分析" class="headerlink" title="API开发和分析"></a>API开发和分析</h3><ul><li>  <a href="https://mmattozzi.github.io/cocoa-rest-client/">Cocoa Rest Client</a> - 比 Postman 看起来漂亮的客户端，测试 HTTP/REST endpoints。<a href="https://github.com/mmattozzi/cocoa-rest-client"></a></li><li>  <a href="https://insomnia.rest/">Insomnia</a> - 最直观的跨平台 REST API 客户端。 <a href="https://github.com/getinsomnia/insomnia"></a></li><li>  <a href="https://www.getpostman.com/">Postman</a> - Postman 帮助我们快速测试 API。</li><li>  <a href="https://www.katalon.com/">Katalon Studio</a> - 简单开放性测试前端开放工具， 网页， 手机应用等客户端。 可以使用在不同的浏览器</li></ul><h3 id="网络分析"><a href="#网络分析" class="headerlink" title="网络分析"></a>网络分析</h3><ul><li>  <a href="https://www.charlesproxy.com/">Charles</a> - 一个代理工具，允许你查看所有的 HTTP 和 HTTPS 流量。</li><li>  <a href="https://github.com/james-proxy/james">James</a> - 用于 https 和 http 进行查询映射请求。 <a href="https://github.com/james-proxy/james"></a></li><li>  <a href="https://mitmproxy.org/">mitmproxy</a> - 一款支持 HTTP(S) 的中间人代理工具，可在终端下运行，可用于抓包 <a href="https://github.com/james-proxy/james"></a></li><li>  <a href="https://luckymarmot.com/paw">Paw</a> - 先进的 HTTP 客户端。</li><li>  <a href="https://proxieapp.com/">Proxie</a> - HTTP 调试客户端。<a href="https://itunes.apple.com/cn/app/cellist/id897814548"></a></li><li>  <a href="https://proxyman.app/">Proxyman</a> - 适用于 macOS 的现代直观 HTTP 调试代理. </li><li>  <a href="https://www.wireshark.org/">Wireshark</a> - 世界上最广泛使用的网络协议分析软件。 <a href="https://github.com/wireshark/wireshark"></a></li></ul><h3 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h3><blockquote><p>A curated list of shell commands and tools specific to OS X.<a href="https://github.com/herrbischoff/awesome-macos-command-line#readme"></a></p></blockquote><ul><li>  <a href="https://github.com/wting/autojump/wiki">autojump</a> - 告别又臭又长的路径名，一键直达任何目录。 <a href="https://github.com/wting/autojump"></a></li><li>  <a href="https://github.com/Bash-it/bash-it">bash-it</a> - 一个社区的 bash 的框架。 </li><li>  <a href="https://github.com/sharkdp/bat">bat</a> - 带有语法高亮和Git集成的 <code>cat(1)</code> 克隆。 <a href="https://github.com/sharkdp/bat"></a></li><li>  <a href="https://swordfishslabs.wordpress.com/2014/09/03/cool-old-term-is-dead-long-live-cool-retro-term/">color-retro-term</a> - 一款复古风格的终端，非常酷炫。</li><li>  <a href="https://github.com/Swordfish90/cool-retro-term">cool-retro-term</a> - 怀旧的命令行终端。<a href="https://github.com/Swordfish90/cool-retro-term"></a></li><li>  <a href="http://www.cakebrew.com/">Cakebrew</a> - <a href="http://brew.sh/">Homebrew</a> 的客户端软件。摆脱命令方便安装、查看、卸载软件。<a href="https://github.com/brunophilipe/Cakebrew/"></a></li><li>  <a href="https://cmus.github.io/">cmus</a> - 命令行播放音乐应用。 <a href="https://github.com/cmus"></a></li><li>  <a href="https://www.getdnote.com/">Dnote</a> - 命令行上的笔记本，支持多设备同步和网络界面。 <a href="https://github.com/dnote/dnote"></a></li><li>  <a href="https://fishshell.com/">Fish Shell</a> - 智能且用户友好的命令行终端。<a href="https://github.com/fisherman/awesome-fish-shell#readme"></a></li><li>  <a href="https://github.com/nicolargo/glances">Glances</a> - 在命令行中查看你系统运行状态的工具。<a href="https://github.com/nicolargo/glances"></a></li><li>  <a href="https://httpie.org/">httpie</a> - HTTPie 是一个让你微笑的命令行 HTTP 客户端。 <a href="https://github.com/jakubroztocil/httpie"></a></li><li>  <a href="https://hyper.is/">hyper</a> - 基于 Web 技术的终端，直接替代自带的 Terminal。<a href="https://github.com/zeit/hyper"></a> </li><li>  <a href="https://hyperterm.org/">HyperTerm</a> - 一款基于 Node 开发的终端软件，逼格很高。<a href="https://github.com/zeit/hyperterm"></a> </li><li>  <a href="http://www.iterm2.com/">iTerm2</a> - 免费的终端工具，直接替代自带的 Terminal，有非常多惊人的特性。<a href="https://github.com/gnachman/iTerm2"></a> </li><li>  <a href="https://github.com/mischah/itunes-remote">itunes-remote</a> - 通过终端控制您的 iTunes。<a href="https://github.com/mischah/itunes-remote"></a> </li><li>  <a href="https://github.com/liujianping/job">job</a> - 短命令并发、重复执行工具, 适用于压测. <a href="https://github.com/liujianping/job"></a></li><li>  <a href="http://lnav.org/">LNav</a> - 日志文件阅读器. <a href="https://github.com/tstack/lnav"></a></li><li>  <a href="https://github.com/dbcli/mycli">mycli</a> - 为 MySQL 命令行客户端，提供语法高亮和提示功能的工具！ <a href="https://github.com/dbcli/mycli"></a></li><li>  <a href="https://github.com/rgcr/m-cli">m-cli</a> - 用于 macOS 的瑞士军刀。 <a href="https://github.com/rgcr/m-cli"></a></li><li>  <a href="https://github.com/guarinogabriel/Mac-CLI">Mac-CLI</a> - 自动化您的 OS X 系统的使用。 <a href="https://github.com/guarinogabriel/Mac-CLI"></a></li><li>  <a href="https://github.com/mas-cli/mas">mas</a> - 一个简单的命令行界面的苹果应用商店。 <a href="https://github.com/mas-cli/mas"></a></li><li>  <a href="https://720kb.github.io/ndm/">ndm</a> - 查看本地<a href="http://npmjs.org/">NPM</a>安装的包客户端软件。摆脱命令方便安装、查看、卸载软件。<a href="https://github.com/720kb/ndm"></a> </li><li>  <a href="https://www.pgcli.com/">pgcli</a> - 为Postgres提供一个支持自动补全和语法高亮的命令行工具。 <a href="https://github.com/dbcli/pgcli"></a></li><li>  <a href="https://github.com/ggreer/the_silver_searcher">silver searcher (ag)</a> - 类似于ack的代码搜索工具，专注于速度。 <a href="https://github.com/ggreer/the_silver_searcher"></a></li><li>  <a href="https://www.decisivetactics.com/products/serial/">Serial</a> - 为工程师和系统管理员嵌入式硬件更容易。</li><li>  <a href="https://github.com/denysdovhan/spaceship-prompt">spaceship</a> - 一个简约，功能强大且极易定制的Zsh提示。 <a href="https://github.com/denysdovhan/spaceship-prompt"></a></li><li>  <a href="https://github.com/Eugeny/terminus">Terminus</a> - 免费的终端工具，基于 Web 技术的终端，用 TypeScript 写成的跨平台终端工具。深受 hyper 启发。 <a href="https://github.com/Eugeny/terminus"></a></li><li>  <a href="https://www.termius.com/">Termius</a> - 免费的终端工具，可以与 windows 平台的 xshell 媲美。 </li><li>  <a href="https://github.com/tmux/tmux">tmux</a> - 一个优秀的终端复用器类自由软件。<a href="https://github.com/tmux/tmux"></a></li><li>  <a href="https://github.com/tmuxinator/tmuxinator">tmuxinator</a> - Tmux的配置管理工具。<a href="https://github.com/tmuxinator/tmuxinator"></a></li><li>  <a href="https://github.com/icholy/ttygif">ttygif</a> - 将终端录制转换为 GIF 动画。 <a href="https://github.com/icholy/ttygif"></a></li><li>  <a href="https://github.com/sindresorhus/trash">trash</a> - 将文件和目录移动到废纸篓。<a href="https://github.com/sindresorhus/trash"></a></li><li>  <a href="https://github.com/railsware/upterm">Upterm</a> - Upterm (之前是 Black Screen) 来自 21 世纪的强大终端。 </li><li>  <a href="https://www.zsh.org/">Zsh</a> - 一个专为交互式使用而设计的命令行 shell。 <a href="https://sourceforge.net/projects/zsh/"></a><a href="https://github.com/unixorn/awesome-zsh-plugins#readme"></a></li></ul><h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><ul><li>  <a href="https://git-scm.com/">Git</a> - 版本控制工具，官网提供<a href="https://git-scm.com/download/gui/mac">数十种 GUI 客户端</a> for Mac。<a href="https://github.com/git/git"></a></li><li>  <a href="http://subversion.apache.org/">SVN</a> - 版本控制工具。</li></ul><h3 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h3><ul><li>  <a href="http://www.zennaware.com/cornerstone/">Cornerstone</a> - Mac 上最佳的 SVN 管理工具。</li><li>  <a href="https://git-fork.com/">Fork</a> - 一个快速友好的 Git 客户端。 </li><li>  <a href="https://gitfinder.com/">GitFinder</a> - 一个快速和轻量级的 Git 客户端的 Mac 与 Finder 集成。</li><li>  <a href="https://rowanj.github.io/gitx/">GitX</a> - <a href="https://github.com/pieter/gitx">Pieter’s</a>的衍生版本，维护增强生产力和团队开发变化。 <a href="https://github.com/rowanj/gitx"></a></li><li>  <a href="https://github.com/Shikkic/gitbar">Gitbar</a> - 开源，在你的菜单栏上显示 GitHub 贡献统计。<a href="https://github.com/Shikkic/gitbar"></a></li><li>  <a href="https://desktop.github.com/">GitHub Desktop</a> - 使用 GitHub 的 GUI 应用。</li><li>  <a href="http://gitup.co/">GitUp</a> - 一个简单功能强大的 Git 客户端。<a href="https://github.com/git-up/GitUp"></a> </li><li>  <a href="https://www.gitkraken.com/">GitKraken</a> - 最流行的图形用户界面的 git 管理工具。</li><li>  <a href="https://hub.github.com/">Hub</a> - 将 GitHub 接口和 Git 命令进行包装。<a href="https://github.com/github/hub"></a> </li><li>  <a href="https://ohmystarapp.com/">OhMyStar</a> 最好的组织 Github Star 的软件。<a href="https://itunes.apple.com/cn/app/ohmystar2/id1218642292"></a></li><li>  <a href="https://www.sourcetreeapp.com/">SourceTree</a> - 强大的 Git 跨平台客户端。</li><li>  <a href="http://www.syntevo.com/smartgit/">SmartGit</a> - 非商业用途免费，全平台支持，集成 Github 服务。</li><li>  <a href="https://www.sublimemerge.com/">Sublime Merge</a> - Git客户端，来自Sublime Text的制造商。</li><li>  <a href="https://www.git-tower.com/">Tower2</a> - 最强大的 Git 客户端。</li><li>  <a href="http://www.versionsapp.com/">Versions</a> - Mac 上最好的 SVN 管理工具。</li></ul><h3 id="版本控制系统"><a href="#版本控制系统" class="headerlink" title="版本控制系统"></a>版本控制系统</h3><ul><li>  <a href="https://coding.net/">Coding.net</a> - 代码托管，项目管理，WebIDE，演示部署，开启云端开发模式，让开发更简单。</li><li>  <a href="http://gitlab.com/">GitLab</a> - 一个用于仓库管理系统的开源项目。</li><li>  <a href="https://github.com/">GitHub</a> GitHub 托管代码，项目管理，演示部署，瞧，您现在就在访问GitHub。</li><li>  <a href="https://gogs.io/">Gogs</a> - 一款极易搭建的自助 Git 服务 Golang 版本。<a href="https://github.com/gogits/gogs"></a> </li><li>  <a href="https://www.gerritcodereview.com/">Gerrit</a> Gerrit 是一个免费、开放源代码的代码审查软件，使用网页界面。</li><li>  <a href="http://www.gitblit.com/">Gitblit</a> Java 版本 Git 代码托管，项目管理。<a href="https://github.com/gitblit/gitblit"></a> </li><li>  <a href="https://gitea.io/">Gitea</a> - Gogs 的 fork 版本。</li><li>  <a href="https://phabricator.com/">phabricator</a> phabricator 支持 Git、SVN、HG 基于 PHP + Mysql 的开放源代码软件开发平台。</li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul><li>  <a href="https://github.com/qishibo/AnotherRedisDesktopManager">Another Redis Desktop Manager</a> - 一款稳定全新的Redis管理工具。</li><li>  <a href="https://github.com/bdash-app/bdash">Bdash</a> - SQL 客户端应用程序，支持 MySQL、 PostgreSQL (Redshift)、 BigQuery。<a href="https://github.com/bdash-app/bdash"></a> </li><li>  <a href="http://menial.co.uk/base/">Base 2</a> - 一个用于管理 SQLite 数据库的软件。</li><li>  <a href="https://www.eisbahn.jp/chrome_mysql_admin">Chrome MySQL Admin</a> - 一个 Chrome 插件，是 MySQL 开发的跨平台、可视化数据库工具。<a href="https://github.com/yoichiro/chrome_mysql_admin"></a></li><li>  <a href="https://github.com/ChristianKienle/Core-Data-Editor">Core Data Editor</a> - 核心数据编辑器可让您轻松查看，编辑和分析应用程序的数据。 <a href="https://github.com/luin/medis"></a></li><li>  <a href="http://sqlitebrowser.org/">DB Browser for SQLite</a> - 一个跨平台的用于管理 SQLite 数据库的软件。 <a href="https://github.com/sqlitebrowser/sqlitebrowser"></a></li><li>  <a href="http://www.jetbrains.com/datagrip/">DataGrip</a> - JetBrains 公司旗下一款数据库管理工具。<a href="https://www.jetbrains.com/student/">点击这里</a> <strong>学生</strong>免费。</li><li>  <a href="https://dbeaver.jkiss.org/">DBeaver</a> - 跨平台 SQL 客户端，支持大部分主流数据库</li><li>  <a href="http://garrylachman.github.io/ElectroCRUD/">ElectroCRUD</a> - MySQL 数据库 CRUD 应用程序。<a href="https://github.com/garrylachman/ElectroCRUD"></a></li><li>  <a href="http://www.sequelpro.com/">Sequel Pro</a> - 一个 MySQL 数据库管理软件。<a href="https://github.com/sequelpro/sequelpro"></a> </li><li>  <a href="https://www.jackdb.com/">JackDB</a> - 直接的 SQL 访问你所有的数据，无论在哪里。<a href="https://github.com/yoichiro/chrome_mysql_admin"></a> </li><li>  <a href="http://getmedis.com/">medis</a> - 漂亮的 Redis 管理软件。<a href="https://github.com/luin/medis"></a></li><li>  <a href="https://www.mongodb.com/">MongoDB</a> - 一个基于分布式文件存储的数据库。 <a href="https://github.com/gcollazo/mongodbapp"></a><a href="https://github.com/ramnes/awesome-mongodb#desktop"></a></li><li>  <a href="http://www.mongobooster.com/">MongoBooster</a> - MongoDB 图形化管理软件，内嵌 MongoShell，ES6 语法，流畅查询及智能感知。</li><li>  <a href="https://gcollazo.github.io/mongodbapp/">mongoDB.app</a> - 在Mac 上最简单的使用 MongoDB。<a href="https://github.com/gcollazo/mongodbapp"></a></li><li>  <a href="http://www.litixsoft.de/english/mms/">Mongo Management Studio</a> - MongoDB 图形化客户端管理软件。</li><li>  <a href="http://www.macexplorer.co/en/mdb-explorer.php">MDB Explorer</a> - Mac 上查看编辑 Access 数据库的工具。</li><li>  <a href="http://dev.mysql.com/downloads/workbench/">MySQL Workbench</a> - MySQL 数据库官方管理软件。</li><li>  <a href="https://www.navicat.com.cn/products/navicat-data-modeler">Navicat Data Modeler</a> - 一个数据库设计工具，它帮助创建高质素的概念、逻辑和物理数据模型。<a href="https://itunes.apple.com/cn/app/navicat-data-modeler-essentials-%E8%A7%86%E8%A7%89%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E5%99%A8/id532423082"></a></li><li>  <a href="https://eggerapps.at/postico/">Postico</a> - 现代 PostgreSQL 客户端，漂亮功能多。</li><li>  <a href="http://postgresapp.com/">Postgres.app</a> - Mac 上最简单的方法的使用 PostgreSQL 关系型数据库管理系统。<a href="https://github.com/PostgresApp/PostgresApp"></a></li><li>  <a href="http://www.psequel.com/">PSequel</a> - PostgreSQL 数据库 GUI 软件。</li><li>  <a href="https://pgmodeler.io/">pgModeler</a> - 是一个专为PostgreSQL设计的开源数据建模工具。 <a href="https://github.com/pgmodeler/pgmodeler"></a></li><li>  <a href="https://github.com/UUGU/redis-client-app">RedisClient</a> - 漂亮跨平台的Redis管理软件。<a href="https://github.com/UUGU/redis-client-app"></a></li><li>  <a href="https://redisdesktop.com/">RedisDesktopManager</a> - Redis 跨平台的 GUI 管理工具。<a href="https://github.com/uglide/RedisDesktopManager"></a> </li><li>  <a href="http://www.sqlprostudio.com/">SQLPro Studio</a> - 支持 SQL Server, Postgres, Oracle 以及 MySQL 等主流的数据库可视化管理工具.</li><li>  <a href="https://aurvan.com/sqlight/">SQLight</a> - 一个 SQLite 数据库管理器工具，非常好用。 </li><li>  <a href="https://tableplus.io/">TablePlus</a> - 支持 PostgreSQL，MySQL，RedShift，MariaDB… 各种数据库的高颜值客户端。 <a href="https://github.com/TablePlus/TablePlus"></a></li><li>  <a href="https://public.tableau.com/s/">Tableau Public</a> - 数据可视化工具。 </li><li>  <a href="https://protonail.com/">Keylord</a> - Redis，Bolt，LevelDB 和 Memcached 键值数据库的桌面GUI客户端。</li></ul><h2 id="设计和产品"><a href="#设计和产品" class="headerlink" title="设计和产品"></a>设计和产品</h2><h3 id="设计工具"><a href="#设计工具" class="headerlink" title="设计工具"></a>设计工具</h3><ul><li>  <a href="https://secure.flyingmeat.com/acorn/">Acorn</a> - 一个像 PS，全面的功能集的图像编辑器。</li><li>  <a href="https://affinity.serif.com/en-us/designer/">Affinity Designer</a> - 矢量图像设计工具，可以是 Adobe Illustrator 的替代。</li><li>  <a href="https://affinity.serif.com/en-us/photo/">Affinity Photo</a> - 光栅图像设计工具，可以替代 Adobe PS 图象处理软件。</li><li>  <a href="http://al.chemy.org/">Alchemy</a> - 开源的绘图工具软件，用于素描、会话以及一种新的绘图方式。<a href="http://svn.al.chemy.org/"></a></li><li>  <a href="https://www.belightsoft.com/art-text/">Art Text 3</a> - 生成各种特效字体。</li><li>  <a href="https://www.blender.org/">Blender</a> - 全功能可扩展的跨平台 3D 内容套件。<a href="https://developer.blender.org/"></a></li><li>  <a href="https://www.figma.com/">Figma</a> - 一款基于 Web 的实时协作的云设计软件。 </li><li>  <a href="http://fontforge.github.io/">FontForge</a> - 字体编辑工具。 <a href="https://github.com/fontforge"></a></li><li>  <a href="https://www.gimp.org/">GIMP</a> - 图像编辑软件，号称 Linux 下的 PhotoShop，同时有 Mac 版本。<a href="https://www.gimp.org/source/#gimp-source-code"></a></li><li>  <a href="https://designer.io/">Gravit Designer</a> - 混合矢量/位图布局应用，比起 Sketch 还差一点。 <a href="https://itunes.apple.com/app/id1207744923"></a></li><li>  <a href="https://tenonedesign.com/inklet.php">inklet</a> - 将 Mac 上的触摸板变成绘图板。</li><li>  <a href="https://inkscape.org/zh/">Inkscape</a> - 一款开源矢量图形编辑软件，与 Illustrator、Freehand、CorelDraw、Xara X 等其他软件相似。<a href="https://launchpad.net/inkscape"></a></li><li>  <a href="https://krita.org/">Krita</a> - 一个开源的位图形编辑软件，包含一个绘画程式和照片编辑器。 <a href="https://github.com/KDE/krita"></a></li><li>  <a href="https://helftone.com/">Monodraw</a> - macOS 平台上强大的 ASCII 设计流程编辑器。<a href="https://itunes.apple.com/cn/app/monodraw/id920404675"></a></li><li>  <a href="https://ephtracy.github.io/">MagicaVoxel</a> - 轻量级的8位像素编辑和交互路径追踪渲染器。</li><li>  <a href="http://www.makehumancommunity.org/">MakeHuman</a> - 功能强大且免费的3D人体建模器。 </li><li>  <a href="https://nikcollection.dxo.com/">Nik Collection</a> - 专业照片后期制作工具，Google 收购后免费</li><li>  <a href="http://www.pixelmator.com/mac/">Pixelmator</a> - 强大的图像编辑器，可能PS图像处理软件的选择。</li><li>  <a href="http://paintbrush.sourceforge.net/">Paintbrush</a> - 位图图像编辑器。<a href="https://sourceforge.net/projects/paintbrush/files/"></a> </li><li>  <a href="https://www.pencil2d.org/">Pencil2D</a> - 制作2D手绘动画的简单直观的工具。 <a href="https://github.com/pencil2d/pencil"></a></li><li>  <a href="http://principleformac.com/">Principle</a> - 使用它很容易设计动画和交互式用户界面。</li><li>  <a href="http://pixelperfect-app.com/">Pixel Perfect</a> - 比较 UI 模型和开发结果非常容易。 <a href="https://itunes.apple.com/cn/app/pixel-perfect/id916097243"></a></li><li>  <a href="http://pixologic.com/sculptris/#">Sculptris</a> - 所见所得的 3D 建模。</li><li><a href="https://www.sketchapp.com/">Sketch</a> - 混合矢量/位图布局应用，特别适用于用户界面，Web 和移动设计。<ul><li>  <a href="http://sketchtoolbox.com/">Sketch Toolbox</a> - 一个超级简单的 Sketch 插件管理器。<a href="https://github.com/buzzfeed/Sketch-Toolbox"></a> </li><li>  <a href="http://utom.design/measure/">Measure</a> - 设计稿标注、测量工具。 <a href="https://github.com/utom/sketch-measure"></a></li><li>  <a href="https://abynim.github.io/UserFlows/">User Flows</a> - 直接从画板生成流程图。 <a href="https://github.com/abynim/UserFlows"></a></li></ul></li><li>  <a href="https://yo-op.github.io/sketchcachecleaner/">Sketch Cache Cleaner</a> - 清理 Sketch 历史文件，释放磁盘空间。 <a href="https://github.com/yo-op/sketchcachecleaner"></a></li><li>  <a href="https://www.sketchbook.com/?locale=cn">SketchBook</a> - 出众的绘图软件。</li><li>  <a href="https://github.com/duyquoc/ScreenToLayers">ScreenToLayers</a> - 轻松导出桌面分层文件 PSD 文件。<a href="https://github.com/duyquoc/ScreenToLayers"></a> <a href="https://itunes.apple.com/cn/app/screentolayers/id1077317077?l=en&amp;mt=12"></a></li><li>  <a href="https://sparkleapp.com/">Sparkle</a> - 可视化网页设计工具。</li><li>  <a href="http://www.tayasui.com/sketches/">Tayasui Sketches</a> - 专业的绘图软件。</li><li>  <a href="https://vectr.com/">Vectr</a> - 免费图形编辑器。这是一个简单而强大的 Web 和桌面跨平台工具，把你的设计变成现实。</li></ul><h3 id="原型流程"><a href="#原型流程" class="headerlink" title="原型流程"></a>原型流程</h3><ul><li>  <a href="https://www.axure.com/">Axure RP 8</a> - 画原型图工具，团队协作，方便好用。</li><li>  <a href="https://www.protopie.io/">ProtoPie</a> - 高保真交互原型设计。</li><li>  <a href="http://www.adobe.com/products/experience-design.html">Adobe XD (Experience Design)</a> - 用于网站和移动应用的设计和原型设计。</li><li>  <a href="https://balsamiq.com/products/mockups/">Balsamiq Mockups</a> - 一个快速的网页设计原型工具，帮助你更快、更聪明的工作。</li><li>  <a href="http://origami.design/">Origami Studio</a> - 一种设计现代界面的新工具，由 Facebook 设计师构建和使用。</li><li>  <a href="https://www.flinto.com/">Flinto</a> - 快速制作高保真的互交原型工具，支持 Sketch 导入。</li><li>  <a href="https://kiteapp.co/">Kite</a> - 一个强大的动画制作工具制作 Mac 和 iOS 原型中的应用。</li><li>  <a href="http://www.justinmind.com/">Justinmind</a> - 功能更丰富团队协作方便。</li><li>  <a href="https://www.mockflow.com/">MockFlow</a> - 用于网页设计和可用性测试的在线原型设计套件。</li><li>  <a href="http://pencil.evolus.vn/">pencil</a> - 开源免费制作软件原型的工具 <a href="https://github.com/evolus/pencil"></a></li><li>  <a href="http://www.mockplus.com/">Mockplus</a> - 更快更简单的原型设计工具。</li><li>  <a href="https://www.omnigroup.com/omnigraffle">OmniGraffle</a> - 可用来绘制图表、流程图、组织结构图、思维导图以及插图或原型。</li><li>  <a href="http://www.xmind.net/">XMind</a> - 一款实用的思维导图软件。</li><li>  <a href="http://lighten.xmind.net/">Lighten</a> - XMind 出品的一款实用的思维导图软件。</li><li>  <a href="http://loremify.com/">Loremify</a> - 快速准确的设计，原型或生成标题，段落，列表和文章。<a href="https://itunes.apple.com/cn/app/loremify/id1028877632"></a></li><li>  <a href="http://www.literatureandlatte.com/scapple.php">Scapple</a> - 一款实用的思维导图软件。</li><li>  <a href="https://framer.com/">Framer</a> - 做交互原型的工具。</li><li>  <a href="https://marvelapp.com/">Marvel</a> - 简单设计，原型设计和协作。</li><li>  <a href="http://mindnode.com/">MindNode</a> - 简洁的风格与人性化的操作，绘制思维脑图。</li><li>  <a href="https://writemapper.com/">WriteMapper</a> - 专为写作者而设的脑图工具。</li><li>  <a href="https://simplemind.eu/">SimpleMind</a> - 超小体积的思维导图工具。</li><li>  <a href="https://macsvg.org/">macSVG</a> - 设计 HTML5 SVG 和动画. <a href="https://github.com/dsward2/macSVG"></a></li></ul><h3 id="作图工具"><a href="#作图工具" class="headerlink" title="作图工具"></a>作图工具</h3><ul><li>  <a href="https://www.draw.io/">Draw.io</a> - 上百种图形，支持多种格式导出。 </li><li>  <a href="https://www.omnigroup.com/omnigraffle/">OmniGraffle</a> - Omni 成员，native 应用。</li><li>  <a href="https://www.processon.com/">ProcessOn</a> - 流程图、思维导图、原型图… 中文友好，免费保存 5 个文件。</li></ul><h3 id="截图工具"><a href="#截图工具" class="headerlink" title="截图工具"></a>截图工具</h3><ul><li>  <a href="https://github.com/onmyway133/GifCapture">GifCapture</a> - 开源 macOS 截屏生成 Gif 工具。<a href="https://github.com/onmyway133/GifCapture"></a> </li><li>  <a href="https://gifox.io/">Gifox</a> - 专业的高颜值 GIF 录制应用。<a href="https://itunes.apple.com/cn/app/gifox-gif-recording-and-sharing/id1082624744"></a></li><li>  <a href="https://gfycat.com/gifbrewery">GIF Brewery</a> - gives everyone the power to create stunning GIFs from video files. <a href="https://itunes.apple.com/cn/app/gif-brewery-by-gfycat/id1081413713"></a></li><li>  <a href="https://giphy.com/apps/giphycapture">GIPHY Capture</a> - 免费软件的捕捉和分享图片在桌面上。<a href="https://itunes.apple.com/cn/app/giphy-capture-the-gif-maker/id668208984?l=en&amp;mt=12"></a></li><li>  <a href="https://getkap.co/">Kap</a> - 轻量 GIF 录屏小工具。<a href="https://github.com/wulkano/kap"></a> </li><li>  <a href="https://github.com/keycastr/keycastr">KeyCastr</a> - 录屏好帮手，实时显示按键操作的小工具。<a href="https://github.com/keycastr/keycastr"></a> </li><li>  <a href="http://www.cockos.com/licecap/">Licecap</a> - 是一款屏幕录制工具输出 GIF，录制过程中可以随意改变录屏范围。<a href="https://github.com/justinfrankel/licecap"></a> </li><li>  <a href="https://monosnap.com/">Monosnap</a> - 制作截图，录制视频共享文件。 <a href="https://itunes.apple.com/cn/app/monosnap/id540348655"></a></li><li>  <a href="https://evernote.com/intl/zh-cn/skitch/">Skitch</a> - 截图附带强大的标注功能。</li><li>  <a href="http://shifty.natethompson.io/">Shifty</a> - 一个菜单栏应用程序，让您更多地控制夜班。<a href="https://github.com/thompsonate/Shifty"></a></li><li>  <a href="http://txtlabs.com/">ScreenShot PSD</a> - 将屏幕捕获存为分层的 PSD，便于编辑。 <a href="https://itunes.apple.com/cn/app/screenshot-psd/id489880259"></a></li><li>  <a href="https://zh.snipaste.com/">Snipaste</a> - 一个简单但强大的截图工具。</li><li>  <a href="http://snip.qq.com/">Snip</a> - 高效的截图工具，支持滚动截屏，腾讯作品。</li><li>  <a href="http://teampaper.me/snap/">Teampaper Snap</a> - 为设计师量身定做的屏幕截图兼注释工具。 <a href="https://itunes.apple.com/cn/app/monosnap/id1199502670"></a></li><li>  <a href="http://jietu.qq.com/">截图(Jietu)</a> - 截图附带强大的标注功能，腾讯作品。</li><li>  <a href="http://xnipapp.com/">Xnip</a> - 免费好用的滚动截屏利器。<a href="https://itunes.apple.com/cn/app/xnip-handy-screenshot-app/id1221250572?l=en&amp;mt=12"></a> </li><li>  <a href="https://www.better365.cn/">iShot</a> - 完全免费、功能全面的截图工具，支持贴图、滚动截图、延时截图等。 <a href="https://apps.apple.com/cn/app/ishot-%E6%88%AA%E5%9B%BE-%E9%95%BF%E6%88%AA%E5%9B%BE-%E6%A0%87%E6%B3%A8%E5%B7%A5%E5%85%B7/id1485844094?mt=12"></a></li></ul><h3 id="其它工具"><a href="#其它工具" class="headerlink" title="其它工具"></a>其它工具</h3><ul><li>  <a href="https://github.com/mancunianetz/APNGb">APNGb</a> - 编辑 png 图片格式的软件。 <a href="https://github.com/mancunianetz/APNGb"></a></li><li>  <a href="https://assetizr.com/">Assetizr</a> - 图片编辑应用，轻松更改图片尺寸，压缩图片，重命名图片。 <a href="https://itunes.apple.com/de/app/assetizr/id1449126727?l=en&amp;mt=12"></a></li><li>  <a href="https://itunes.apple.com/cn/app/shotbuilder/id1294179975?mt=12">AppIconBuilder(图标构建)</a> - App图标多平台一键导出。<a href="https://itunes.apple.com/cn/app/shotbuilder/id1294179975?mt=12"></a></li><li>  <a href="http://couleursapp.com/">Couleurs</a> - 简单的屏幕取色应用程序。 </li><li>  <a href="https://cn.eagle.cool/">Eagle App</a> - 强大的图片、视频、音频、設計素材及文件管理软件。</li><li>  <a href="http://jumpzero.com/frank/">Frank DeLoupe</a> - 支持 Retina 的屏幕拾色器。</li><li>  <a href="http://www.img2icnsapp.com/">Image2icon</a> - 将你的图片转换成图标。</li><li>  <a href="https://pngmini.com/">ImageAlpha</a> - 压缩 PNG 图片，去掉无效的透明。<a href="https://github.com/pornel/ImageAlpha"></a> </li><li>  <a href="https://imageoptim.com/mac">ImageOptim</a> - 压缩图片，删除 EXIF 信息。<a href="https://github.com/ImageOptim/ImageOptim"></a> </li><li>  <a href="http://toolinbox.net/iPic/">iPic</a> - 上传图片至七牛、阿里云等图床，支持 Markdown 链接。<a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPic_me"></a></li><li>  <a href="http://appersian.net/">IconKit</a> - App图标自动生成器。<a href="https://itunes.apple.com/cn/app/iconkit-icon-resizer-for-app/id507135296?mt=12"></a></li><li>  <a href="http://geticonjar.com/">Iconjar</a> - 图标管理软件，带组织和搜索功能。</li><li>  <a href="http://www.jpegmini.com/">JPEGmini</a> - 将图像尺寸降低高达 80％，而不会影响质量。 <a href="https://itunes.apple.com/cn/app/jpegmini-lite/id525742250"></a></li><li>  <a href="https://www.presetbrewery.com/">Preset Brewery</a> - 将Lightroom预设转换为Adobe Camera Raw的工具。</li><li>  <a href="https://github.com/Molunerfinn/PicGo">PicGo</a> - 支持常用 cdn 的图床工具。<a href="https://github.com/Molunerfinn/PicGo"></a></li><li>  <a href="http://www.boltnev.com/resizemaster/">Resize Master</a> - 更快速和容易批量调整图像和加水印。 <a href="https://itunes.apple.com/app/resize-master/id1025306797"></a></li><li>  <a href="http://rightfontapp.com/">RightFont</a> - 字体管理工具。</li><li>  <a href="http://www.svgs.us/">svgus</a> - SVG 图片管理器。<a href="https://itunes.apple.com/cn/app/svgsus/id1106867065"></a></li><li>  <a href="http://ethanschoonover.com/solarized">Solarized</a> - 干净清爽的颜色主题，支持 iTerm、Intellij IDEA、Vim 等。</li><li>  <a href="http://theolabrothers.com/">Sip</a> - 收集，整理和分享你的颜色拾色器。</li><li>  <a href="http://www.eigenlogik.com/spectrum/mac">Spectrum</a> - 一款可以轻松直观地创建漂亮配色方案的应用程序。<a href="https://itunes.apple.com/cn/app/spectrum/id518156125"></a></li><li>  <a href="https://github.com/kyleduo/TinyPNG4Mac">TinyPNG4Mac</a> - 图片压缩专用开源工具。<a href="https://github.com/kyleduo/TinyPNG4Mac"></a></li><li>  <a href="https://tropy.org/">Tropy</a> - 照片档案管理工具。<a href="https://github.com/tropy/tropy"></a> </li><li>  <a href="https://github.com/gee1k/uPic">uPic</a> - macOS 原生应用，功能强大且简洁的图床客户端。<a href="https://github.com/gee1k/uPic"></a></li><li>  <a href="http://getmarkman.com/">马克鳗</a> - 高效的设计稿标注、测量工具。</li></ul><h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><ul><li>  <a href="https://www.docker.com/">Docker</a> - 开源的应用容器引擎。 <a href="https://github.com/docker"></a><a href="https://github.com/veggiemonk/awesome-docker#readme"></a></li><li>  <a href="https://dockstation.io/">DockStation</a> - 管理 Docker 项目的程序。 <a href="https://github.com/DockStation/dockstation"></a></li><li>  <a href="http://www.parallels.com/">Parallels Desktop</a> - 虽然好用但是收费机制，更新花钱、花钱、花钱。</li><li>  <a href="https://portainer.io/">Portainer</a> - 基于网页管理 Docker 容器和 swarm 集群。 <a href="https://github.com/portainer/portainer"></a></li><li>  <a href="http://www.virtualbox.org/">Virtual Box</a> - 免费、免费、免费，带 NTFS 读写，不用买 ParagonNTFS，省100块。</li><li>  <a href="http://www.vmware.com/">VMware Fusion</a> - 强大的虚拟机，商业软件。</li><li>  <a href="https://veertu.com/">Veertu</a> - Mac 上轻量级的虚拟机。通过一种高响应，沙箱且本地化的方式在你在 Mac 上运行虚拟机。</li></ul><h2 id="通信"><a href="#通信" class="headerlink" title="通信"></a>通信</h2><p><em>推荐一些通信工具，沟通，团队协同。</em></p><ul><li>  <a href="https://adium.im/">Adium</a> - 呃，这个是老的集成多个平台的聊天客户端。</li><li>  <a href="https://bearychat.com/">BearyChat</a> - 互联网团队协作，沟通工具。</li><li>  <a href="https://github.com/stonesam92/ChitChat">ChitChat</a> - WhatsApp 非官方。<a href="https://github.com/stonesam92/ChitChat"></a></li><li>  <a href="https://github.com/geeeeeeeeek/electronic-wechat">Electronic WeChat</a> - 调用微信接口，使用 <a href="https://github.com/electron/electron">Electron</a> 开发的第三方漂亮开源微信应用。<a href="https://github.com/geeeeeeeeek/electronic-wechat"></a></li><li>  <a href="http://meetfranz.com/">Franz</a> - 一个使用 <a href="https://electronjs.org/">Electron</a>开发的，可以同时登录 23 个平台的即时通讯软件。</li><li>  <a href="https://flumeapp.com/">Flume</a> - 简约大气高逼格的Instagram，如果只是浏览点赞评论，免费版已经足够用。</li><li>  <a href="https://gitter.im/">Gitter</a> - 关于 GitHub 的项目交流，支持 Markdown，对开发者极为友好。</li><li>  <a href="https://keybase.io/">Keybase</a> - 一个安全的消息应用程序! <a href="https://github.com/keybase"></a></li><li>  <a href="http://weiboformac.sinaapp.com/">Maipo脉搏</a> - 微博第三方 Mac 应用。<a href="https://itunes.apple.com/cn/app/weibox/id789066512"></a></li><li>  <a href="https://fbmacmessenger.rsms.me/">Messenger</a> - Facebook 第三方聊天工具。<a href="https://github.com/rsms/fb-mac-messenger"></a></li><li>  <a href="http://im.qq.com/macqq/index.shtml">QQ</a> - QQ for Mac App。</li><li>  <a href="http://rambox.pro/">Rambox</a> - 消息和电子邮件应用程序，将常见的Web应用程序组合成一个程序。 <a href="https://github.com/saenzramiro/rambox"></a></li><li>  <a href="https://www.skype.com/">Skype</a> - Skype 共享、跨平台的短信和电话。</li><li>  <a href="https://slack.com/">Slack</a> - 团队协作，沟通工具。</li><li>  <a href="https://desktop.telegram.org/">Telegram</a> - 通讯新时代。</li><li>  <a href="https://www.codeux.com/textual">Textual</a> - 最受欢迎的世界与我们相关的 KPI 应用 for OS X。<a href="https://github.com/Codeux-Software/Textual"></a></li><li>  <a href="https://www.teambition.com/">Teambition</a> - 团队协作。提供管理任务、安排日程、查找文件、即时讨论等团队所需要的一切协作功能。</li><li>  <a href="http://weixin.qq.com/cgi-bin/readtemplate?t=mac&amp;platform=wx&amp;lang=zh_CN">WeChat</a> - 微信 for Mac App。</li><li>  <a href="https://weechat.org/">WeeChat</a> - 一个命令行聊天客户端。</li><li>  <a href="https://zoom.us/">Zoom</a> - 视频会议 &amp; 屏幕共享，提供录制功能。</li><li>  <a href="https://imach.me/gohanapp/">御飯</a> - 饭否第三方Mac应用。</li><li>  <a href="https://github.com/jianliaoim/talk-os">简聊</a> - 企业级即时沟通工具，已经下线了，可以自己搭建一套系统玩儿。<a href="https://github.com/jianliaoim/talk-os"></a> </li><li>  <a href="http://www.dingtalk.com/index-b.html#download_block">钉钉</a> - 企业级办公通讯免费平台。</li><li>  <a href="https://pubu.im/apps/osx">零信</a> - 随时随地工作，跨平台。</li><li>  <a href="http://www.jingoal.com/client/mac/mac.htm">今目标</a> - 一款面向中小企业的互联网工作平台。</li><li>  <a href="https://www.rishiqing.com/">日事清</a> - 工作计划软件，日志软件，项目管理，团队协作软件，个人日程管理，团队协作工具。日程安排，计划分配，笔记总结等。</li><li>  <a href="https://www.rtxapp.com/mac">RTX_腾讯通</a> - 企业内部可以使用的聊天软件，企业内部可以使用此通讯工具，这个软件有Mac版本也有win版本，Mac版本专为 Retina 显示优化过</li></ul><h3 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h3><ul><li>  <a href="http://airmailapp.com/">Airmail</a> - 快速的邮件客户端支持 Mac 和 iPhone。</li><li>  <a href="http://www.foxmail.com/mac/">Foxmail</a> - 快速的邮件客户端。</li><li>  <a href="http://mail.163.com/dashi/">网易邮箱大师</a> - 全平台的邮箱管理客户端，网易邮箱大师电脑版。 </li><li>  <a href="https://smallcubed.com/mt/">MailTags</a> - 管理和组织邮件，日程和标签进行分类邮件。</li><li>  <a href="https://nylas.com/nylas-mail/">Nylas Mail</a> - 免费邮件客户端。 <a href="https://github.com/nylas/nylas-mail"></a></li><li>  <a href="https://www.nylas.com/">N1</a> - 可以扩展的开源收费邮件客户端。</li><li>  <a href="https://newtonhq.com/">Newton(原Cloudmagic)</a> - 界面非常简洁的一个邮件客户端。</li><li>  <a href="https://www.postbox-inc.com/">Postbox</a> - 这个貌似也非常强大哦，关键是简洁漂亮的收费邮件客户端。</li><li>  <a href="https://polymail.io/">Polymail</a> - 简单，功能强大，长得好看的新晋邮件客户端。</li><li>  <a href="https://sparkmailapp.com/">Spark</a> - 新推出的快速邮件客户端支持 Mac 和 iPhone。</li><li>  <a href="https://www.mozilla.org/zh-CN/thunderbird/">ThunderBird</a> - Mozilla 公司出品的强大的 Email 客户端程序。</li><li>  <a href="http://www.yomail.com/">Yomail</a> - 新出的国内开发的比较好的邮件客户端。</li></ul><h3 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h3><ul><li>  <a href="https://cyberduck.io/">Cyberduck</a> - 免费 FTP，SFTP，S3 和 WebDAV 客户端 &amp; OpenStack Swift Client。</li><li>  <a href="http://fivedetails.com/flow/">Flow</a> - 支持简单的 FTP + SFTP 客户端。</li><li>  <a href="https://panic.com/transmit/">Transmit</a> - 一个 FTP 客户端，支持 FTP + SFTP + S3。</li><li>  <a href="http://www.yummysoftware.com/">Yummy FTP</a> - 专业快速，可靠的 FTP 客户端。</li></ul><h2 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h2><ul><li>  <a href="http://www.alsoft.com/DiskWarrior/">DiskWarrior</a> - 恢复文件系统损坏时，磁盘工具进行选择。</li><li>  <a href="https://www.prosofteng.com/datarescue-mac-data-recovery/">Data Rescue</a> - 多种情况下的全面和专业的数据恢复。</li><li>  <a href="http://www.r-studio.com/data_recovery_macintosh/">R-Studio for Mac</a> - 可恢复分区被格式化、损坏或被删除的文件。</li></ul><h2 id="音频和视频"><a href="#音频和视频" class="headerlink" title="音频和视频"></a>音频和视频</h2><ul><li>  <a href="http://www.audacityteam.org/">Audacity</a> - 免费开源的编辑音频的软件。<a href="https://github.com/audacity/audacity"></a></li><li>  <a href="http://www.audacityteam.org/">Ardour</a> - 录制，编辑和混合多轨音频。<a href="https://github.com/Ardour/ardour"></a></li><li>  <a href="http://www.rogueamoeba.com/audiohijack/">Audio Hijack</a> - 一个记录任何应用程序的音频，包括网络电话 Skype，网络流从 Safari，以及更多。</li><li>  <a href="http://www.arctime.org/">ArcTime</a> - 跨平台字幕制作软件。</li><li>  <a href="https://macroplant.com/adapter">Adapter</a> - 视频，音频和图像转换工具。</li><li>  <a href="http://www.aegisub.org/">Aegisub</a> - 免费、开源、跨平台的专业字幕编辑软件，可以快速打轴，制作特效字幕等，字幕组必备。 <a href="https://github.com/Aegisub/Aegisub/"></a></li><li>  <a href="http://cogx.org/">Cog</a> - 一个免费的开源音频播放器。<a href="https://bitbucket.org/mamburu/cog/"></a> </li><li>  <a href="https://github.com/AnaghSharma/Carol">Carol</a> - 为 macOS 提供最小化和美丽的歌词应用程序。<a href="https://github.com/AnaghSharma/Carol"></a> </li><li>  <a href="https://mac.eltima.com/media-player.html">Elmedia Player</a> - 支持 FLV, MP4, AVI, MOV, DAT, MKV, MP3, FLAC, M4V 等格式播放.</li><li>  <a href="http://hydrogen-music.org/">Hydrogen</a> - 专业鼓乐类工具，创建专业但简单而直观的鼓乐节目。<a href="https://github.com/hydrogen-music/hydrogen"></a></li><li>  <a href="https://handbrake.fr/">HandBrake</a> - 高性能的视频编码和转换工具，具有很好的图形用户界面。<a href="https://github.com/HandBrake/HandBrake"></a></li><li>  <a href="http://www.iffmpeg.com/">iFFmpeg</a> - MacOS 上功能强大、易用的视频压制软件。</li><li>  <a href="https://lhc70000.github.io/iina/">IINA</a> - 基于<a href="https://github.com/mpv-player/mpv">MPV</a>的，现代视频播放器，支持多点触摸控制。<a href="https://github.com/lhc70000/iina"></a> </li><li>  <a href="https://kodi.tv/">Kodi</a> - 一款一流的免费开源媒体中心软件，可用于播放视频、音乐，查看图片，玩游戏等。<a href="https://github.com/xbmc/xbmc"></a> </li><li>  <a href="https://github.com/mifi/lossless-cut">LosslessCut</a> - 跨平台工具，使用ffmpeg进行快速无损的视频和音频修剪。<a href="https://github.com/mifi/lossless-cut"></a></li><li>  <a href="https://github.com/ddddxxx/LyricsX">LyricsX</a> - 一款功能完备的歌词工具。 <a href="https://github.com/ddddxxx/LyricsX"></a><a href="https://itunes.apple.com/cn/app/lyricsx/id1254743014?mt=12"></a></li><li>  <a href="http://markvapps.com/metadatics">Metadatics</a> - 音频元数据编辑器，支持大多数常见的音频文件。<a href="https://itunes.apple.com/cn/app/tincta/id448340648"></a></li><li>  <a href="http://mixxx.org/">Mixxx</a> - 免费的DJ软件，给你一切你需要的表演组合，名副其实的替代 Traktor。<a href="https://github.com/mixxxdj/mixxx"></a> </li><li>  <a href="https://musescore.org/">MuseScore</a> - 免费的作曲与乐谱软件。<a href="https://github.com/musescore/MuseScore"></a> </li><li>  <a href="https://mpv.io/">MPV</a> - 一个免费、开源和跨平台的媒体播放器。<a href="https://github.com/mpv-player/mpv"></a> </li><li>  <a href="https://evilcult.github.io/moviecatcher/">Movie Catcher</a> - 电影美剧搜索及在线观看离线下载软件，借助百度云实现离线下载以及在线播放功能。<a href="https://github.com/EvilCult/moviecatcher"></a></li><li>  <a href="https://natron.fr/">Natron</a> - 开源的视频合成软件，功能与 Adobe After Effects 或者 Nuke 类似。<a href="https://github.com/MrKepzie/Natron"></a></li><li>  <a href="https://www.popcorn-time.to/mac.html">Popcorn Time</a> - 电影播放器，观看 torrent 电影。</li><li>  <a href="https://mafintosh.github.io/playback/">Playback</a> - 实验性质的视频播放器。 <a href="https://github.com/mafintosh/playback"></a></li><li>  <a href="http://perian.org/#download">Perian</a> - 让 QuickTime 播放所有常见格式的免费插件。<a href="https://github.com/MaddTheSane/perian"></a></li><li>  <a href="http://radiant-player.github.io/radiant-player-mac/">Radiant Player</a> - Google Play音乐播放器。<a href="https://github.com/radiant-player/radiant-player-mac"></a> </li><li>  <a href="https://www.sodaplayer.com/">Soda Player</a> - 一款能够直接播放种子、磁力链接、在线视频、自动获取字幕、链接和本地视频文件的播放器。 </li><li>  <a href="https://github.com/sonoramac/Sonora">Sonora</a> - 一个很小的音乐播放器。<a href="https://github.com/sonoramac/Sonora"></a> </li><li>  <a href="http://stringed.buenosapps.com/">Stringed 2</a> - 音频编辑处理工具。<a href="https://itunes.apple.com/cn/app/stringed/id698710517"></a></li><li>  <a href="https://www.shotcut.org/">Shotcut</a> - 免费开源视频编辑器。 <a href="https://github.com/mltframework/shotcut"></a></li><li>  <a href="http://www.telestream.net/screenflow/">ScreenFlow</a> - 屏幕和视频编辑软件。</li><li>  <a href="http://synfig.org/">Synfig Studio</a> - 工业级、强大的 2D 矢量动画制作软件。<a href="https://github.com/synfig/synfig"></a> </li><li>  <a href="https://github.com/kmikiy/SpotMenu">SpotMenu</a> - Spotify 和 iTunes 在状态菜单栏中显示。 <a href="https://github.com/kmikiy/SpotMenu"></a></li><li>  <a href="https://vox.rocks/mac-music-player">VOX Player</a> - 免费全能音乐播放器，撸码之余听听歌是一种享受。</li><li>  <a href="http://www.videolan.org/">VLC</a> - 开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件。<a href="https://github.com/videolan/vlc"></a> </li><li>  <a href="http://tmkk.undo.jp/xld/index_e.html">XLD</a> - 解码/解码/转换/播放各种“无损”音频文件。<a href="https://code.google.com/archive/p/xld/source"></a> </li></ul><h3 id="云音乐播放器"><a href="#云音乐播放器" class="headerlink" title="云音乐播放器"></a>云音乐播放器</h3><ul><li>  <a href="https://github.com/trazyn/ieaseMusic">ieaseMusic</a> 基于网易云音乐 <a href="https://github.com/Binaryify/NeteaseCloudMusicApi"></a></li><li>  <a href="https://y.qq.com/download/index.html">QQ音乐</a> </li><li>  <a href="http://music.163.com/">网易云音乐</a> </li><li>  <a href="http://www.xiami.com/apps/mac">虾米音乐</a> </li><li>  <a href="http://kuwo.cn/down/index">酷我音乐</a> </li><li>  <a href="http://download.kugou.com/mac.html">酷狗音乐</a> </li></ul><h2 id="书签阅读写作"><a href="#书签阅读写作" class="headerlink" title="书签阅读写作"></a>书签阅读写作</h2><ul><li>  <a href="https://agenda.com/">Agenda</a> - 以日期为重点的笔记记录应用程序，用于规划和记录您的项目。<a href="https://itunes.apple.com/cn/app/id1287445660?mt=12"></a></li><li>  <a href="http://www.bear-writer.com/">Bear Writer</a> - 漂亮，灵活的写作应用程序，用于制作笔记和散文。<a href="https://itunes.apple.com/cn/app/bear-beautiful-writing-app/id1091189122"></a></li><li>  <a href="https://boostnote.io/">Boostnote</a> - 为程序员量身定做的笔记应用。<a href="https://github.com/BoostIO/Boostnote"></a></li><li>  <a href="http://chmox.sourceforge.net/">Chmox</a> - 读 chm 文件的软件。</li><li>  <a href="http://www.hewbo.com/chm-reader.html">CHM Reader</a> - 读 chm 文件的软件。</li><li>  <a href="https://github.com/NSGod/ichm">iChm</a> - 读 chm 文件的软件。<a href="https://github.com/NSGod/ichm"></a> </li><li>  <a href="https://joplin.cozic.net/">Joplin</a> - 支持 markdown 的开源记事本和具有同步功能的待办事项列表管理器。 <a href="https://github.com/laurent22/joplin"></a></li><li>  <a href="http://www.amazon.com/gp/help/customer/display.html?nodeId=201246110">Kindle App</a> - 亚马逊 Kindle App 电子书阅读器。</li><li>  <a href="http://klib.me/cn/">Klib</a> - 全新的 Kindle、iBooks 标注管理工具。<a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me"></a></li><li>  <a href="https://marginnote.com/?lang=zh-hans">MarginNote</a> - 一款优秀的 PDF 有标注软件，批注、抽认卡、思维导图、汇总视图等功能。</li><li>  <a href="http://www.pdfreaderpro.com/">PDF Reader Pro</a> - 可以查看，创建，签名，转换和压缩任何 PDF 文档。<a href="https://itunes.apple.com/cn/app/pdf-reader-pro-your-pdf-office/id825459243"></a></li><li>  <a href="https://pdfexpert.com/">PDF Expert</a> - PDF 阅读、批注，编辑文本，添加照片，填写表单。</li><li>  <a href="http://www.qownnotes.org/">QOwnNotes</a> - 是开源记事本，带有 markdown 支持和待办事项列表管理器。 <a href="https://github.com/pbek/QOwnNotes"></a></li><li>  <a href="https://bananafishsoftware.com/products/spillo/">Spillo</a> - 功能强大，美观、快速网络书签网页阅读。</li><li>  <a href="http://skim-app.sourceforge.net/">Skim</a> - PDF 阅读器和笔记本。 <a href="https://sourceforge.net/projects/skim-app/"></a></li><li>  <a href="https://www.texpad.com/">texpad</a> - Mac 下非常棒的 LaTeX 编辑器。 支持自动编译预览，自动补全等。</li><li>  <a href="https://www.momothink.com/wonderpen">WonderPen</a> - 专注于写作的应用，支持 markdown，很多贴心细节，支持长文写作，可导出多种格式。<a href="https://itunes.apple.com/cn/app/wonderpen/id1173437104?l=en&amp;mt=12"></a></li></ul><h3 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h3><ul><li>  <a href="https://www.kde.org/applications/office/">KOffice</a> - 集成化办公套件，包含文字处理器、电子 表格、幻灯片制作、项目管理等多种工具。</li><li>  <a href="https://apps.apple.com/cn/app/keynote/id409183694?mt=12">Keynote 讲演</a> 构建炫目的演示文稿。 <a href="https://apps.apple.com/cn/app/keynote/id409183694?mt=12"></a></li><li>  <a href="https://zh-cn.libreoffice.org/">LibreOffice</a> - 一款功能强大的免费开源办公软件，默认使用开放文档格式，并支持其他多种文档格式。<a href="http://zh-cn.libreoffice.org/download/source-code/"></a> </li><li>  <a href="https://products.office.com/zh-cn/mac">Microsoft Office</a> 微软Office办公套件<a href="https://apps.apple.com/cn/app/numbers/id409203825?mt=12"></a></li><li>  <a href="https://apps.apple.com/cn/app/numbers/id409203825?mt=12">Numbers 表格</a> 创建令人印象深刻的电子表格。 <a href="https://apps.apple.com/cn/app/numbers/id409203825?mt=12"></a></li><li>  <a href="https://apps.apple.com/cn/app/pages/id409201541?mt=12">Pages 文稿</a> 引人注目的文稿。 <a href="https://apps.apple.com/cn/app/pages/id409201541?mt=12"></a></li><li>  <a href="https://www.wps.cn/product/wpsmac/">WPS</a> - 是一套跨平台的办公室软件套件。 </li></ul><h3 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h3><ul><li>  <a href="http://www.rockysandstudio.com/">Leaf</a> - RSS 客户端程序。</li><li>  <a href="https://ranchero.com/netnewswire/">NetNewsWire</a> - 免费的 RSS 阅读器。<a href="https://github.com/brentsimmons/NetNewsWire"></a> </li><li>  <a href="http://readkitapp.com/">ReadKit</a> - 书签 RSS 管理客户端。</li><li>  <a href="http://reederapp.com/">Reeder 4</a> - RSS 服务订阅。</li><li>  <a href="http://viennarss.github.io/">Vienna</a> - RSS/Atom 新闻阅读客户端。<a href="https://github.com/ViennaRSS/vienna-rss"></a> </li><li>  <a href="http://irreader.fatecore.com/">irreader</a> - 多功能的 RSS 阅读器，支持订阅播客和任何网站。</li></ul><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><blockquote><p>A curated list of delightful Markdown stuff.<a href="https://github.com/BubuAnabelas/awesome-markdown#tools"></a></p></blockquote><ul><li>  <a href="https://www.zybuluo.com/">Cmd Markdown</a> - Cmd Markdown 编辑阅读器，支持实时同步预览，区分写作和阅读模式，支持在线存储，分享文稿网址。 </li><li>  <a href="https://github.com/egoist/eme">EME</a> - 最近刚出的一款 Markdown 编辑器，界面很像 Chrome 浏览器的界面，很简约。</li><li>  <a href="https://ia.net/writer/">iA Writer</a> - Markdown 文本预览编辑，注重语法检查，专门为作家提供的编辑器。</li><li>  <a href="http://lightpaper.42squares.in/">LightPaper</a> - 简单的 Markdown 文本编辑器。</li><li>  <a href="https://marp.app/">Marp</a> - Markdown 制作幻灯片编辑器。<a href="https://github.com/yhatt/marp"></a> </li><li>  <a href="http://zh.mweb.im/">MWeb</a> - 专业的 Markdown 写作、记笔记、静态博客生成软件。</li><li>  <a href="http://macdown.uranusjr.com/">MacDown</a> - 一款开源的 Markdown 编辑器，深受<a href="http://25.io/mou/">Mou</a>的影响。 </li><li>  <a href="http://marked2app.com/">Marked 2</a> - Markdown 文本预览编辑，为所有作家提供一套优雅而强大的工具。</li><li>  <a href="http://www.textnutwriter.com/">TextNut</a> - Markdown 编辑器，富文本之间自由切换。</li><li>  <a href="http://www.typora.io/">Typora</a> - 基于 Electron 的“读写一体” Markdown 编辑器。</li><li>  <a href="https://www.ulyssesapp.com/features/">Ulysses</a> - 适用于 Mac，iPad 和 iPhone 的写作应用程序，支持 Markdown。</li><li>  <a href="https://ivarptr.github.io/yu-writer.site/">Yu Writer</a> - 一款能找到写作乐趣的 Markdown 文本编辑器。 </li><li>  <a href="https://maxiang.io/">马克飞象</a> - Markdown 编辑器，提供 Web 端 和 App 端，多种配色，支持同步到 印象笔记。</li></ul><h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><ul><li>  <a href="https://evernote.com/">Evernote</a> - 笔记本应用程序。 </li><li>  <a href="https://www.inkdrop.info/">Inkdrop</a> - Markdown 爱好者的笔记本应用程序。</li><li>  <a href="http://app.leanote.com/">leanote</a> - 支持 Markdown 的一款开源笔记软件，支持直接成为个人博客。<a href="https://github.com/leanote/leanote"></a> </li><li>  <a href="http://www.get-notes.com/">Notes</a> - 简洁的笔记应用。 <a href="https://github.com/nuttyartist/notes"></a></li><li>  <a href="https://www.zoho.com/notebook/notebook-for-mac.html">Notebook</a> 漂亮的笔记本应用程序。 </li><li>  <a href="https://www.onenote.com/">OneNote</a> - 微软备注应用。 </li><li>  <a href="http://happenapps.com/#quiver">Quiver</a> - 程序猿的笔记本。</li><li>  <a href="http://note.youdao.com/">有道云笔记</a> - 支持多目录，Markdown，iWork/Office 预览。</li><li>  <a href="http://www.wiz.cn/download.html">为知笔记</a> - 支持 Markdown，搜集整理图片链接导入文档。</li><li>  <a href="https://www.yuque.com/install/desktop">阿里语雀</a> - 云笔记类知识管理、协作平台，基于Markdown写作，支持内嵌流程图、脑图、时序、代码渲染以及Sketch画板创作，个人知识分享等！相比有道云笔记、印象笔记同类产品，包含其全部的功能以外，支持知识分享以及更强大的创作、协作、编辑器，它来自阿里巴巴蚂蚁金服。</li></ul><h2 id="制作电子书"><a href="#制作电子书" class="headerlink" title="制作电子书"></a>制作电子书</h2><ul><li>  <a href="http://calibre-ebook.com/">Calibre</a> - 丑陋的软件，但强大的软件电子书管理和转换。<a href="https://github.com/kovidgoyal/calibre"></a> </li><li>  <a href="https://sigil-ebook.com/">Sigil</a> - 多平台 EPUB 编辑器。 <a href="https://github.com/Sigil-Ebook/Sigil"></a></li><li>  <a href="https://www.scribus.net/">Scribus</a> - 开源电子杂志制作软件。 <a href="https://sourceforge.net/projects/scribus/"></a></li></ul><h2 id="软件打包工具"><a href="#软件打包工具" class="headerlink" title="软件打包工具"></a>软件打包工具</h2><ul><li>  <a href="http://appjs.com/">AppJS</a> - 使用 JS、HTML 和CSS 构建跨平台的桌面应用程序。<a href="https://github.com/appjs/appjs"></a> </li><li>  <a href="https://github.com/AlloyTeam/webtop">AlloyDesktop</a> - 同上，腾讯出品，给个差评。<a href="https://github.com/AlloyTeam/webtop"></a> </li><li>  <a href="https://github.com/sindresorhus/create-dmg">create-dmg</a> - 快速创建一个压缩镜像文件。 <a href="https://github.com/sindresorhus/create-dmg"></a></li><li>  <a href="https://electronjs.org/">Electron</a> - 前身是 AtomShell，使用 JS、HTML 和 CSS 构建跨平台的桌面应用程序。<a href="https://github.com/electron/electron"></a> </li><li>  <a href="https://github.com/pojala/electrino">Electrino</a> - 使用 JS、HTML 和 CSS 构建跨平台的桌面应用程序，构建出的应用体积比 Electron 小。<a href="https://github.com/pojala/electrino"></a> </li><li>  <a href="https://johnste.github.io/finicky/">Finicky</a> - Web 应用程序转化为苹果的应用程序。<a href="https://github.com/johnste/finicky"></a> </li><li>  <a href="http://hex.youdao.com/zh-cn/index.html">HEX</a> - 使用 JS、HTML 和 CSS 构建跨平台的桌面应用程序，有道出品。<a href="https://github.com/netease-youdao/hex"></a> </li><li>  <a href="http://ionicframework.com/">ionic</a> - 一个用来开发混合手机应用的，开源的，免费的代码库。 <a href="https://github.com/driftyco/ionic"></a></li><li>  <a href="http://nwjs.io/">nw.js</a> - 使用 HTML 和 JavaScript 来制作桌面应用。<a href="https://github.com/nwjs/nw.js"></a> </li><li>  <a href="http://macgapproject.github.io/">MacGap</a> - 桌面 WebKit 打包 HTML、CSS、JS 应用。<a href="https://github.com/MacGapProject"></a> </li><li>  <a href="http://reactdesktop.js.org/">react-desktop</a> - 为 macOS Sierra带来 React UI 组件。<a href="https://github.com/gabrielbull/react-desktop"></a> </li><li>  <a href="https://microsoft.github.io/reactxp/">ReactXP</a> - 微软官方出品，支持平台 Web，iOS，Android 和 Windows UWP 仍然是一项正在进行的工作。<a href="https://github.com/microsoft/reactxp"></a> </li><li>  <a href="https://github.com/ptmt/react-native-desktop">React Native macOS</a> - 用 React Native 技术构建 OS X 下的桌面应用程序。<a href="https://github.com/ptmt/react-native-desktop"></a> </li><li>  <a href="https://github.com/CanonicalLtd/react-native">React Native Desktop for Ubuntu</a> - 用 React Native 技术构建 Ubuntu 下的桌面应用程序。<a href="https://github.com/CanonicalLtd/react-native"></a> </li></ul><h2 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h2><ul><li>  <a href="https://aria2.github.io/">aria2</a> - 一款支持多种协议的轻量级命令行下载工具。<a href="https://github.com/aria2"></a> </li><li>  <a href="https://software.charliemonroe.net/downie.php">Downie</a> - 支持多达近 1200 个视频站点的视频下载工具。</li><li>  <a href="http://www.freedownloadmanager.org/">Free Download Manager</a> - 功能强大的下载加速器。</li><li>  <a href="http://mac.eltima.com/download-manager.html">FOLX</a> - 一个 Mac osx 系统风格界面的下载管理工具。 </li><li>  <a href="http://jdownloader.org/">JDownloader</a> - 下载工具，下载文件的一键式托管。</li><li>  <a href="https://motrix.app/">Motrix</a> - Motrix 是一款全能的下载工具，支持下载 HTTP、FTP、BT、磁力链、百度网盘等资源。 <a href="https://github.com/agalwood/Motrix"></a></li><li>  <a href="https://www.qbittorrent.org/">qBittorrent</a> - 一个替代 μTorrent 的开源软件。 <a href="https://github.com/qbittorrent/qBittorrent"></a></li><li>  <a href="https://www.transmissionbt.com/">Transmission</a> - 免费的 BitTorrent 客户端 <a href="https://github.com/transmission/transmission"></a></li><li>  <a href="https://you-get.org/">You-Get</a> - 网络富媒体命令行下载工具。<a href="https://github.com/soimort/you-get"></a> </li></ul><h2 id="网盘"><a href="#网盘" class="headerlink" title="网盘"></a>网盘</h2><p><em>推荐一些有Mac客户端的网盘。</em></p><ul><li>  <a href="http://pc.115.com/">115</a> - 115 云客户端。</li><li>  <a href="http://www.dropboxchina.com/Download/dropbox-for-mac.html">Dropbox</a> - 非常好用的免费网络文件同步工具，提供在线存储服务。</li><li>  <a href="https://nextcloud.com/">NextCloud</a> - 基于 ownCloud 完全开源免费开源，企业文件同步和共享。 </li><li>  <a href="https://mega.nz/">Mega</a> - 免费的云服务，提供 50GB 的免费存储空间。</li><li>  <a href="https://www.seafile.com/">Seafile</a> - 是由国内团队开发的国际化的开源云存储软件项目。</li><li>  <a href="https://owncloud.org/">ownCloud</a> - 私有云网盘。</li><li>  <a href="http://pan.baidu.com/download?from=header#pan">百度云</a> - 百度云客户端。</li><li>  <a href="https://www.weiyun.com/">腾讯微云</a> - 腾讯云客户端。</li><li>  <a href="https://www.jianguoyun.com/s/downloads">坚果云</a> - 坚果云客户端。</li><li>  <a href="https://www.fangcloud.com/">亿方云</a> - 硅谷团队打造，个人免费。</li></ul><h2 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h2><ul><li>  <a href="https://github.com/utatti/kawa">Kawa</a> - 给每个输入法定义一个快捷键. <a href="https://github.com/utatti/kawa"></a></li><li>  <a href="http://rime.im/">RIME</a> - 中州韻輸入法引擎。<a href="https://github.com/rime"></a> </li><li>  <a href="http://matthewpalmer.net/rocket/">Rocket</a> - 使用冒号快捷键可以更快捷地输入表情符号。</li><li>  <a href="http://matthewpalmer.net/rocket/">Type2Phone</a> - 把 Macbook 键盘变为 iPhone 的蓝牙键盘。<a href="https://itunes.apple.com/cn/app/type2phone-bluetooth-keyboard/id472717129?mt=12"></a></li><li>  <a href="http://www.glamtime.com.cn/product/wbim">WBIM</a> - 五笔输入法。<a href="https://itunes.apple.com/cn/app/wbim-%E5%86%99%E5%AD%97%E6%9D%BF/id929844708?mt=12"></a></li><li>  <del><a href="http://qq.pinyin.cn/">QQ输入法</a> - 腾讯出品的输入法。</del></li><li>  <a href="http://pinyin.sogou.com/mac/">搜狗输入法</a> - 搜狗输入法。</li><li>  <a href="https://srf.baidu.com/input/mac.html">百度输入法</a> - 支持拼音五笔输入。</li><li>  <a href="https://im.logcg.com/loginputmac">落格输入法</a> - 打破 Mac 双拼多年来的窘境。</li><li>  <a href="https://www.omicronlab.com/iavro.html">iAvro</a> - 孟加拉语输入法。 <a href="https://github.com/torifat/iAvro"></a></li><li>  <a href="https://qingg.im/index.html">清歌五笔输入法</a> - 为 iOS 和 Mac 专门打造的五笔输入法。</li><li>  <a href="https://itunes.apple.com/cn/app/yan-wen-zi/id914708191?mt=12">颜文字</a> - 颜文字输入。</li><li>  <a href="https://github.com/dongyuwei/hallelujahIM">哈利路亚英文输入法</a> - 智能英文输入法，具备自动补全，自动纠错功能。 </li></ul><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><p><em>这里放Mac的浏览器应用</em></p><ul><li>  <a href="https://brave.com/">Brave</a> - 用 Brave 浏览更快更安全。 </li><li>  <a href="http://www.google.cn/chrome/browser/">Chrome</a> - Chrome 浏览器谷歌出品。</li><li>  <a href="http://www.firefox.com.cn/">Firefox</a> - 迎接 Firefox Quantum。快，只为更好。火狐浏览器。</li><li>  <a href="http://www.apple.com/cn/safari/">Safari</a> - Mac 预装自带浏览器。<a href="https://github.com/learn-anything/safari-extensions#readme"></a></li><li>  <a href="http://www.opera.com/zh-cn">Opera</a> - Opera 浏览器。</li><li>  <a href="http://browser.qq.com/mac/">QQ浏览器</a> - QQ 浏览器－腾讯出品。</li><li>  <a href="https://vivaldi.com/">Vivaldi</a> - Opera 开发商出品新的浏览器。</li><li>  <a href="http://oryoki.io/">Ōryōki</a> - 小的 web 浏览器。这是一个试验性的项目，目前正在开发中</li><li>  <a href="http://www.maxthon.cn/mac/">傲游云浏览器</a> - 傲游云浏览器。</li><li>  <a href="https://browser.360.cn/ee/mac/index.html">360极速浏览器</a> - 更好用，不将就。</li></ul><h2 id="翻译工具"><a href="#翻译工具" class="headerlink" title="翻译工具"></a>翻译工具</h2><ul><li>  <a href="http://cidian.youdao.com/multi.html">有道翻译</a> - 有道词典桌面版。</li><li>  <a href="http://cidian.dict.cn/mac.html">辞海词典</a> - 学单词、背单词、辞海词典。</li><li>  <a href="http://www.eudic.net/eudic/mac_dictionary.aspx">eudic</a> - 欧路词典词典。</li><li>  <a href="https://app.grammarly.com/">Grammarly</a> - 修正英语语法及用语</li><li>  <a href="https://toolinbox.net/iText/">iText</a> - 截图识别文字、翻译<a href="https://itunes.apple.com/cn/app/id1314980676?mt=12"></a></li><li>  <a href="http://www.itranslate.com/">iTranslate</a> - 支持全世界超过 80 种语言发音和输出。</li><li>  <a href="https://ludwig.guru/">Ludwig</a> - 语言搜索引擎，可帮助您用英语写得更好。</li><li>  <a href="http://translate-tab.com/">Translate Tab</a> - 菜单栏翻译插件，封装了谷歌翻译，支持自动识别语言。</li><li>  <a href="https://github.com/ripperhe/Bob">Bob</a> - 简小好用的翻译工具，支持语言自动检测，截图翻译。<a href="https://github.com/ripperhe/Bob"></a></li><li>  <a href="https://translatium.app/">Translatium</a> - 在 100 多种语言之间翻译单词、短语和图像，并提供字典、音译和语音输出支持。<a href="https://github.com/webcatalog/translatium-desktop"></a><a href="https://itunes.apple.com/us/app/translatium/id1547052291"></a></li></ul><h2 id="安全工具"><a href="#安全工具" class="headerlink" title="安全工具"></a>安全工具</h2><ul><li>  <a href="https://objective-see.com/products/blockblock.html">BlockBlock</a> - 恶意软件会自行安装，以确保它在重新引导时自动重新执行。</li><li>  <a href="https://objective-see.com/products/dhs.html">Dylib Hijack Scanner</a> - Dylib 劫机扫描仪或 DHS，是一个简单的实用程序，将扫描您的计算机的应用程序是易受 dylib 劫持或被劫持。</li><li>  <a href="https://macpaw.com/encrypto">Encrypto</a> - 免费加密工具，用于加密文件和文件夹</li><li>  <a href="https://objective-see.com/products/kextviewr.html">KextViewer</a> - 查看所有在 OS 内核中加载的模块。</li><li>  <a href="https://objective-see.com/products/knockknock.html">KnockKnock</a> - “谁在那？” 查看Mac上持久安装的内容。</li><li>  <a href="https://github.com/halo/LinkLiar">LinkLiar</a> - 可以帮助你哄骗 Wi-Fi 和以太网接口的 MAC 地址。 <a href="https://github.com/halo/LinkLiar"></a></li><li>  <a href="https://objective-see.com/products/lulu.html">LuLu</a> - 免费的macOS防火墙，旨在阻止未经授权（传出）的网络流量。 <a href="https://www.tinc-vpn.org/git/browse?p=tinc"></a></li><li>  <a href="https://objective-see.com/products/oversight.html">OverSight</a> - 监控 Mac 的麦克风和网络摄像头，当内部麦克风被激活，或者当进程访问摄像头时提醒用户。</li><li>  <a href="https://objective-see.com/products/ransomwhere.html">RansomWhere?</a> - 通用 Ransomware 检测。</li><li>  <a href="https://objective-see.com/products/taskexplorer.html">TaskExplorer</a> - 使用 TaskExplorer 探索在 Mac 上运行的所有任务（进程）。</li><li>  <a href="https://objective-see.com/products/whatsyoursign.html">What’s Your Sign?</a> - 验证文件的加密签名可以推断其来源或可信度。</li></ul><h2 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h2><p><em>假设你是个勤奋的同学，你总有一天会强烈需要它们，上帝保佑他们吧。</em></p><ul><li>  <a href="https://github.com/trailofbits/algo">Algo</a> - 在云中设置个人 IPSEC VPN。<a href="https://github.com/trailofbits/algo"></a></li><li>  <a href="https://github.com/yichengchen/clashX">ClashX</a> - 基于 clash 的一款支持规则过滤的科学上网工具。 <a href="https://github.com/yichengchen/clashX"></a></li><li>  <a href="https://www.freevpn.pw/mac-vpn">FreeVPN Plus</a> - 永不过期 Mac 免费VPN。 </li><li>  <a href="https://github.com/yinghuocho/firefly-proxy">Firefly 萤火虫</a> - 免费科学上网。</li><li>  <a href="https://github.com/OldFrank/GoAgentX">GoAgentX</a> - 科学上网。<a href="https://github.com/getlantern/lantern"></a> </li><li>  <a href="http://www.jsqgtx.cc/DownLoad">GTX加速器</a> - 每天签到领取 500M 流量。</li><li>  <a href="https://getlantern.org/">Lantern</a> - 科学上网。<a href="https://github.com/getlantern/lantern"></a> </li><li>  <a href="https://www.locovpn.co/mannul/">LoCoVPN</a> - 每天签到可获得 2 小时免费VPN加速。</li><li>  <a href="https://github.com/zhuhaow/SpechtLite">SpechtLite</a> - 支持 Shadowsocks 及规则管理的高效率代理。<a href="https://github.com/shadowsocks"></a> </li><li>  <a href="http://shadowsocks.org/">ShadowsocksX</a> - 一个快速的隧道代理，可以帮助你绕过防火墙。<a href="https://github.com/shadowsocks"></a> </li><li>  <a href="https://github.com/qiuyuzhou/ShadowsocksX-NG">ShadowsocksX-NG</a> - 一款 ShadowsocksX 客户端软件。<a href="https://github.com/qiuyuzhou/ShadowsocksX-NG"></a> </li><li>  <a href="https://nssurge.com/">Surge</a> - 科学上网。</li><li>  <a href="https://www.shimovpn.com/">Shimo</a> - 连接大量 VPN 的应用</li><li>  <a href="https://www.tunnelbear.com/">Tunnelbear</a> - 简单的私人 VPN。 </li><li>  <a href="https://tunnelblick.net/downloads.html">Tunnelblick</a> - OpenVPN 的免费软件。</li><li>  <a href="https://www.tinc-vpn.org/">tinc</a> - VPN 软件. <a href="https://www.tinc-vpn.org/git/browse?p=tinc"></a></li><li>  <a href="https://www.v2ray.com/">V2Ray</a> - 原生支持 Socks、HTTP、Shadowsocks、VMess 等协议。</li><li>  <a href="https://github.com/yanue/V2rayU">V2rayU</a> - 一款 v2ray 客户端软件。<a href="https://github.com/yanue/V2rayU"></a> </li><li>  <a href="http://www.2-vpn4.cc/home.action">二师兄VPN</a> - 提供无限流量、无限续期免费 VPN 账号。</li><li>  <a href="http://fengchinet2.com/">风驰VPN</a> - 无限流量、无限续期的免费 VPN 加速服务。</li></ul><h2 id="其它实用工具"><a href="#其它实用工具" class="headerlink" title="其它实用工具"></a>其它实用工具</h2><ul><li>  <a href="https://github.com/fancymax/12306ForMac">12306ForMac</a> - Mac 版 12306 订票/检票助手。<a href="https://github.com/fancymax/12306ForMac"></a> </li><li>  <a href="https://1440app.com/">1440 Minutes Left Today</a> - 在菜单栏中，直接记录到一天结束还剩多少分钟。<a href="https://apps.apple.com/cn/app/1440/id1483764819"></a></li><li>  <a href="http://www.airserver.com/Download">AirServer</a> - 将手机投影到电脑上。</li><li>  <a href="https://www.alfredapp.com/">Alfred</a> - 效率神器。<a href="https://github.com/learn-anything/alfred-workflows#readme"></a></li><li>  <a href="https://getbitbar.com/">BitBar</a> - 支持使用各种语言将信息展示到Mac OS的菜单栏。<a href="https://github.com/matryer/bitbar"></a> </li><li>  <a href="https://macitbetter.com/">BetterZip 3</a> - 压缩解压缩工具支持格式 ZIP、TAR、TGZ、TBZ、TXZ (new)、7-ZIP、RAR。</li><li>  <a href="https://boastr.net/">BetterTouchTool</a> - 代替默认的系统操作方式（组合键、修饰键、手势等）。</li><li>  <a href="https://hluk.github.io/CopyQ">CopyQ</a> - 高级功能剪贴板管理工具。 <a href="https://github.com/hluk/CopyQ"></a></li><li>  <a href="http://www.controlplaneapp.com/">ControlPlane</a> - 自定义 Mac 情景模式。某些场景让 Mac 自动静音或是自动打开 Mail 客户端等等。<a href="https://github.com/dustinrue/ControlPlane"></a> </li><li>  <a href="http://www.clipmenu.com/">ClipMenu</a> - 一个剪贴板操作的管理器。<a href="https://github.com/naotaka/ClipMenu"></a> </li><li>  <a href="https://clipy-app.com/">Clipy</a> - 基于 ClipMenu 继续开发的强大的剪切板管理器。 <a href="https://github.com/Clipy/Clipy"></a></li><li>  <a href="https://www.mediaatelier.com/CheatSheet/">CheatSheet</a> - CheatSheet 是一款 Mac 上的非常实用的快捷键快速提醒工具。 </li><li>  <a href="https://daisydiskapp.com/">DaisyDisk</a> - 磁盘空间使用扫描工具。</li><li>  <a href="https://github.com/greenboxal/dns-heaven">DNS Heaven</a> - 可以令基于 glibc 的 macOS 应用直接使用原生栈来解析 DNS，主要适用于 VPN。 <a href="https://github.com/greenboxal/dns-heaven"></a></li><li>  <a href="http://ezip.awehunt.com/">eZip</a> - 界面简洁，功能完善，支持主流的多种压缩格式。支持 Mojave 深色模式、QuickLook预览、拖拽解压。 </li><li>  <a href="https://justgetflux.com/">f.lux</a> - 自动调整您的电脑屏幕，以匹配亮度。</li><li>  <a href="http://www.hammerspoon.org/">Hammerspoon</a> - 功能强大的自动化工具，Lua 脚本驱动，支持窗口管理。<a href="https://github.com/Hammerspoon/hammerspoon"></a> </li><li>  <a href="http://www.httrack.com/">HTTrack</a> - 可以下载整个网站和离线浏览。</li><li>  <a href="https://github.com/niw/HapticKey/releases">HapticKey</a> - Touch Bar 触觉反馈。 <a href="https://github.com/niw/HapticKey"></a></li><li>  <a href="https://sourceforge.net/projects/hwsensors">HWSensors</a> - 自带FakeSMC的黑苹果硬件状态监控插件。 <a href="https://bitbucket.org/kozlek/hwsensors/overview"></a></li><li>  <a href="https://zhengying.github.io/hungrymark">Hungrymark</a> - 非常有用的收藏夹应用，收藏文件，文件夹，网址，快速的通过状态栏菜单访问这些书签。<a href="https://apps.apple.com/cn/app/hungrymark/id1482778901?l=en&amp;mt=12"></a></li><li>  <a href="https://bjango.com/mac/istatmenus/">iStat pro</a> - 免费的 Mac OS 电脑硬件信息检测软件。</li><li>  <a href="https://www.mowglii.com/itsycal/">Itsycal</a> - 一款简洁实用的开源日历工具。<a href="https://github.com/sfsam/itsycal"></a> </li><li>  <a href="https://pqrs.org/osx/karabiner/">Karabiner</a> - 一个强大的和稳定的 OS X 的键盘定制。<a href="https://github.com/tekezo/Karabiner"></a> </li><li>  <a href="http://www.keyboardmaestro.com/">Keyboard Maestro</a> - 根据键盘，菜单，位置，添加的设备等触发器自动执行日常操作。</li><li>  <a href="http://keytty.com/">Keytty</a> - 让你通过键盘使用鼠标。</li><li>  <a href="https://www.keka.io/">Keka</a> - 一个免费的 macOS 文件解压缩程序。 <a href="https://github.com/aonez/Keka"></a><a href="https://itunes.apple.com/app/keka/id470158793"></a></li><li>  <a href="https://sindresorhus.com/lungo">Lungo</a> - 防止Mac进入睡眠状态。<a href="https://apps.apple.com/cn/app/lungo/id1263070803"></a></li><li>  <a href="http://memo-app.net/">Memo</a> - 给你的便笺加个密。<a href="https://itunes.apple.com/app/id1212409035"></a></li><li>  <a href="https://manta.life/">Manta</a> - 灵活的发票桌面应用程序，漂亮和可定制模板。<a href="https://github.com/hql287/Manta"></a> </li><li>  <a href="https://mos.caldis.me/">Mos</a> - 让你的鼠标滚轮丝滑如触控板。<a href="https://github.com/Caldis/Mos"></a> </li><li>  <a href="https://github.com/kaunteya/MacCacheCleaner">Mac Cache Cleaner</a> - 缓存清理工具 <a href="https://github.com/kaunteya/MacCacheCleaner"></a></li><li>  <a href="http://numi.io/">Numi</a> - 漂亮的计算器应用。</li><li>  <a href="https://www.macupdate.com/app/mac/37991/nosleep">NoSleep</a> - 合上盖子不休眠，可根据是否连接电源单独设置。</li><li>  <a href="http://openemu.org/">openEmu</a> - 模拟器，可以玩魂斗罗之类，轻松回到小时候。<a href="https://github.com/OpenEmu/OpenEmu"></a> </li><li>  <a href="https://www.omnigroup.com/more">OmniDiskSweeper</a> - 磁盘空间使用扫描工具。 </li><li>  <a href="https://www.omnigroup.com/omniplan/">OmniPlan</a> - 项目管理软件。</li><li>  <a href="http://pasteapp.me/">Paste</a> - 智能剪贴板历史片段管理。 <a href="https://itunes.apple.com/us/app/paste-clipboard-history-manager/id967805235"></a></li><li>  <a href="https://tapbots.com/pastebot/">PasteBot</a> - 强大的剪贴板管理器。<a href="https://itunes.apple.com/us/app/pastebot/id1179623856"></a></li><li>  <a href="https://github.com/JulianKahnert/PDF-Archiver">PDF Archiver</a> - 一个用于标记和归档任务的好工具。<a href="https://github.com/JulianKahnert/PDF-Archiver"></a><a href="https://itunes.apple.com/app/pdf-archivar/id1352719750"></a></li><li>  <a href="https://qotoqot.com/qbserve/">Qbserve</a> - 观察你如何度过你的时间。</li><li>  <a href="https://www.rescuetime.com/">RescueTime</a> - 个人分析服务，向您展示如何花时间和提供工具来帮助您提高工作效率。</li><li>  <a href="http://indragie.com/snap">Snap</a> - 一款可以给 Dock 上的程序添加快捷键的小工具。 <a href="https://itunes.apple.com/cn/app/id418073146"></a></li><li>  <a href="https://github.com/jamieweavis/streaker">Streaker</a> - GitHub贡献和统计跟踪菜单栏应用程序。<a href="https://github.com/jamieweavis/streaker"></a></li><li>  <a href="https://theunarchiver.com/">The Unarchiver</a> - 解压许多不同种类的归档压缩文件。 <a href="https://bitbucket.org/kosovan/theunarchiver"></a></li><li>  <a href="https://timingapp.com/">Timing</a> - Mac 的自动时间和生产力跟踪。</li><li>  <a href="http://scripts.sil.org/ukelele">Ukelele</a> - Unicode 键盘布局编辑器。</li><li>  <a href="https://github.com/insidegui/WWDC">WWDC</a> - Mac OS 的非官方的 WWDC APP。<a href="https://github.com/insidegui/WWDC"></a> </li><li>  <a href="http://xscopeapp.com/">xScope</a> - 测量、检查和测试屏幕上的图形和布局的工具。搜索你的苹果和网络，快速打开应用程序。</li></ul><h3 id="剪贴板工具"><a href="#剪贴板工具" class="headerlink" title="剪贴板工具"></a>剪贴板工具</h3><ul><li>  <a href="http://www.clipmenu.com/">ClipMenu</a> - 一个剪贴板操作的管理器。<a href="https://github.com/naotaka/ClipMenu"></a> </li><li>  <a href="https://hluk.github.io/CopyQ">CopyQ</a> - 高级功能剪贴板管理工具。 <a href="https://github.com/hluk/CopyQ"></a></li><li>  <a href="https://en.toolinbox.net/iPaste">iPaste</a> - 轻巧高效的剪贴板工具。 <a href="https://itunes.apple.com/app/id1056935452?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPaste_me"></a></li><li>  <a href="http://pasteapp.me/">Paste</a> - 智能剪贴板历史片段管理。 <a href="https://itunes.apple.com/cn/app/paste-clipboard-history-manager/id967805235"></a></li><li>  <a href="https://tapbots.com/pastebot/">PasteBot</a> - 强大的剪贴板管理器。<a href="https://itunes.apple.com/cn/app/pastebot/id1179623856"></a></li></ul><h3 id="菜单栏工具"><a href="#菜单栏工具" class="headerlink" title="菜单栏工具"></a>菜单栏工具</h3><ul><li>  <a href="https://github.com/beardedspice/beardedspice">BeardedSpice</a> - 允许您使用 Mac 键盘上的媒体键控制基于Web的媒体播放器（SoundCloud，YouTube 等）和一些本机应用程序。 <a href="https://github.com/beardedspice/beardedspice"></a></li><li>  <a href="https://www.macbartender.com/">Bartender</a> - 组织或隐藏Mac上的菜单栏图标。</li><li>  <a href="https://getbitbar.com/">BitBar</a> - 支持使用各种语言将信息展示到 Mac OS 的菜单栏。<a href="https://github.com/matryer/bitbar"></a> </li><li>  <a href="https://github.com/Moneypulation/iGlance">iGlance</a> - 状态栏的系统监视器。<a href="https://github.com/Moneypulation/iGlance"></a><a href="https://github.com/Moneypulation/iGlance"></a></li><li>  <a href="https://www.mowglii.com/itsycal/">Itsycal</a> - 一款简洁实用的开源日历工具。<a href="https://github.com/sfsam/itsycal"></a> </li><li>  <a href="http://vanilla.matthewpalmer.net/">Vanilla</a> - 隐藏系统菜单栏。 </li><li>  <a href="https://github.com/dwarvesf/hidden">HiddenBar</a> - 一个超轻MacOS实用工具，帮助隐藏菜单栏图标。。 <a href="https://github.com/dwarvesf/hidden"></a><a href="https://apps.apple.com/cn/app/hidden-bar/id1452453066?mt=12"></a></li></ul><h3 id="待办事项工具"><a href="#待办事项工具" class="headerlink" title="待办事项工具"></a>待办事项工具</h3><ul><li>  <a href="http://www.2doapp.com/">2Do</a> - 比较好的 TODO 应用程序。</li><li>  <a href="http://www.shauninman.com/archive/2016/10/20/day_o_2_mac_menu_bar_clock">Day-O 2</a> - 菜单日历更换内置日历。</li><li>  <a href="https://flexibits.com/fantastical">Fantastical</a> - 日历应用程序，你将管理好生活。</li><li>  <a href="https://masterbuilders.io/">Focus</a> - 一个漂亮的番茄工作法为基础的时间管理工具。<a href="https://itunes.apple.com/cn/app/focus-productivity-timer/id777233759?mt=12"></a></li><li>  <a href="https://todo.microsoft.com/">Microsoft To-Do</a> - 任务管理工具微软出品。 <a href="https://apps.apple.com/cn/app/microsoft-to-do/id1274495053?mt=12"></a></li><li>  <a href="https://nozbe.com/">Nozbe</a> - 适用于个人和团队的强大GTD应用程序，支持每个Apple设备。<a href="https://itunes.apple.com/cn/app/nozbe-tasks-projects-team/id508957583?mt=12"></a></li><li>  <a href="https://www.omnigroup.com/omnifocus/">OmniFocus</a> - 由 OmniGroups 制作的 Nice GTD 应用程序。</li><li>  <a href="https://www.taskade.com/">Taskade</a> - 实时协作编辑器，协作简历任务管理器，大纲和笔记。</li><li>  <a href="https://www.taskpaper.com/">TaskPaper</a> - 漂亮的纯文本任务列表。</li><li>  <a href="https://culturedcode.com/things/">Things</a> - 令人愉快且易于使用的任务管理器。</li><li>  <a href="https://todoist.com/mac">Todoist</a> - 跨平台的任务管理器与移动应用程序。</li><li>  <a href="https://www.wunderlist.com/?ncr=1">Wunderlist</a> - 奇妙清单跨平台的任务管理器与移动应用程序。</li><li>  <a href="https://www.dida365.com/">滴答清单</a> - 轻便且强大的跨平台任务管理应用。<a href="https://itunes.apple.com/cn/app/id966085870"></a></li></ul><h3 id="系统相关工具"><a href="#系统相关工具" class="headerlink" title="系统相关工具"></a>系统相关工具</h3><ul><li>  <a href="https://itunes.apple.com/cn/app/amphetamine/id937984704">Amphetamine</a> - 覆盖您的节能设置并让您的Mac保持清醒状态。 <a href="https://itunes.apple.com/cn/app/amphetamine/id937984704"></a></li><li>  <a href="http://freemacsoft.net/appcleaner/">AppCleaner</a> - 一个小应用程序，让你彻底卸载不需要的应用程序。</li><li>  <a href="http://onnati.net/apptrap/">AppTrap</a> - 删除APP的同时移除文件。 <a href="https://github.com/kvijayan/AppTrap"></a></li><li>  <a href="https://github.com/waylybaye/XcodeCleaner">Cleaner for Xcode</a> - Xcode 的清理工具，清理几十G应该不是问题。<a href="https://github.com/waylybaye/XcodeCleaner"></a> </li><li>  <a href="https://coolantformac.com/">Coolant</a> - 这是能让你知道什么应用程序造成你 CPU100% 让 Mac 电脑过热电池耗尽的菜单应用程序。</li><li>  <a href="https://www.coconut-flavour.com/coconutbattery/">coconutBattery</a> - 显示Mac中有关电池的实时信息。</li><li>  <a href="https://daisydiskapp.com/">DaisyDisk</a> - 磁盘空间使用扫描工具。</li><li>  <a href="http://fruitjuiceapp.com/">FruitJuice</a> - 会让你知道每天保持不插电的时间，以保持你的电池健康。<a href="https://itunes.apple.com/cn/app/fruitjuice/id671736912"></a></li><li>  <a href="https://gfx.io/">gfxCardStatus</a> - 控制Mac独立显卡与集成显卡之间的切换。</li><li>  <a href="http://www.smartisan.com/apps/handshaker">HandShaker</a> - Mac 电脑上也可以方便自如地管理您在 Android 手机中的内容。 </li><li>  <a href="http://zythum.sinaapp.com/youkuhtml5playerbookmark/">HTML5 Player</a> - Chrome 插件解决中国视频网站播放视频电脑发热的情况。</li><li>  <a href="https://bjango.com/mac/istatmenus/">iStat Menus</a> - 菜单栏上的高级 Mac 系统监视器。</li><li>  <a href="https://github.com/Chris911/iStats">iStats</a> - iStats 是一个可以让你快速查看电脑 CPU 温度，磁盘转速和电池等信息的命令行工具。<a href="https://github.com/Chris911/iStats"></a></li><li>  <a href="https://github.com/brianmichel/Juice">Juice</a> - 让电池显示更有趣 <a href="https://github.com/brianmichel/Juice"></a></li><li>  <a href="https://github.com/newmarcel/KeepingYouAwake">KeepingYouAwake</a> - 替代咖啡因，更好地支持Mac中的暗模式。<a href="https://github.com/newmarcel/KeepingYouAwake"></a></li><li>  <a href="http://www.monityapp.com/">Monity</a> - 帮助用户实时监控系统的一款非常漂亮的软件。</li><li>  <a href="http://enjoygineering.com/mounty/">Mounty</a> - NTFS 分区读写组件。</li><li>  <a href="https://nitroshare.net/">NitroShare</a> - 跨平台网络文件传输应用程序。 <a href="https://github.com/nitroshare/nitroshare-desktop"></a></li><li>  <a href="http://www.titanium.free.fr/">OnyX</a> - 多功能实用工具来验证磁盘和文件，运行清洁和系统维护任务，配置隐藏选项等。</li><li>  <a href="https://www.omnigroup.com/more">OmniDiskSweeper</a> - 磁盘空间使用扫描工具。 </li><li>  <a href="https://www.paragon-software.com/home/ntfs-mac/">Paragon NTFS</a> - 在 Mac OS X 中完全读写、修改、访问 Windows NTFS 硬盘、U 盘等外接设备的文件。</li><li>  <a href="http://portingkit.com/">Porting Kit</a> - 在Mac中安装Windows®游戏。 </li><li>  <a href="https://codinn.com/products/ssh-tunnel/">SSH Tunnel</a> - 管理你的 SSH。</li><li>  <a href="https://www.tunabellysoftware.com/tgpro/">TG Pro</a> - 温度监控，风扇控制和硬件诊断，帮助您保持 Mac的 凉爽和健康。</li><li>  <a href="http://www.tuxera.com/products/tuxera-ntfs-for-mac/">Tuxera NTFS</a> - Mac 上的 NTFS 文件系统驱动。</li><li>  <a href="https://lemon.qq.com/">腾讯柠檬清理</a> - 一款免费的Mac系统清理软件，替代原来的Mac电脑管家，腾讯出品。</li></ul><h3 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h3><ul><li>  <a href="http://ianyh.com/amethyst/">Amethyst</a> - 窗口管理器（自动保持窗口大小的窗口）。<a href="https://github.com/ianyh/Amethyst"></a> </li><li>  <a href="https://folivora.ai/bettersnaptool/">BetterSnapTool</a> - 窗口管理工具，可通过快捷键或窗口拖动快速实现分屏。<a href="https://itunes.apple.com/cn/app/dashlane-password-manager/id552383089"></a></li><li>  <a href="https://contexts.co/">Contexts</a>- 提供比 Mac 原生 Dock 更强大功能尤其在你有多个屏幕的时候,它可以帮助你更快捷切换。</li><li>  <a href="http://mizage.com/divvy/">Divvy</a> - 凭借其惊人的 Divvy Grid 系统，窗口管理处于最佳状态。</li><li>  <a href="https://mightymac.app/intellidock/">IntelliDock</a> - 自动隐藏 Dock。</li><li>  <a href="http://manytricks.com/moom/">Moom</a> - 多任务多窗口的软件。</li><li>  <a href="http://magnet.crowdcafe.com/">Magnet</a> - 一个窗口管理器，可以保持工作空间的组织。<a href="https://itunes.apple.com/cn/app/id441258766"></a></li><li>  <a href="https://github.com/fikovnik/ShiftIt">ShiftIt</a> - 窗口位置和大小管理软件。 <a href="https://github.com/fikovnik/ShiftIt"></a></li><li>  <a href="https://github.com/jigish/slate">Slate</a> - 窗口管理器，可用 JavaScript 写配置。<a href="https://github.com/jigish/slate"></a> </li><li>  <a href="http://www.irradiatedsoftware.com/sizeup/">SizeUp</a> - 强大的，以键盘为中心的窗口管理。</li><li>  <a href="https://www.spectacleapp.com/">Spectacle</a> - 简单的移动和调整大小的窗口，和可定制的键盘快捷键。 <a href="https://github.com/eczarny/spectacle"></a></li><li>  <a href="http://totalspaces.binaryage.com/">Total Spaces</a> - 像 ubuntu 一样提供窗口管理，为工作区创建热键，使您可以轻松移动。</li></ul><h3 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h3><ul><li>  <a href="https://1password.com/">1password</a> - 跨平台帐号密码管理软件。</li><li>  <a href="https://authy.com/">Authy</a> - 双因素身份验证令牌管理器，可在您的设备上进行备份和同步。 </li><li>  <a href="https://bitwarden.com/">Bitwarden</a> - 适用于Mac OS，iOS和浏览器的开源密码管理工具。 <a href="https://github.com/bitwarden"></a></li><li>  <a href="https://buttercup.pw/">Buttercup</a> - 跨平台密码管理器 <a href="https://github.com/buttercup/buttercup-desktop"></a></li><li>  <a href="https://www.dashlane.com/">Dashlane</a> - 基于云的密码管理器，拥有屡获殊荣的设计。<a href="https://itunes.apple.com/cn/app/dashlane-password-manager/id552383089"></a></li><li>  <a href="https://www.enpass.io/">Enpass</a> - 具有云集成的跨平台密码管理工具。<a href="https://itunes.apple.com/cn/app/enpass-password-manager/id732710998?mt=12"></a></li><li>  <a href="https://keeweb.info/">Keeweb</a> - 与 KeePass 兼容的免费跨平台密码管理器。 <a href="https://github.com/keeweb/keeweb"></a></li><li>  <a href="https://www.lastpass.com/">LastPass</a> - 密码管理器和安全的数字笔记。</li><li>  <a href="https://macpass.github.io/">MacPass</a> - 密码管理器。<a href="https://github.com/mstarke/MacPass"></a> </li><li>  <a href="https://www.remembear.com/">RememBear</a> - 治愈系密码管理工具。 </li></ul><h3 id="Finder"><a href="#Finder" class="headerlink" title="Finder"></a>Finder</h3><ul><li>  <a href="https://fman.io/">fman</a> - 先进的双窗口文件管理器，拥有很多特性。</li><li>  <a href="http://binarynights.com/forklift/">ForkLift</a> - 先进的双窗口文件管理器和文件传输客户端。</li><li>  <a href="https://www.noodlesoft.com/">Hazel</a> - 设计精美的自动文件管理软件。</li><li>  <a href="https://github.com/vanshg/MacAssistant/releases">MacAssistant</a> - Google 助手 <a href="https://github.com/vanshg/MacAssistant"></a></li><li>  <a href="http://www.cocoatech.com/pathfinder/">Path Finder</a> - 强大的 Finder 替代者，拥有很多特性。</li><li>  <a href="https://github.com/sindresorhus/quick-look-plugins">Quicklook-Plugins</a> - Finder 快速预览文件插件。</li><li>  <a href="https://qspace.awehunt.com/">QSpace</a> - 一款简洁高效的多视图文件管理器。<a href="https://apps.apple.com/cn/app/id1469774098"></a></li><li>  <a href="http://totalfinder.binaryage.com/">TotalFinder</a> - 强大的 Finder 替代者，界面风格像 Chrome。</li><li>  <a href="https://www.trankynam.com/xtrafinder/">XtraFinder</a> - 给 Finder 添加有用的新特性。</li></ul><h2 id="远程协助"><a href="#远程协助" class="headerlink" title="远程协助"></a>远程协助</h2><ul><li>  <a href="https://anydesk.com/">AnyDesk</a> 是一款远程控制跨多平台的程序。</li><li>  <a href="https://www.realvnc.com/">RealVNC</a> 是一款免费的远程控制跨多平台的程序。 </li><li>  <a href="https://www.teamviewer.com/">TeamViewer</a> - 远程协助及在线协作和会议功能的软件，商业软件个人使用免费。</li></ul><h2 id="QuickLook插件"><a href="#QuickLook插件" class="headerlink" title="QuickLook插件"></a>QuickLook插件</h2><blockquote><p>List of useful <a href="http://en.wikipedia.org/wiki/Quick_Look">Quick Look</a> plugins for developers.<a href="https://github.com/sindresorhus/quick-look-plugins#readme"></a></p></blockquote><p><em>使用 <a href="https://github.com/phinze/homebrew-cask">Homebrew Cask</a> 将通过命令安装即为简单。开发人员使用的<a href="http://en.wikipedia.org/wiki/Quick_Look">Quick Look</a>插件列表。如果手动安装，你可将下载的 <code>.qlgenerator</code> 文件移动到 <code>~/Library/QuickLook</code> 运行 <code>qlmanage -r</code></em></p><ul><li>  <a href="https://github.com/whomwah/qlstephen">QuicklookStephen</a> - 可以让您查看没有文件扩展名的纯文本文件，如 README、INSTALL、Capfile、CHANGELOG…<code>brew cask install qlstephen</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 合集分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件,macOS,开源,免费 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Basics Python 基础</title>
      <link href="/2021/10/18/ce/pda/1.1.1-python-basics-python-ji-chu/"/>
      <url>/2021/10/18/ce/pda/1.1.1-python-basics-python-ji-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="1-1-1-Python-Basics-Python-基础"><a href="#1-1-1-Python-Basics-Python-基础" class="headerlink" title="1.1.1: Python Basics Python 基础"></a>1.1.1: Python Basics Python 基础</h1><p>Python是一种解释语言。<br><em>Python is an interpreted language.</em><br>    这意味着您可以运行Python程序，而无需首先链接或编译它们。<br><em>That means you can run your Python programs without the need to first link or compile them.</em><br>    Python有两种不同的模式。<br><em>Python has two different modes.</em><br>    这些模式称为交互模式和标准模式。<br><em>These modes are called the interactive mode and the standard mode.</em><br>    交互模式用于一次试验一行代码或一个表达式。<br><em>The interactive mode is meant for experimenting your code one line or one expression at a time.</em><br>    相比之下，标准模式非常适合从头到尾运行程序。<br><em>In contrast, the standard mode is ideal for running your programs from start to finish.</em><br>    我自己经常在这两种Python模式之间切换。<br><em>Myself, I often alternate between these two Python modes.</em><br>    如果手头的任务相对简单，我倾向于直接以标准模式编写代码。<br><em>If the task at hand is relatively easy, I tend to write the code directly in the standard mode.</em><br>    但是，如果代码对我来说更具挑战性，我倾向于在交互模式下花费更多的时间。<br><em>However, if the code is more challenging to me,I tend to spend more time in the interactive mode.</em><br>    这样，我可以在将每一行导入标准模式之前完善每一行。<br><em>That way I can perfect every line before I import that to the standard mode.</em><br>    Python程序往往比C或C++或java中的等效程序短得多。<br><em>Python programs tend to be much shorter than equivalent programs in C or C++ or Java.</em><br>    这是因为Python是一种高级语言。<br><em>This is because Python is a high-level language.</em><br>    它的数据类型允许您以非常简洁的方式表达复杂的操作。<br><em>It has data types that allow you to express complex operations in a very concise manner.</em><br>    最后，您应该知道Python是如何命名的。<br><em>Finally, you should know how Python gets its name.</em><br>    Python并不像你想象的那样以蛇命名。<br><em>Python is not named after the snake, as you might have imagined.</em><br>    事实上，Python的名字来源于《英国广播公司》MythyPython的飞行马戏团，这是我极力推荐的一个节目。<br><em>In fact, Python is named after the inimitable BBC show Monty Python’s Flying Circus, a show that I highly recommend.</em><br>    除了使用核心Python之外，我们还将使用几个Python包来执行科学计算。<br><em>In addition to using just core Python, we’ll be using several Python packages to perform scientific computations.</em><br>    但是，我们将使用Python发行版，而不是一次手动安装200多个包。<br><em>But instead of installing more than 200 packages manually one at a time, we will be using a Python distribution.</em><br>    发行版由核心Python包和数百个模块组成，所有模块都可以无缝地协同工作。<br><em>A distribution consists of the core Python package and several hundred modules, all working seamlessly together.</em><br>    所有这些都可以通过一次下载获得。<br><em>All of this is available through a single download.</em><br>    目前有几种Python发行版可用。<br><em>There are currently several Python distributions available.</em><br>    我们将在本课程中使用的是Anaconda Python发行版。<br><em>The one we will be using in this course is called the Anaconda Python distribution.</em><br>    在录制时，此重新分发支持近300个包，并且几乎每天都会添加新包。<br><em>At the time of recording, this redistribution supports almost 300 packages and new packages are added almost daily.</em><br>    此外，Anaconda还包括两个非常有用的开发环境，分别称为Jupyter和Spyder。<br><em>In addition, Anaconda also includes two very useful development environments,which are called Jupyter and Spyder.</em><br>    本课程将广泛使用这两种环境。<br><em>This course will be making extensive use of both of these environments.</em><br>    经常会出现以下问题：<br><em>Questions often come up:</em><br>    我应该学习Python 2还是Python 3？<br><em>Should I learn Python 2 or Python 3?</em><br>    事实是，有些人更喜欢Python 2，有些人更喜欢Python 3。<br><em>And the truth of the matter is, some people like Python 2 better, some people like Python 3 better.</em><br>    了解更多关于Python 2和Python 3问题的有用地方是Python.org。<br><em>A useful place for learning more about the Python 2 versus Python 3 issue is python.org.</em><br>    该网站提供了一份特别简明的情况摘要。<br><em>That website provides an especially concise summary of the situation.</em><br>    根据该网站，Python2是传统的，而Python3是该语言的现在和未来。<br><em>According to the website, Python 2 is legacy,whereas Python 3 is the present and future of the language.</em><br>    事实上，Python3已经存在好几年了。<br><em>Python 3 has, in fact, been around for already several years.</em><br>    Python 3.0于2008年发布。<br><em>Python 3.0 was released in 2008.</em><br>    那么Python3有什么缺点吗？<br><em>So are there any downsides to Python 3?</em><br>    实际上，只有一个主要的缺点，那就是Python3与Python2不向后兼容。<br><em>Well, there is really only one principal downside which is that Python 3 is not backwards compatible with Python 2.</em><br>    这意味着，如果您用Python3编写代码，运行Python2的人将无法运行该代码。<br><em>What that means, if you write your code in Python 3, somebody running Python 2 will not be able to run that code.</em><br>    这就是我们在本课程中使用Python 3的原因。<br><em>Here is why we will be using Python 3 in this course.</em><br>    所有新的标准库改进只在Python3中默认可用。<br><em>All new standard library improvements will only be available by default in Python 3.</em><br>    Python3对于新手来说也更容易学习，核心语言的几个方面是<br><em>Python 3 is also easier for newcomers to learn,and several aspects of the core language are</em><br>    比Python2中的更加一致。<br><em>more consistent than those in Python 2.</em><br>    Python3还消除了许多容易让刚开始学习Python的程序员绊倒的怪癖。<br><em>Python 3 also eliminates many of the quirks that can easily trip up beginning programmers learning Python.</em><br>    因此，现在是学习Python 3的好时机。<br><em>So this is a good time to be learning Python 3.</em><br>    许多核心Python开发人员认为，Python 3显然是新项目学习的首选，<br><em>Many of the core Python developers believe that Python 3 became the obvious choice to learn for new projects,</em><br>    从2015年9月开始。<br><em>starting in September 2015.</em><br>    建议人们学习Python 3，除非他们有很好的理由学习Python 2。<br><em>The recommendation is that people learn Python 3 unless they have a very good reason to be learning Python 2.</em><br>    所以，除非你有非常特殊的理由学习Python 2，否则我想邀请你和我一起学习Python 3。<br><em>So unless you have a very special reason to learn Python 2,I would like to invite you to learn Python 3 with me.</em></p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Objects 对象</title>
      <link href="/2021/10/18/ce/pda/1.1.2-objects-dui-xiang/"/>
      <url>/2021/10/18/ce/pda/1.1.2-objects-dui-xiang/</url>
      
        <content type="html"><![CDATA[<h1 id="1-1-2-Objects-对象"><a href="#1-1-2-Objects-对象" class="headerlink" title="1.1.2: Objects 对象"></a>1.1.2: Objects 对象</h1><p>Python包含许多数据类型作为核心语言的一部分。<br><em>Python contains many data types as part of the core language.</em><br>了解Python程序中的所有数据都由对象和对象之间的关系表示，这一点很重要。<br><em>It’s important to understand that all data in a Python program is represented by objects and by relationships between objects.</em><br>这里是想法-一些对象的值可以在程序执行过程中改变。<br>Here is the idea - the value of some objects can change in the course of program execution.<br>值可以更改的对象称为可变对象，而值在创建后不可更改的对象称为不可变对象。<br>Objects whose value can change are said to be mutable objects,whereas objects whose value is unchangeable after they’ve been created are called immutable.<br>Python还包含所有Python程序都可以使用的构建函数。<br>Python also contains building functions that can be used by all Python programs.<br>Python库由所有核心元素组成，如数据类型和内置函数，但Python库的大部分由模块组成。<br>The Python library consists of all core elements, such as data types and built-in functions but the bulk of the Python library consists of modules.<br>为了能够在自己的代码中使用模块，首先需要使用import语句导入这些模块。<br>In order for you to be able to make use of modules in your own code,you first need to import those modules using the import statement.<br>Python中的每个对象都有三个特征。<br>Each object in Python has three characteristics.<br>这些特征称为对象类型、对象值和对象标识。<br>These characteristics are called object type, object value,and object identity.<br>对象类型告诉Python它所处理的对象的类型。<br>Object type tells Python what kind of an object it’s dealing with.<br>类型可以是数字、字符串、列表或其他类型。<br>A type could be a number, or a string, or a list, or something else.<br>对象值是对象包含的数据值。<br>Object value is the data value that is contained by the object.<br>例如，这可能是一个特定的数字。<br>This could be a specific number, for example.<br>最后，您可以将对象标识视为对象的标识号。<br>Finally, you can think of object identity as an identity number for the object.<br>计算机内存中的每个不同对象都有自己的标识号。<br>Each distinct object in the computer’s memory will have its own identity number.<br>大多数Python对象要么有数据，要么有函数，要么两者都有关联。<br>Most Python objects have either data or functions or both associated with them.<br>这些被称为属性。<br>These are known as attributes.<br>属性的名称跟在对象的名称后面。<br>The name of the attribute follows the name of the object.<br>这两者之间用一个点隔开。<br>And these two are separated by a dot in between them.<br>这两种类型的属性称为数据属性或方法。<br>The two types of attributes are called either data attributes or methods.<br>数据属性是附加到特定对象的值。<br>A data attribute is a value that is attached to a specific object.<br>相反，方法是附加到对象的函数。<br>In contrast, a method is a function that is attached to an object.<br>通常，一个方法对该对象执行一些函数或操作。<br>And typically a method performs some function or some operation on that object.<br>对象类型始终决定其支持的操作类型。<br>Object type always determines the kind of operations that it supports.<br>换句话说，根据对象的类型，作为程序员，您可以使用不同的方法。<br>In other words, depending on the type of the object,different methods may be available to you as a programmer.<br>最后，实例是对象的一个引用。<br>Finally, an instance is one occurrence of an object.<br>例如，可以有两个字符串。<br>For example, you could have two strings.<br>它们可能存储了不同的值，但仍然支持相同的方法集。<br>They may have different values stored in them,but they nevertheless support the same set of methods.<br>为了澄清数据属性和方法之间的区别，让我们来看看Python。<br>To clarify the difference between a data attribute and a method,let’s do some Python.<br>让我们首先导入一个名为NumPy的库，我将以np的形式导入它，这只是为了节省一些输入。<br>Let’s first import a library called NumPy, which I’m going to import as np and this is just to save me some typing.<br>我将定义两个数组。<br>I’m going to define two arrays.<br>假设我的第一个数组由数字1、3和5组成。<br>Let’s say my first array consists of numbers 1, 3, and 5.<br>我要叫它x。<br>I’m going to call that x.<br>我的第二个数组将被称为y，假设它由数字1、5和9组成。<br>And my second array is going to be called y and let’s say it consists of numbers 1, 5, and 9.<br>现在这两个对象都是NumPy数组。<br>Now both of these objects are NumPy arrays.<br>这意味着它们都支持相同的方法<br>That means they both support the same methods<br>并且具有相同的可用属性。<br>and have the same attributes available.<br>如果我想知道x中数字的平均值，<br>If I wanted to know the mean of the numbers in x,<br>我只想让Python将其返回。<br>I would simply ask Python to return that.<br>这里，我调用mean方法，它连接到对象x。<br>Here, I’m calling the mean method, which is connected to the object x.<br>我可以对对象y做同样的事情。<br>I can do the same exact thing for object y.<br>在这种情况下，它们有不同的方法，但在这两种情况下，我都可以使用平均值方法。<br>They turn out to have different means in this case, but in both cases the mean method is available to me.<br>让我们看一个数据属性的示例。<br>Let’s look at an example of a data attribute.<br>如果我键入x.shape，Python会告诉我这个数组包含三个数字。<br>If I type x.shape, Python is telling me that this array contains three numbers.<br>我同样可以问，y中有多少元素？<br>I can similarly ask, how many elements do I have in y?<br>答案是一样的。<br>And the answer is the same.<br>y中嵌入了三个元素。<br>There are three elements embedded in y.<br>注意，在第一种情况下，当我要求Python计算一个值时，<br>Notice in the first case, when I ask Python to compute a value,<br>属性名称后面有括号。<br>I have parentheses following the name of the attribute.<br>这意味着平均值是一个函数。<br>That means mean is a function.<br>相反，当我要求Python返回数组的形状时，<br>In contrast, when I ask Python to return the shape of the array,<br>“形状”一词后面没有括号。<br>I don’t have parentheses following the word “shape”.<br>这意味着形状是一个数据属性。<br>That means shape is a data attribute.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Modules and Methods 模块和方法</title>
      <link href="/2021/10/18/ce/pda/1.1.3-modules-and-methods-mo-kuai-he-fang-fa/"/>
      <url>/2021/10/18/ce/pda/1.1.3-modules-and-methods-mo-kuai-he-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="1-1-3-Modules-and-Methods-模块和方法"><a href="#1-1-3-Modules-and-Methods-模块和方法" class="headerlink" title="1.1.3: Modules and Methods 模块和方法"></a>1.1.3: Modules and Methods 模块和方法</h1><p>让我们谈谈模块。<br>Let’s talk a little bit about modules.<br>Python模块是代码库，您可以使用import语句导入Python模块。<br>Python modules are libraries of code and you can import Python modules using the import statements.<br>让我们从一个简单的案例开始。<br>Let’s start with a simple case.<br>我们将通过说“导入数学”来导入数学模块。<br>We’re going to import the math module by saying “import math”.<br>该模块具有多个功能。<br>The module comes with several functions.<br>我们将演示其中的几个。<br>We’re just going to demonstrate a couple of them.<br>例如，如果我想使用pi的值，我会键入math.pi，Python会告诉我pi的值，3.14，依此类推。<br>For example, if I wanted to use the value of pi, I would type math.pi and Python would tell me the value of pi, 3.14, and so on.<br>数学模块还附带了几个函数或方法。<br>The math module also comes with several functions, or methods.<br>让我们试试平方根函数。<br>Let’s try out the square root function.<br>要使用它，我键入math.sqrt，输入参数是我希望平方根取的数字。<br>To use that, I type math.sqrt and the input argument is the number that I want the square root to be taken of.<br>在本例中，我要求Python返回10的平方根值。<br>So in this case, I’ve asked Python to return the value of square root of 10.<br>让我们做一些更复杂的事情。<br>Let’s do something a little more sophisticated.<br>如果我想找出sin pi除以2的值呢？<br>What if I wanted to find out the value of sin pi over 2?<br>让我们首先提取pi的值，我们知道它是math.pi。<br>Let’s first extract the value of pi, which we know is math.pi.<br>我们可以把这个数除以2。<br>We can then take this number and divide that by 2.<br>这是π除以2。<br>So this is pi over 2.<br>为了得到这个数字的sin，我们说math.sin并使用math.pi除以2作为sin函数的输入。<br>To take the sin of this number, we say math.sin and use math.pi over 2 as an input to the sin function.<br>正如所料，Python告诉我们π除以2的sin正好是1。<br>And as expected, Python tells us the sin of pi over 2 is exactly 1.<br>有时，我们不想使用整个模块。<br>Sometimes, we don’t want to use the entire module.<br>也许我们只想从该模块中选择一个函数。<br>Perhaps we just want to choose one function from that module.<br>让我们考虑一种情况，在这种情况下，我只需要能够在我的程序中使用pi的值。<br>Let’s think about a situation where I just need to be able to have the value of pi available to me in my program.<br>所以我不需要数学库中的任何东西，只需要π的值。<br>So I didn’t need anything else from the math library, just the value of pi.<br>要做到这一点，我可以做以下工作——我可以从数学中区分Python，导入pi。<br>To do that, I can do the following– I can tell Python from math, import pi.<br>在本例中，Python只从该模块导入了pi的值，而没有导入其他内容。<br>In this case, Python has imported just the value of pi from that module and nothing else.<br>让我们稍微谈谈名称空间。<br>Let’s talk a little bit about namespaces.<br>什么是名称空间？<br>What is a namespace?<br>一个共享的容器名称通常是一个共享的容器名称。<br>Well namespace is a container of names shared by objects that typically go together.<br>其目的是防止命名冲突。<br>And its intention is to prevent naming conflicts.<br>也许理解名称空间的最好方法是通过一个例子。<br>Perhaps the best way to understand namespace is through an example.<br>那么让我们做下面的事情。<br>So let’s do the following.<br>让我们先导入数学模块。<br>Let’s import the math module first.<br>然后我们将numpy模块作为np导入。<br>We’re then going to import the numpy module as np.<br>现在，数学模块有一个平方根方法sqrt，但是numpy也有一个平方根方法sqrt。<br>Now, the math module has a square root method, sqrt,but numpy also has a square root method, sqrt.<br>这两种功能之间有什么区别？<br>What is the difference between these two functions?<br>好吧，让我们来举个例子。<br>Well, let’s try an example.<br>如果我键入math.sqrt，我可以让Python计算2的平方根的值。<br>If I type math.sqrt, I can ask Python to calculat the value of the square root of 2.<br>我可以使用numpy模块中的平方根函数做同样的事情。<br>I can do the same exact thing using the square root function from the numpy module.<br>到目前为止，这两个函数似乎是相同的，但实际上这两个函数是完全不同的，它们存在于不同的名称空间中。<br>So far, it appears that these two functions are identical,but actually these two functions are quite separate and they exist in different namespaces.<br>事实证明，numpy平方根函数可以做数学平方根函数不知道如何做的事情。<br>It turns out that the numpy square root function can do things that the math square root function doesn’t know how to do.<br>这里有一个简单的例子。<br>Here’s a simple example.<br>如果我不仅要取一个数的平方根，还要取几个数的平方根，比如说，2，3，4？<br>What if I wanted to take the square root of not just one number,but several numbers, say, 2, 3, and 4?<br>我可以同时为他们所有人做这件事。<br>I can do this simultaneously for all of them.<br>然后我们来讨论import语句。<br>Let’s then talk about the import statement.<br>运行Python导入语句时会发生什么？<br>What exactly happens when you run the Python import statement?<br>发生了三件事。<br>Three things happen.<br>首先，Python为新模块中定义的所有对象创建一个新的名称空间。<br>The first thing that happens is Python creates a new namespace for all the objects which are defined in the new module.<br>所以在抽象意义上，这是我们的新名称空间。<br>So in abstract sense, this is our new namespace.<br>这是第一步。<br>That’s the first step.<br>Python执行的第二步是执行模块的代码，并在新创建的名称空间中运行它。<br>The second step that Python does is it executes the code of the module and it runs it within this newly created namespace.<br>发生的第三件事是Python创建了一个名称——比方说np代表numpy——这个名称引用了这个新的名称空间对象。<br>The third thing that happens is Python creates a name– let’s say np for numpy– and this name references this new namespace object.<br>因此，当您调用np.sqrt函数时，Python正在numpy名称空间中使用sqrt函数。<br>So when you call np.sqrt function, Python is using the sqrt function within the numpy namespace.<br>Math有自己的名称空间和自己的平方根函数。<br>Math has its own namespace with its own square root function.<br>因此，当您键入math.sqrt时，Python正在math命名空间中调用此sqrt函数。<br>So when you type math.sqrt, Python is calling this sqrt function within the math namespace.<br>如果有人递给你一个Python对象，而你不知道该对象的类型，该怎么办？<br>What if somebody hands you a Python object and you don’t know the type of that object?<br>让我们看看你能做些什么。<br>Let’s see what you can do.<br>让我们定义一个Python字符串。<br>Let’s define a Python string.<br>我们要定义一个名字，我们要叫这个名字艾米。<br>We’re just going to define a name, and we’re going to call that name Amy.<br>如果您想知道这个对象的类型，可以使用type函数，Python会告诉您名称是字符串。<br>If you wanted to know what is the type of this object,you can use the type function, and Python will tell you the name is a string.<br>现在您知道对象是一个字符串，<br>Now that you know that the object is a string,<br>我们可以找到您可以使用的其他方法。<br>we can find out what other methods that are available to you.<br>你可以用两种不同的方式来做。<br>You can do this in two different ways.<br>我们可以使用todir，dir函数，得到一个目录的方法。<br>We can use to dir, dir function, to get a directory of the methods.<br>因此，我可以键入dir name，Python将为我提供一长串可用于字符串对象的方法。<br>So I can type dir name, and Python will give me a long list of methods that are available to string objects.<br>另一种方法是使用对象类型，而不是使用对象的实际名称。<br>An alternative way to do this is instead of using the actual name of the object,I can use the object type.<br>在本例中，我知道name是一个字符串，所以我可以只键入str而不键入name，Python将给出相同的方法列表。<br>In this case, I know that name was a string, so instead of typing name,I can just type str and Python will give me the same exact list of methods.<br>因此，如果我想了解更多关于特定方法的知识，比如说，字符串的上限方法，我应该怎么做？<br>So if I wanted to learn more about a specific method, say, the upper method of strings, what should I do?<br>那么，第一个选择是如下。<br>Well, the first option is the following.<br>我可以通过键入“help”向Python寻求帮助，Python将给我一个非常简短的函数描述。<br>I can just ask Python for help by typing “help” and Python will give me a very brief description of the function.<br>但是请注意以下几点——当我请求帮助时，我需要确保我没有实际运行该方法。<br>But notice the following– when I am asking for help,I need to make sure that I don’t actually run that method.<br>那么这里发生了什么？<br>So what’s happening here?<br>upper是绑定到Name对象的函数或方法。<br>Name.upper is a function, or a method, that’s bound to a name object.<br>如果我在结尾加上括号，我实际上是在调用该方法。<br>If I add parentheses to the end, I’m actually calling that method.<br>我要求Python做点什么。<br>I’m asking Python to do something.<br>在这种情况下，Python将名称“Amy”（在本例中）转换为全大写。<br>In that case, Python is turning the name “Amy,” in this case,into all uppercase.<br>因此，如果我现在请求帮助，如果我键入“help”name.upper，在upper后面加上括号，我实际上是在请求艾米的帮助。<br>So if I’m now asking for help, if I type “help” name.upper and I have the parentheses after upper, I’m effectively asking help on Amy.<br>所以在本例中，Python告诉我它没有可供Amy使用的文档。<br>So in this case, Python tells me it doesn’t have documentation available for Amy.<br>因此，当我使用帮助函数时，我需要确保我没有实际运行我想获得帮助的方法。<br>So when I’m using the help function, I need to make sure that I don’t actually run the method I’m interested in getting help for.<br>如果您只需要对特定方法的工作原理稍加说明，那么“帮助”功能非常方便。<br>The help function is very handy if all you need is a tiny bit of clarification on how a specific method works.<br>但是如果你需要更多的帮助，那么你最好的办法就是上网，用谷歌搜索有问题的方法。<br>But if you need more help, then your best bet is probably to go online and just Google the method in question.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Numbers and Basic Calculations 数字和基本计算</title>
      <link href="/2021/10/18/ce/pda/1.1.4-numbers-and-basic-calculations-shu-zi-he-ji-ben-ji-suan/"/>
      <url>/2021/10/18/ce/pda/1.1.4-numbers-and-basic-calculations-shu-zi-he-ji-ben-ji-suan/</url>
      
        <content type="html"><![CDATA[<h1 id="1-1-4-Numbers-and-Basic-Calculations-数字和基本计算"><a href="#1-1-4-Numbers-and-Basic-Calculations-数字和基本计算" class="headerlink" title="1.1.4: Numbers and Basic Calculations 数字和基本计算"></a>1.1.4: Numbers and Basic Calculations 数字和基本计算</h1><p>数字是Python中的一种对象类型。<br>Numbers are one type of object in Python.<br>实际上，Python提供了三种不同的数值类型。<br>And Python, in fact, provides three different numeric types.<br>这些称为整数、浮点数和复数。<br>These are called integers, floating point numbers, and complex numbers.<br>Python整数的一个有趣之处是它们具有无限的精度。<br>One of the interesting things about Python integers is that they have unlimited precision.<br>这意味着您的整数永远不会太长，无法适应Python的整数类型。<br>That means your integer will never be too long to fit into Python’s integer type.<br>关于数字另一个需要了解的重要方面是，您可以自由混合不同的数字类型。<br>Another important aspect to realize about numbers is that you can freely mix different numeric types.<br>所有Python数字都支持所有常用的算术运算。<br>All Python numbers support all the usual arithmetic operations.<br>现在让我们试试其中的一些。<br>And let’s try a few of them out right now.<br>当然，像加法和乘法这样的基础知识很简单。<br>The basics, like addition and multiplication are, of course, easy.<br>我们也可以把一个数提高到一个幂。<br>We can also raise a number to a power.<br>你会看到，如果我们稍微增加一点指数，结果将是一个非常大的数字，但这不会是一个问题。<br>And you’ll see that if we increase the exponent a little bit,the result is going to be a very large number,but that’s not going to be a problem.<br>同样，Python对整数具有无限精度。<br>Again, Python has unlimited precision for integers.<br>让我们试试除法。<br>Let’s try out division.<br>除法是用斜杠来完成的。<br>Division is accomplished using the slash.<br>例如，如果我们说6除以7，Python会给出浮点答案。<br>So for example, if we say 6 divided by 7,Python gives us the floating point answer.<br>然而，有时我们可能想做所谓的地板分割，或整数分割。<br>Sometimes, however, we might want to do what’s called floor division, or integer division.<br>这是通过使用两个斜线符号来实现的。<br>This is accomplished by using two slash signs.<br>在本例中，让我们做一些类似于15除以7的事情，在浮点中是2.14。<br>In this case, let’s do something like 15 divided by 7, which in a floating point is 2.14.<br>如果我们使用整数除法，Python将给我们一个2的答案。<br>If we use integer division, Python is going to give us an answer of 2.<br>所以这里发生的事情如下：Python像往常一样执行除法，得到的数字是2.14。<br>So what happened here is the following: Python carries out the division as usual and that gives you the number 2.14.<br>然后将该数字舍入到最接近的整数，该整数小于实际的浮点答案。<br>It then rounds that number to the closest integer,which is less than the actual floating point answer.<br>因此，浮点数2.14向下舍入为更接近的较小整数，即2。<br>So 2.14, a floating point number, gets rounded down to the closer, smaller integer, which is 2.<br>Python中的交互模式提供了一个非常有用的操作，即下划线运算符。<br>The interactive mode in Python provides a very useful operation which is the underscore operator.<br>下划线运算符的值始终是Python返回给您的最后一个对象。<br>And the value of the underscore operator is always the last object that Python has returned to you.<br>让我们看看这意味着什么。<br>So let’s see what that means.<br>让我们做一个简单的除法——比如说，15除以2.3。<br>Let’s do a simple division– 15 divided by 2.3, say.<br>Python告诉我们它是6.521，以此类推。<br>Python tells us that it’s 6.521 and so on.<br>现在，如果我点击下划线，Python将返回最新操作的值。<br>Now, if I hit underscore, Python is returning the value of the latest operation.<br>假设我想将这个数字乘以2.3，这将返回15的数字。<br>Say I wanted to multiply this number with 2.3, which would give me back the number of 15.<br>所以我可以用下面的方法。<br>So I can do that in the following way.<br>我只取下划线，乘以2.3，答案是15。<br>I just take the underscore,I multiply that by 2.3, and the answer is 15.<br>如果您想更改一些计算，这在交互模式下尤其方便。<br>This is especially handy in the interactive mode if you’d like to change a few calculations.<br>让我们来举一个例子。<br>So let’s try one example.<br>让我们先从10乘以2开始。<br>Let’s first start with 10 times 2.<br>那是20。<br>That’s 20.<br>我们取这个数，再加上5，然后取25，再把它提高到二次方。<br>Let’s take that number,let’s add 5 to it,and let’s then take that number 25 raise that to the second power.<br>在这种情况下，答案是625。<br>In this case, the answer is 625.<br>我们通常需要超越Python提供的内置函数和操作。<br>Very commonly we need to go beyond the built-in functions and operations that Python provides.<br>对于数字来说，一种方法是使用数学模块，它包含一些基本的数学运算，比如阶乘。<br>And one way to do this for numbers is to use the math module, which contains some basic mathematical operations,like the factorial.<br>让我们快速提醒自己，什么是阶乘运算。<br>Let’s just quickly remind ourselves, what is the factorial operation.<br>所以n的阶乘，用感叹号表示，是n乘以n减去1乘以2乘以1。<br>So the factorial of n,indicated by exclamation mark, is n times n minus 1 all the way times 2 times 1.<br>例如，3阶乘等于3乘以2乘以1，也就是6。<br>And so for example, 3 factorial would be equal to 3 times 2 times 1, which is 6.<br>现在的问题是，我们如何用Python实现这个简单的计算？<br>Now, the question is, how could we implement this simple calculation in Python?<br>让我们从导入数学模块开始。<br>Let’s start by importing the math module.<br>所以我们输入数学。<br>So we type import math.<br>我们感兴趣的函数是math.factorial。<br>And the function we’re interested in is math.factorial.<br>本例中的参数是3，Python告诉我们3阶乘等于6。<br>So the argument in this case would be 3, and Python tells us 3 factorial is equal to 6.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Random Choice 随机选择</title>
      <link href="/2021/10/18/ce/pda/1.1.5-random-choice-sui-ji-xuan-ze/"/>
      <url>/2021/10/18/ce/pda/1.1.5-random-choice-sui-ji-xuan-ze/</url>
      
        <content type="html"><![CDATA[<h1 id="1-1-5-Random-Choice-随机选择"><a href="#1-1-5-Random-Choice-随机选择" class="headerlink" title="1.1.5: Random Choice 随机选择"></a>1.1.5: Random Choice 随机选择</h1><p>通常，当我们使用数字时，偶尔也会使用其他类型的对象，我们希望使用某种类型的随机性。<br>Often when we’re using numbers, but also,occasionally, with other types of objects,we would like to do some type of randomness.<br>例如，我们可能想要实现一个简单的随机抽样过程。<br>For example, we might want to implement a simple random sampling process.<br>为此，我们可以使用随机模块。<br>To this end, we can use the random module.<br>所以，我们的出发点是，再次导入这个模块，random。<br>So the starting point is, again, to import that module, random.<br>让我们考虑一个简单的例子，其中列表中包含一组数字，我们希望从这些数字中随机统一选择一个。<br>Let’s think about a simple example where we have a set of numbers contained in a list,and we would like to pick one of those numbers uniformly at random.<br>在本例中，我们需要使用的函数是random.choice，在括号内，我们需要一个列表。<br>The function we need to use in this case is random.choice,and inside parentheses, we need a list.<br>在这个列表中，我将只输入几个数字——2、44、55和66。<br>In this list, I’m going to just enter a few numbers– 2, 44, 55, and 66.<br>然后，当我运行随机选择时，Python会将其中一个数字返回给我。<br>And then when I run the random choice, Python returns one of these numbers back to me.<br>如果我重复同一行，我会得到一个不同的答案，因为Python只是随机选取其中一个对象。<br>If I repeat the same line, I’m going to get a different answer,because, again, Python is just picking one of those objects at random.<br>关于随机选择方法，需要了解的一个关键点是Python并不关心所使用对象的基本性质<br>A crucial thing to understand about the random choice method is that Python doesn’t care about the fundamental nature of the objects that<br>都包含在该列表中。<br>are contained in that list.<br>这意味着，不用数字，我也可以从几个字符串中选择一个。<br>What that means, instead of using numbers,I could also be choosing one out of several strings.<br>让我们看看这是怎么回事。<br>So let’s see how that might work.<br>我要回到我的清单上。<br>I’m going to go back to my list.<br>我只想在这里包括三个短字符串。<br>I’m just going to include three short strings here.<br>让我们只做“aa”，“bb”和“cc”<br>Let’s just do “aa,” “bb,” and “cc.”<br>我可以让Python随机选择其中一个。<br>I can ask Python to pick one of these uniformly at random.<br>因此Python并不关心这些对象的性质。<br>So Python doesn’t care about the nature of these objects.<br>对于任何类型的对象，随机的工作方式都是一样的。<br>Random works just the same way for any type of object.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Expressions and Booleans 表达式和布尔值</title>
      <link href="/2021/10/18/ce/pda/1.1.6-expressions-and-booleans/"/>
      <url>/2021/10/18/ce/pda/1.1.6-expressions-and-booleans/</url>
      
        <content type="html"><![CDATA[<h1 id="1-1-6-Expressions-and-Booleans-表达式和布尔值"><a href="#1-1-6-Expressions-and-Booleans-表达式和布尔值" class="headerlink" title="1.1.6: Expressions and Booleans 表达式和布尔值"></a>1.1.6: Expressions and Booleans 表达式和布尔值</h1><p>表达式是计算值的对象和运算符的组合。<br>Expression is a combination of objects and operators that computes a value.<br>许多表达式都涉及所谓的布尔数据类型。<br>Many expressions involve what is known as the boolean data type.<br>布尔类型的对象只有两个值。<br>Objects of the boolean type have only two values.<br>这些被称为真与假。<br>These are called True and False.<br>在Python中，您需要大写这些单词，True和False，以便Python将它们理解为布尔类型。<br>In Python, you need to capitalize these words, True and False,for Python to understand them as boolean type.<br>让我们很快检查一下。<br>Let’s just check very quickly.<br>如果我们键入True，Python会告诉我们这是一个布尔对象。<br>If we type True, Python tells us this is a boolean object.<br>或者如果我们问Python，False的类型是什么，F大写，Python告诉我们这是一个布尔对象。<br>Or if we ask Python, what is the type of False, with F capitalized,Python tells us this is a boolean object.<br>注意，如果我不大写false，Python就不知道这个对象是什么。<br>Note that if I don’t capitalize false, Python doesn’t know what this object is.<br>它不明白这一点。<br>It doesn’t understand that.<br>因此，您需要确保将布尔类型大写。<br>So you need to be sure to capitalize your boolean types.<br>涉及逻辑的操作，即所谓的布尔操作，接收一个或多个布尔对象，然后<br>Operations involving logic, so-called boolean operations,take in one or more boolean object and then<br>它们会将一个布尔对象返回给您。<br>they return one boolean object back to you.<br>只有三种布尔运算，即“或”、“与”和“非”。<br>There are only three boolean operations, which are “or”, “and”, and “not”.<br>让我们试试这些。<br>So let’s try these out.<br>让我们从“或”开始。如果x为真或y为真，或者两者都为真，那么x和y之间的“或”将为真。<br>Let’s start with “or”. “Or” between x and y is going to be True if either x is True or y is True, or both are True.<br>例如，如果我们说True或False，那么Python返回True。<br>So for example, if we say True or False, then Python returns True.<br>真或真也会是真的。<br>True or True would also be True.<br>所以唯一的时间“或”是假的——如果“或”周围的第一个和第二个对象都是假的。<br>So the only time “or” would be False– if both the first and second object surrounding “or” are False.<br>只有当两个对象都为真时，“And”才为真。<br>“And” is only true if both objects are True.<br>所以如果我们输入True和True，答案将是True。<br>So if we type True and True, the answer is going to be True.<br>然而，如果我们把第二个真的变成假，“和”将是假的。<br>However, if we turned the second True to False, “and” is going to be False.<br>所以为了使“and”为真，这两个对象都必须为真。<br>So in order for “and” to be True, both of the objects need to be True.<br>最后，我们有“not”操作，它简单地否定对象的值。<br>Finally, we have the “not” operation, which simply negates the value of the object.<br>所以，如果我们说不正确，Python会给我们错误。<br>So if we say not True, Python gives us False.<br>如果我们说notfalse，Python就会返回True。<br>And if we say not False, Python returns to us True.<br>我们经常需要比较程序中的对象。<br>We often need to compare objects in our programs.<br>Python中总共有八种不同的比较操作。<br>There are a total of eight different comparison operations in Python.<br>虽然这些常用于数字类型，但实际上我们也可以将它们应用于其他类型。<br>Although these are commonly used for numeric types,we can actually apply them to other types as well.<br>例如，如果要比较两个序列，比较将按元素进行。<br>For example, if you’re comparing two sequences,the comparison is carried out element-wise.<br>因此，您将第一个序列中的第一个元素与第二个序列中的第一个元素进行比较，依此类推。<br>So you’re comparing the first element of your first sequence to your first element in your second sequence, and so on.<br>这样的比较结果总是一个布尔类型，无论是真是假。<br>The result of a comparison like this is always a boolean type, either True or False.<br>通过一个涉及数字的简单例子，也许最容易理解这些比较。<br>It’s perhaps easiest to understand these comparisons through a simple example that involves numbers.<br>那么，让我们试试其中的两个。<br>So let’s try out a couple of them.<br>假设您正在比较两个数字。<br>Let’s say you are comparing two numbers.<br>我们可能会问Python，2比4小吗？<br>We might ask Python, is 2 less than 4?<br>Python对我们来说是真实的。<br>Python returns True to us.<br>我们也可以问，2是否小于或等于，比如说，2？<br>We can also ask, is 2 less than or equal to, say, 2?<br>在这种情况下，答案也是正确的。<br>And in this case, the answer is again True.<br>我们可以用两个等号来检验等式。<br>We can test for equality by using two equal signs.<br>2等于2，因此Python向我们返回True。<br>2 is equal to 2, so Python returns True to us.<br>最后我们可以用感叹号或感叹号来问，两个物体是否不相等。<br>And finally we can ask, are two objects not equal to one another,by using the exclamation mark or exclamation point.<br>在这种情况下，答案是错误的，因为2等于2。<br>In this case, the answer is False, because two is equal to 2.<br>这两个比较用于测试两个对象是否相同。<br>These two comparisons are used to test whether two objects are the one and the same.<br>请注意，这与询问两个对象的内容是否相同不同。<br>Notice that this is different than asking if the contents of two objects are the same.<br>让我们看看这意味着使用一点代码。<br>So let’s see what this implies using a little bit of code.<br>我们可以询问Python，包含数字2和3的列表是否与包含数字3和3的列表相同。<br>We could ask Python if the list that contains numbers 2 and 3 is the same as the list containing numbers 3 and 3.<br>当然，在这种情况下，答案是错误的。<br>The answer is, of course, False in this case.<br>如果我们修改第二个列表，现在两个列表中都有数字2和3。<br>If we modify the second list, now both lists have the numbers 2 and 3 in them.<br>答案将是正确的。<br>The answer is going to be True.<br>这些清单的内容相同。<br>The lists are identical in content.<br>但是，如果我们想询问第一个列表是否与第二个列表是同一个对象，我们将使用“is”比较。<br>However, if we wanted to ask if the first list is the same object as the second list, we would use the “is” comparison.<br>Python告诉我们这是错误的。<br>And Python tells us that this is False.<br>如果我们想知道第一个列表是否与第二个列表不是同一个对象，我们可以使用“is not”操作。<br>If we’d like to know if the first list is not the same object as the second list, we can use the “is not” operation.<br>在本例中，Python返回True。<br>And in this case, Python returns True.<br>我们这里有两个列表。<br>So we actually have two lists here.<br>它们碰巧有相同的内容，但我们有两个对象。<br>They happen to have the same contents, but we do have two objects.<br>这就是为什么这个比较返回False。<br>That’s why this comparison returns False.<br>我们如何测试浮点数和整数这两个数的相等性？<br>How would we test equality of two numbers that are a floating point number and an integer?<br>因此，我们可以看到测试2.0是否等于2.0时如何返回True。<br>So we can see how testing if 2.0 is equal to 2.0 returns True.<br>但是如果我们问Python，2.0是否等于2？<br>But what happens if we ask Python, is 2.0 equal to 2?<br>在本例中，2.0是一个浮点数，而2是一个整数。<br>In this case 2.0 is a floating point number, whereas 2 is an integer.<br>在这种情况下会发生以下情况：<br>What happens in this situation is the following:<br>Python接受第二个数字，即数字2，一个整数——它将其转换为浮点数。<br>Python takes the second number, which is number 2, an integer– it turns that into a floating point number.<br>整数2的浮点表示形式为2.0。<br>The floating point representation of the integer 2 is 2.0.<br>因此，现在我们将隐式地比较2.0和2.0。<br>So now we are comparing implicitly 2.0 to 2.0.<br>因此，答案将是正确的。<br>Therefore the answer is going to be True.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sequences 序列</title>
      <link href="/2021/10/18/ce/pda/1.2.1-sequences-xu-lie/"/>
      <url>/2021/10/18/ce/pda/1.2.1-sequences-xu-lie/</url>
      
        <content type="html"><![CDATA[<h1 id="1-2-1-Sequences-序列"><a href="#1-2-1-Sequences-序列" class="headerlink" title="1.2.1:Sequences 序列"></a>1.2.1:Sequences 序列</h1><p>在Python中，序列是按位置排序的对象集合。<br>In Python, a sequence is a collection of objects ordered by their position.<br>在Python中，有三个基本序列，即列表、元组和所谓的“范围对象”。<br>In Python, there are three basic sequences,which are lists, tuples, and so-called “range objects”.<br>但是Python也有额外的序列类型来表示字符串之类的东西。<br>But Python also has additional sequence types for representing things like strings.<br>关于序列的关键方面是，任何序列数据类型都将支持公共序列操作。<br>The crucial aspect about sequences is that any sequence data type will support the common sequence operations.<br>但是，除此之外，这些不同的类型将有自己的方法可用于执行特定的操作。<br>But, in addition, these different types will have their own methods available for performing specific operations.<br>序列被称为“序列”，因为它们包含的对象形成了一个序列。<br>Sequences are called “sequences” because the objects that they contain form a sequence.<br>让我们以图表的形式来看。<br>So let’s look at this as a diagram.<br>假设这是我们的序列，在这个例子中，序列中有一些不同的对象——三角形、正方形和圆形。<br>Imagine that this is our sequence, and we have a few different objects in our sequence here– triangles, squares,and circles, in this example.<br>要理解序列的第一个基本方面是索引从0开始。<br>The first, fundamental aspect to understand about sequences is that indexing starts at 0.<br>因此，如果我们称这个序列为“s”，我们将通过键入“s”来访问序列中的第一个元素，并在括号中放入它的位置，即0。<br>So if we call this sequence “s”, we would access the first element in our sequence by typing “s” and, in brackets, putting its location, which is 0.<br>这个位于第二个位置的对象将作为s[1]进行寻址和访问，依此类推。<br>This object here in the second position would be addressed and accessed as s[1], and so on.<br>这将是s2，3和4。<br>This would be s 2, 3, and 4.<br>访问序列中对象的另一种方法不是从左向右计数，而是从右向左计数。<br>Another way to access objects within the sequence is not to count from left to right, but from right to left.<br>所以我们可以通过给出一个正的索引来访问序列，这是从左到右计数一个位置，或者我们可以使用一个负的索引，这是从右到左计数位置。<br>So we can access sequences either by giving a positive index, which is counting a location from the left to right,or we can use a negative index, which is counting positions from right to left.<br>在这种情况下，我们必须对序列中的最后一个对象使用负1。<br>In that case, we have to use the negative 1 for the very last object in our sequence.<br>相应地，负2对应于倒数第二个对象，依此类推。<br>Correspondingly, minus 2 would correspond to the second to last object, and so on.<br>序列还支持称为“切片”的操作<br>Sequences also support an operation called “slicing.”<br>现在让我们来看一看。<br>So let’s take a look at that now.<br>如果我们再次拥有序列“s”。要访问特定的单元、特定的对象，我们只需要使用位置——例如，在本例中为2。<br>If we, again, have our sequence “s”. To access a specific unit, specific object, we would just use the location– for example, 2, in this case.<br>但是，如果我们想提取序列中的多个对象，我们可以执行以下操作。<br>However, if we wanted to extract multiple objects in the sequence,we can do the following.<br>我们可以说s括号，比如说，0，2。<br>We can say s bracket, say, 0, 2.<br>这是第一个索引，第一个位置是起始位置，第二个位置是停止位置。<br>This first index, the first position is the start position,and the second position here is to stop position.<br>Python切片在Python到达停止位置的元素之前停止。<br>Python slices stop before Python reaches the element at the stop location.<br>这意味着，如果键入“s”，并在括号中键入“0 column 2”，Python将返回一个包含位置0和1中的对象的切片，但不会返回位置2处的对象。<br>This means that if you type “s”, and, in brackets, “0 column 2”,Python is going to return a slice to which consists of the objects in locations 0 and 1,but it will not return to you the object at location 2.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lists 列表</title>
      <link href="/2021/10/18/ce/pda/1.2.2-lists-lie-biao/"/>
      <url>/2021/10/18/ce/pda/1.2.2-lists-lie-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="1-2-2-Lists-列表"><a href="#1-2-2-Lists-列表" class="headerlink" title="1.2.2: Lists 列表"></a>1.2.2: Lists 列表</h1><p>列表是任何类型的对象的可变序列。<br>Lists are mutable sequences of objects of any type.<br>它们通常用于存储同质项目。<br>And they’re typically used to store homogeneous items.<br>列表是序列的一种类型，就像字符串一样，但它们确实有区别。<br>Lists are one type of sequence, just like strings but they do have their differences.<br>如果我们比较字符串和列表，一个区别是字符串是单个字符的序列，<br>If we compare a string and a list, one difference is that strings are sequences of individual characters,<br>而列表是任何类型Python对象的序列。<br>whereas lists are sequences of any type of Python objects.<br>字符串和列表之间的另一个区别是字符串是不可变的，而列表是可变的。<br>Another difference between strings and lists is that strings are immutable, whereas lists are mutable.<br>除了这两个区别之外，字符串和列表当然也有自己的方法。<br>In addition to these two differences, strings and lists, of course,come with their own methods.<br>通常情况下，列表只包含一种类型的对象，尽管这不是严格的要求。<br>It is common practice for a list to hold objects of just one type,although this is not strictly a requirement.<br>让我们尝试几个简单的列表来测试它们。<br>Let’s try a couple of simple lists to experiment with them.<br>让我们构造一个简单的数字列表，以进一步了解列表。<br>Let’s construct a simple list of numbers to learn a little bit more about lists.<br>所以我要构造一个数字列表。<br>So I’m going to construct a list of numbers.<br>我要称之为数字。<br>I’m going to call it numbers.<br>我将使用数字2、4、6和8。<br>And I’ll use numbers 2, 4, 6, and 8.<br>假设我想提取或访问列表中的第一个元素。<br>Imagine I wanted to extract, or access, the first element of my list.<br>我要做的第一件事是键入列表的名称，然后我需要方括号。<br>The first thing for me to do is type the name of the list,then I need my square brackets.<br>现在请记住，在Python中，索引从零开始。<br>Now remember, in Python, indexes start at zero.<br>因此，为了能够查看该列表的第一个元素，我需要将其放入索引0，位置0。<br>So for me to be able to look at the first element of that list,I need to put in index 0, position 0.<br>在这里，Python告诉我第一个对象，即位于位置0的对象，是数字2。<br>Here, Python tells me that the first object, meaning the object located at position 0, is number 2.<br>如果我将索引更改为1，Python将给我第二个对象。<br>If I change the index to 1, Python gives me the second object.<br>现在，如果我想知道列表上最后一个对象是什么，我可以从右到左计算位置。<br>Now if I wanted to find out what is the very last object on my list,I can count positions from right to left.<br>这意味着我必须使用负指数。<br>And that means I have to use negative indices.<br>因此，如果我键入数字减1，Python告诉我列表中最后一个元素是数字8。<br>So if I type numbers minus 1, Python tells me the very last element of my list is the number 8.<br>记住，因为列表是可变序列，所以我们可以在创建它们之后修改它们的内容。<br>Remember, because lists are mutable sequences, we can modify their content and after we’ve created them.<br>让我们试着在列表的末尾添加一个新的数字，一个数字10。<br>Let’s try appending a new number, a number 10, to the end of our list.<br>要做到这一点，我首先键入数字，然后需要点，然后键入append。<br>To do that, the first thing I type is numbers, then I need my dot,and I type append.<br>在括号里，我输入了数字10。<br>And inside the parentheses, I put in the number 10.<br>如果我现在要求Python显示列表的内容，我将看到数字10已附加到该列表中。<br>If I now ask Python to show the content of the list,I’ll see that number 10 has been appended to that list.<br>我们通常希望执行的另一个操作是将两个或多个列表连接在一起。<br>Another operation we commonly would like to do is to concatenate two or more lists together.<br>现在考虑一个情况，我有另一个列表。<br>Now consider a situation where I have another list.<br>我们就叫它x吧。<br>Let’s just call that x.<br>让我们假设新的列表有数字12、14和16。<br>And let’s say the new list has numbers 12, 14, and 16.<br>在Python中，只要两个对象都是列表，我就可以使用加号来连接它们。<br>In Python, I can use the plus sign as long as both objects are lists to concatenate them.<br>所以我可以输入数字加x。<br>So I can type numbers plus x.<br>你可以看到结果是另一个列表。<br>And you see that the result is another list.<br>我可以问一下，Python最近输出的对象是什么类型的？<br>I can check that by asking, what is the type of the object that Python most recently outputted?<br>这是一个列表。<br>And that’s a list.<br>因此，当我键入一个列表和另一个列表时，我将这两个列表连接在一起。<br>So when I type a list plus another list, I’m concatenating these two lists together.<br>现在，让我们更详细地了解两种列表方法。<br>Let’s now look at a couple of list methods in a little bit more detail.<br>在这种情况下，我们有一个数字列表。<br>In this situation, we have a numbers list.<br>我想做的是，我想反转列表的内容。<br>And what I would like to do is, I would like to reverse the content of the list.<br>所以我想把我的最后一个物体放在第一位，第二个物体放在第二位，以此类推。<br>So I would like to have my last object first, second to last object second,and so on.<br>在这种情况下，我可以使用反向方法。<br>In this case, I can use the reverse method.<br>所以我可以输入数字，我可以调用反向方法。<br>So I can type numbers, and I can call the reverse method.<br>但是请看，Python不会向我返回任何对象。<br>But see, Python doesn’t return any object to me.<br>这是因为列表方法就是所谓的就地方法。<br>This is because list methods are what are called in-place methods.<br>他们修改了原始列表。<br>They modify the original list.<br>为了了解这一点，我现在可以输入数字，我可以看到列表上的数字已经颠倒了。<br>To see that, I can now type numbers, and I can see that the numbers on the list have been reversed.<br>这就是发生的事情。<br>So this is what happens.<br>如果我们这里有一个列表，我们有我们的数字1，3，等等。<br>If we have a list here - we have our numbers 1, 3, and so on.<br>我们最后的号码是23。<br>Our last number is 23.<br>反向方法的作用如下：<br>What the reverse method does is the following:<br>它在我的列表上运行，意思是原始列表。<br>It operates on the list that I have, meaning the original list.<br>它首先移动最后一个对象，最后移动第一个对象。<br>It moves the last object first and the first object last.<br>然后将第二个到最后一个对象移动到第二个位置，依此类推。<br>Then it takes the second to last object, moves that to the second position,and so on.<br>因此，结果是列表中对象的顺序到最后将被颠倒。<br>So the consequence is that the ordering of the objects in the list will have been reversed by the end.<br>然后让我们看一下排序方法。<br>Let’s then a look at the sort method.<br>考虑一个名为名字的列表，我们有四个名字，ZoFiA，亚历克斯，摩根和安东尼。<br>Consider a list called names where we have four names, Zofia, Alex,Morgan, and Anthony.<br>列表方法之一称为排序方法。<br>One of the list methods is called the sort method.<br>如果我键入names.sort并在sort的末尾加上括号，我就可以对该列表的内容进行排序。<br>If I type names.sort and place parentheses at the end of sort,I can sort the contents of this list.<br>如果我现在键入名称，您将看到名称已按字母顺序排序。<br>If I now type names, you’ll see that names have been sorted to be in alphabetical order.<br>因此，列表中对象的新顺序是Alex、Anthony、Morgan和Zofia。<br>So the new ordering of objects in the list is Alex, Anthony, Morgan, and Zofia.<br>现在Python中还有另一个函数叫做“sorted”。<br>Now there is another function in Python which is called “sorted”.<br>函数的运行方式有点不同。<br>And the way that function operates is a little bit different.<br>当我们使用list方法sort时，我们将获取现有列表并重新排序该列表中的对象。<br>When we’re using the list method sort, we’re taking the existing list and reordering the objects within that list.<br>如果我们使用sorted函数，我们实际上是在要求Python构造一个全新的列表。<br>If we’re using the sorted function, we’re actually asking Python to construct a completely new list.<br>它将使用前一个列表中的对象构造此新列表，以使新列表中的对象<br>It will construct this new list using the objects in the previous list in such a way that the objects in the new list<br>将按排序顺序显示。<br>will appear in a sorted order.<br>让我们看看这是怎么发生的。<br>So let’s see how this happens.<br>让我看看我的名单，让我把它颠倒过来。<br>Let me take my names list, and let me just reverse that.<br>为了确认发生了什么，现在订单已经如我们预期的那样被翻转了。<br>And to confirm what has happened, now the ordering has been flipped as we would expect.<br>然后我可以说一些类似于排序的名称，这将是一个新对象。<br>I can then say something like sorted_names,which would be a new object.<br>我使用排序函数，并将其应用于我的列表名。<br>I use the sorted function and I apply it to my list names.<br>现在如果我看到名字的内容，你会看到什么都没有发生。<br>Now if I see what is the content of names,you see that nothing has happened.<br>那是因为我没有调用任何列表方法。<br>That’s because I haven’t called any list method.<br>但是如果我看一下排序的名称的内容，你会发现它的对象与原始列表名称完全相同，<br>But if I look at the contents of sorted_names,you’ll see that it has the same exact objects as the original list names,<br>但在这种情况下，它们是按字母顺序排序的。<br>but in this case, they have been alphabetically sorted.<br>最后，如果您想知道列表包含多少对象，我们可以使用一个通用的序列函数len。<br>Finally, if you wanted to find out how many objects our list contains,we can use a generic sequence function, len.<br>因此，我们可以键入len（names），Python告诉我们，我们的列表包含四个对象。<br>So we can type len(names), and Python tells us that our list contains four objects.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tuples 元组</title>
      <link href="/2021/10/18/ce/pda/1.2.3-tuples-yuan-zu/"/>
      <url>/2021/10/18/ce/pda/1.2.3-tuples-yuan-zu/</url>
      
        <content type="html"><![CDATA[<h1 id="1-2-3-Tuples-元组"><a href="#1-2-3-Tuples-元组" class="headerlink" title="1.2.3: Tuples 元组"></a>1.2.3: Tuples 元组</h1><p>元组是不可变的序列，通常用于存储异构数据。<br>Tuples are immutable sequences typically used to store heterogeneous data.<br>查看元组的最佳方式是将其作为一个由多个不同部分组成的单个对象。<br>The best way to view tuples is as a single object that consists of several different parts.<br>元组在Python编程中有很多用途。<br>Tuples have many uses in Python programming.<br>一个特别重要的用例是当您希望从Python函数返回多个对象时。<br>One especially important use case is when you want to return more than one object from your Python function.<br>在这种情况下，您通常会将所有这些对象包装在一个元组对象中，然后返回该元组。<br>In that case, you would typically wrap all of those objects within a single tuple object, and then return that tuple.<br>现在让我们看一下使用元组可以执行的一些基本操作。<br>Let’s now take a look at some of the basic operations that we can do using tuples.<br>我首先要构造一个元组。<br>I’m first going to construct a tuple.<br>我将把它称为大写字母T，让我们在元组中输入一些数字。<br>I’m going to just call it capital T. And let’s just put in a few numbers in my tuple.<br>比如说1,3,5,7。<br>Let’s say 1, 3, 5, and 7.<br>同样，元组是序列的一种类型。<br>Again, tuples are a type of sequence.<br>因此，如果我想知道元组中有多少个对象，我可以使用len函数。<br>So if I wanted to know how many objects I have in my tuple,I can use the len function.<br>我还可以连接元组。<br>I can also concatenate tuples.<br>所以我可以做一些像T+。<br>So I can do something like T plus.<br>我需要一个新的元组。<br>I need a new tuple here.<br>比如说9号和11号。<br>Let’s say 9 and 11.<br>在本例中，Python向我返回一个新的元组，其中两个元组被放在一起。<br>And in this case, Python returns a new tuple to me where the two tuples have been put together.<br>因为元组是序列，所以访问元组中不同对象的方式取决于它们的位置。<br>Because tuples are sequences, the way you access different objects within a tuple is by their position.<br>因此，如果我想访问元组中的第二个对象，我会键入大写字母T、方括号和1。<br>So if I wanted to access the second object in my tuple,I would type capital T, square bracket, and 1.<br>记住，使用位置1将得到元组中的第二个对象，因为Python中的索引从0开始。<br>And remember, using position 1 is going to give me the second object in the tuple, because indices in Python start at 0.<br>您需要熟悉的另一个操作是如何打包和解包元组。<br>Another operation that you need to be familiar with is how to pack and unpack tuples.<br>假设我有两个数字，两个变量，x和y。<br>Imagine I have two numbers– two variables, x and y.<br>让我们快速创建它们。<br>Let’s just quickly create them.<br>假设x等于这个。<br>Let’s say x is equal to this.<br>y等于这个。<br>y is equal to this.<br>想象一下，如果我想构造一个元组对象。<br>Imagine now if I wanted to construct a tuple object.<br>我们可以把这两个数字x和y看作坐标。<br>We could think of these two numbers x and y as coordinates.<br>所以我可以这样做。<br>So I could do something like this.<br>我可以将坐标定义为一个元组，它由两个对象x和y组成。<br>I could define my coordinate as a tuple, which consists of two objects, x and y.<br>如果我现在问Python，坐标对象的类型是什么，Python会告诉我这是一个元组。<br>If I now ask Python, what is the type of my coordinate object,Python will tell me that’s a tuple.<br>此操作称为打包元组或元组打包。<br>This operation is called packing a tuple, or tuple packing.<br>另一个相关操作是如何解包元组。<br>Another related operation is how you unpack a tuple.<br>我们的坐标包含两个数字。<br>Our coordinate contains two numbers.<br>我们的坐标对象是一个元组。<br>Our coordinate object is a tuple.<br>下面是如何解包这个元组。<br>Here is how you can unpack this tuple.<br>假设我想把它分成两个数字–<br>Let’s say I would like to unpack that into two numbers–<br>比如说c1和c2，可能是坐标1和坐标2的缩写。<br>say c1 and c2, perhaps short for coordinate 1 and coordinate 2.<br>我可以把c2和c2写成一个元组。<br>I can just write c2 and c2 as a tuple.<br>然后我可以把坐标赋给那个元组。<br>And then I can assign coordinate into that tuple.<br>如果我现在看c1和c2的值，我将观察以下内容。<br>If I now look at the values of c1 and c2, I will observe the following.<br>c1包含该元组中的第一个对象。<br>c1 contains the first object in that tuple.<br>其中c2包含元组的第二个对象。<br>Where c2 contains the second object of the tuple.<br>我们还可以在FOR循环中使用元组，这非常方便。<br>We can also use tuples in FOR loops, which is extremely handy.<br>假设我创建了多个坐标。<br>Let’s say I’ve created multiple coordinates.<br>在本例中，我的对象坐标是一个列表，它由元组组成，其中每个元组由两个数字组成。<br>So in this case, my object coordinates is a list which consists of tuples where each tuple consists of two numbers.<br>如果我想在FOR循环中循环这些对象呢？<br>What if I wanted to loop over these objects in say a FOR loop?<br>然后我可以做以下事情。<br>Then I can do the following.<br>我可以称这些坐标对为x和y。<br>I can call these coordinate pairs x and y.<br>让我把它们用括号括起来，用坐标表示。<br>Let me enclose these in parentheses here, in coordinates.<br>我可以让Python打印x和y的值。<br>And I can ask Python to print the value of x and y.<br>这就是这里发生的事情。<br>So this is what’s happening here.<br>坐标是元组列表。<br>Coordinates is a list of tuples.<br>在FOR循环中，我要遍历那个容器，那个坐标序列，一次一个。<br>In my FOR loop I am going over that container, that sequence of coordinates, one at a time.<br>这里重点关注的关键部分是如何从元组列表中解包元组。<br>The key part to focus here is how I unpack the tuples from my list of tuples.<br>所以语法是坐标中的4x逗号y。<br>So the syntax is 4x comma y in coordinates.<br>换句话说，我一次一个地解压坐标列表中的元组。<br>In other words, I’m unpacking the tuples within the coordinates list one at a time.<br>关于在循环中解包元组还有一件事。<br>One more thing about unpacking tuples in a loop.<br>我不一定需要围绕x和y的括号。<br>I don’t necessarily need the parentheses surrounding x and y.<br>所以我也可以在坐标中输入x逗号y。<br>So I can also just type for x comma y in coordinates.<br>然后我就有了同样的打印功能。<br>And then I just have the same print function.<br>这也行得通。<br>This also works.<br>然而，有时在元组周围加上括号会使您更清楚地知道您正在处理一个元组对象。<br>However, sometimes having the extra parentheses around the tuple will make it clearer to you that you are dealing with a tuple object.<br>理解如何构造和处理包含多个对象的元组相对容易。<br>It’s relatively easy to understand how to construct and deal with tuples that contain multiple objects.<br>但是如果元组中只有一个对象呢？<br>But what if you just have one object within your tuple?<br>让我们先试试这个。<br>Let’s experiment with that first.<br>让我们从一个元组开始，其中有两个对象，比如2和3。<br>Let’s start with a tuple where we have two objects, say 2 and 3.<br>我们知道这是我们构造的元组。<br>We know this is a tuple from the way we constructed.<br>我们还可以要求Python向我们返回对象的类型，我们现在碰巧称之为c。<br>We can also ask Python to return to us the type of the object, which we now happen to call c.<br>如果我想构造一个只包含一个对象的新元组，您可能会猜测我们可以使用以下结构。<br>If I wanted to construct a new tuple with just one object in it,you might guess that we could just use the following structure.<br>我们只需要c型等于括号。<br>We could just type c is equal to parentheses.<br>我们把那个号码放在里面。<br>And we put the one number in there.<br>但是，如果我们现在问Python，这个对象的类型是什么？<br>However, if we ask Python now, what is the type of this object?<br>它实际上不是一个元组。<br>It’s not actually a tuple.<br>如果我们通过键入类型括号c来检查这个对象的类型，Python告诉我们c实际上是一个整数。<br>If we check the type of this object by typing type parentheses c,Python is telling us that c is actually an integer.<br>但这不是我们想要的。<br>But this is not what we wanted.<br>我们想要一个只包含一个对象的元组对象。<br>We wanted to have a tuple object that contains just one object.<br>这就是语法有点违反直觉的地方。<br>This is where the syntax is a little bit counterintuitive.<br>要构造只有一个对象的元组，我们必须使用以下语法。<br>To construct a tuple with just one object,we have to use the following syntax.<br>我们先说c等于。<br>We start by saying c is equal to.<br>我们把元组放在括号里。<br>We put our tuple parentheses.<br>我们把它放在我们的2号。<br>We put it in our number 2.<br>我们加上逗号。<br>And we add the comma.<br>当我们现在问Python什么类型的对象是c时，我们知道这是一个元组。<br>When we now ask Python what type of object is c,we know that this is a tuple.<br>最后，如果需要，还可以省略括号。<br>Finally, if you want, you can also omit the parentheses.<br>这也行得通。<br>This also works.<br>然而，有时在元组周围加上括号会使您更清楚地知道您正在处理一个元组对象。<br>However, sometimes having the extra parentheses around the tuple will make it clearer to you that you are dealing with a tuple object.<br>理解如何构造和处理包含多个对象的元组相对容易。<br>It’s relatively easy to understand how to construct and deal with tuples that contain multiple objects.<br>但是如果元组中只有一个对象呢？<br>But what if you just have one object within your tuple?<br>让我们先试试这个。<br>Let’s experiment with that first.<br>让我们从一个元组开始，其中有两个对象，比如2和3。<br>Let’s start with a tuple where we have two objects, say 2 and 3.<br>我们知道这是我们构造的元组。<br>We know this is a tuple from the way we constructed.<br>我们还可以要求Python向我们返回对象的类型，我们现在碰巧称之为c。<br>We can also ask Python to return to us the type of the object, which we now happen to call c.<br>如果我想构造一个只包含一个对象的新元组，您可能会猜测我们可以使用以下结构。<br>If I wanted to construct a new tuple with just one object in it,you might guess that we could just use the following structure.<br>我们只需要c型等于括号。<br>We could just type c is equal to parentheses.<br>我们把那个号码放在里面。<br>And we put the one number in there.<br>但是，如果我们现在问Python，这个对象的类型是什么？<br>However, if we ask Python now, what is the type of this object?<br>它实际上不是一个元组。<br>It’s not actually a tuple.<br>如果我们通过键入类型括号c来检查这个对象的类型，Python告诉我们c实际上是一个整数。<br>If we check the type of this object by typing type parentheses c,Python is telling us that c is actually an integer.<br>但这不是我们想要的。<br>But this is not what we wanted.<br>我们想要一个只包含一个对象的元组对象。<br>We wanted to have a tuple object that contains just one object.<br>这就是语法有点违反直觉的地方。<br>This is where the syntax is a little bit counterintuitive.<br>要构造只有一个对象的元组，我们必须使用以下语法。<br>To construct a tuple with just one object,we have to use the following syntax.<br>我们先说c等于。<br>We start by saying c is equal to.<br>我们把元组放在括号里。<br>We put our tuple parentheses.<br>我们把它放在我们的2号。<br>We put it in our number 2.<br>我们加上逗号。<br>And we add the comma.<br>当我们现在问Python什么类型的对象是c时，我们知道这是一个元组。<br>When we now ask Python what type of object is c,we know that this is a tuple.<br>最后，如果需要，还可以省略括号。<br>Finally, if you want, you can also omit the parentheses.<br>这也行得通。<br>This also works.<br>但代码并不十分清楚。<br>But the code is not quite as clear.<br>这就是为什么我建议在使用元组时使用括号。<br>That’s why I recommend using parentheses whenever you’re using a tuple.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ranges 范围</title>
      <link href="/2021/10/18/ce/pda/1.2.4-ranges-fan-wei/"/>
      <url>/2021/10/18/ce/pda/1.2.4-ranges-fan-wei/</url>
      
        <content type="html"><![CDATA[<h1 id="1-2-4-Ranges-范围"><a href="#1-2-4-Ranges-范围" class="headerlink" title="1.2.4: Ranges 范围"></a>1.2.4: Ranges 范围</h1><p>范围是不可变的整数序列，通常用于for循环。<br>Ranges are immutable sequences of integers,and they are commonly used in for loops.<br>要创建一个范围对象，我们键入“range”，然后输入范围的停止值。<br>To create a range object, we type “range” and then we put in the stopping value of the range.<br>现在，我们刚刚创建了一个范围对象，但是如果您想查看该对象的实际内容，那么这就没有多大帮助了。<br>Now, we’ve just created a range object, but this is less helpful if you would like to see what’s the actual content of that object.<br>虽然，我们通常不会在Python程序中这样做，但为了真正看到该范围对象的内容，我们可以在这种情况下将其转换为列表。<br>Although, we wouldn’t typically do this in a Python program,for us to really see the content of that range object,so what we can do in this case is we can turn it into a list.<br>所以如果我们说“范围5列表”，我们会看到范围对象由五个数字组成，从0到4。<br>So if we say “list of range 5,” we’ll see that the range object consists of five numbers, from 0 to 4.<br>范围的输入参数是停止值。<br>The input argument to range is the stopping value.<br>记住，Python在到达停止值之前停止。<br>And remember, Python stops before it hits the stopping value.<br>这就是为什么范围5实际上不包含数字5。<br>That’s why range 5 does actually not contain the number 5.<br>我们可以为range函数提供额外的参数。<br>We can provide additional arguments to the range function.<br>例如，我们可以提供起点，也可以定义步长。<br>For example, we can provide the starting point,and we can also define the step size.<br>所以如果我们输入“range1到6”，在这种情况下，我们得到一个range对象，它从1开始，到5结束。<br>So if we type “range 1 to 6,” in that case,we get a range object which starts at 1 and ends at 5.<br>如果我们想以2为增量，我们可以这样做。<br>If we wanted to go in increments of two, we could do something like this.<br>我们可以从1开始，一直到13——13号，不包括它本身——我们可以分两步走。<br>We could start from 1, go up to 13– number 13,not itself included– and we could go in steps of two.<br>在本例中，我们得到一个从1开始到11结束的范围对象。<br>In this case, we get a range object that starts at 1 and ends at 11.<br>通常，当我们在Python程序中使用范围对象时，我们不会首先将它们转换为列表。<br>Typically when we use range objects in our Python programs,we do not first turn them into lists.<br>我们在这里这样做只是为了让我们更容易理解这些对象的作用。<br>We’ve done it here only so that it’s easier for us to understand what these objects do.<br>当然，您可以在for循环上下文中使用list对象，但由于以下原因，它是有问题的。<br>You can certainly use a list object in a for loop context,but it’s problematic for the following reason.<br>为了存储范围对象，Python只存储三个不同的数字，即起始数字、停止数字及其步长。<br>To store a range object, Python is only storing three different numbers,which are the starting number, the stopping number, and its step size.<br>如果您有一个非常大的数据集，其中包含（比如）1000万个对象，如果您首先创建一个包含用于访问的索引的列表<br>If you have a very large dataset that contains, say, 10 million objects,if you first create a list that contains the indices for accessing<br>这1000万个数字，只是为了能够循环浏览数据而浪费了很多空间。<br>these 10 million numbers, you’ve just wasted a lot of space just to be able to loop through your data.<br>因此，请按原样使用范围对象。<br>Consequently, use range objects as is.<br>在使用它们之前，不要将它们变成列表。<br>Don’t turn them into lists before using them.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Strings 字符串</title>
      <link href="/2021/10/18/ce/pda/1.2.5-strings-zi-fu-chuan/"/>
      <url>/2021/10/18/ce/pda/1.2.5-strings-zi-fu-chuan/</url>
      
        <content type="html"><![CDATA[<h1 id="1-2-5-Strings-字符串"><a href="#1-2-5-Strings-字符串" class="headerlink" title="1.2.5: Strings 字符串"></a>1.2.5: Strings 字符串</h1><p>字符串是不可变的字符序列。<br>Strings are immutable sequences of characters.<br>在Python中，可以将字符串括在单引号、引号或三引号中。<br>In Python, you can enclose strings in either single quotes,in quotation marks, or in triple quotes.<br>让我们看一下字符串上的几个常见序列操作。<br>Let’s look at a couple of common sequence operations on strings.<br>让我先定义一个字符串。<br>Let me first define a string.<br>让我们来看看“Python”<br>Let’s just go with “Python.”<br>同样，如果我想知道我的字符串有多长，我可以使用len函数。<br>Again, if I wanted to find out how long is my string,I can use the len function.<br>或者，如果我想访问该字符串的第一个或最后一个元素，我可以使用我的通用序列操作。<br>Or if I wanted to access say the first or the last element of that string,I can use my common generic sequence operations.<br>我也会做切片。<br>I can also do slicing.<br>所以我可能想从字符串的最开始开始，取前三个对象。<br>So I might want to start from the very beginning of the string and take the first three objects.<br>在这种情况下，我指定切片的起点和终点。<br>In that case, I specify the starting point of the slice and the end point of the slice.<br>所以在这种情况下，我得到字母“Pyt”<br>So in this case, I get the letters “Pyt.”<br>因此Python向我返回一个新字符串。<br>So Python returns a new string to me.<br>我也可以使用负索引进行切片。<br>I can also do slicing using negative indices.<br>例如，如果我键入S，减去3，Python将给出该序列中的最后三个字符，即h、o和n。<br>So for example, if I type S, minus 3, Python will give me the last three characters in that sequence,in that string, which are h, o, and n.<br>我还可以使用字符串测试成员资格。<br>I can also test for memberships using the strings.<br>例如，假设我想问，字符y是我字符串的一部分吗？<br>For example, imagine I wanted to ask, is the character y part of my string?<br>所以我可以输入y，我可以问，y在S中吗？<br>So I can type in my y, and I can ask, is y in S?<br>答案将会是真的。<br>And the answer is going to be True.<br>如果我使用大写字母Y，答案将是错误的。<br>If I use capital Y, the answer is going to be False.<br>字符串是讨论多态性的好地方。<br>Strings are a good place to talk about polymorphism.<br>请记住，多态性意味着运算符的操作取决于它应用于的对象的类型。<br>Remember, polymorphism means that what an operator does depends on the type of objects it is being applied to.<br>这就像在数学中，你必须为数字单独定义加法，而不是矩阵或其他对象。<br>This is just like in mathematics, where you have to define addition separately for numbers as opposed to matrices or some other object.<br>在Python中，我们可以使用加号将两个数字相加。<br>In Python, we can add two numbers together by using the plus sign.<br>例如，我可以问Python，12加12是多少？<br>So for example, I can just ask Python, what is 12 plus 12?<br>我也可以把两个字符串加在一起。<br>I can also add two strings together.<br>在这种情况下，该操作称为串联，而不是加法。<br>In that case, the operation is not called addition, but concatenation.<br>让我们在这里有一个字符串，“你好。”<br>So let’s have one string here, “hello.”<br>我们可以将其添加到另一个字符串中。<br>We can add that to another string.<br>实际上Python所做的是：<br>And actually what Python does is the following:<br>它接受我的第一个字符串，接受第二个字符串，并将这两个字符串连接在一起。<br>It takes my first string, it takes the second string,and it concatenates those two strings together.<br>结果是一个新字符串，其中前两个字符串已放在一起。<br>The result is a new string where the previous two strings have been put together.<br>让我们先考虑数字的乘法运算。<br>Let’s think about the multiplication operation first with numbers.<br>比如，在数学中，如果我们说3乘以5，我们真正的意思是5加5加5，也就是15。<br>Say, in mathematics, if we say something like 3 times 5, what we really mean is 5 plus 5 plus 5, which would be 15.<br>如果我们在Python中有一个字符串——我们称之为s——如果我们键入三次s，Python会将其转换为s+s+s。<br>If we have a string in Python– let’s called that S–and if we type something like three times S,Python will turn this into S plus S plus S.<br>两个数字之间的加号表示加法，而两个字符串之间的加号表示串联。<br>A plus sign between two numbers means addition,whereas a plus sign between two strings means concatenation.<br>因此，在Python中说三次S，其中S是一个字符串对象，是非常有意义的。<br>Therefore to say three times S, where S is a string object,makes perfect sense in Python.<br>让我们试试这个。<br>Let’s try this out.<br>让我们定义一个字符串对象s。让我们使用“Python”。<br>Let’s define a string object S. Let’s just go with “Python”.<br>如果我键入3次S，Python将获取该字符串并与自身连接。<br>If I type 3 times S, Python is going to take that string and concatenate with itself.<br>结果就是“PythonPythonPython”，一个新字符串。<br>So the result is “PythonPythonPython”, a new string.<br>在我们这里看到的示例中，我们在两个对象之间应用了加号，这两个对象要么是数字和数字，要么是字符串和字符串。<br>In the examples that we looked at here, we were applying a plus sign between two objects that were either a number and a number or a string and a string.<br>为了使多态性工作，这两个对象必须是同一类型的。<br>In order for polymorphism to work, these two objects have to be of the same type.<br>因此，虽然将数字添加到数字中、将字符串添加到字符串中是有意义的，但将字符串添加到数字中或将字符串添加到数字中则没有意义。<br>So while it makes sense to add a number to a number and a string to string,it does not make sense to add a string to a number or vice versa.<br>让我们通过一个例子来了解这一点。<br>Let’s look at this through an example.<br>让我们尝试连接一个字符串和一个数字。<br>Let’s try to concatenate a string and a number.<br>所以首先，我需要我的绳子。<br>So first, I need my string.<br>我将得到类似于“8等于”的东西——我将尝试添加一个数字，比如说8。<br>I’m going to have something like “eight equals”– and I’ll try to add a number,let’s say 8.<br>这不起作用的原因是第一个对象是字符串，第二个对象是数字。<br>The reason this does not work is because the first object is a string and the second object is a number.<br>对于我来说，要运行这一行，我首先需要做的是将数字8转换成字符串。<br>For me to be able to run this line, what I need to do first is to take the number 8 and turn that into a string.<br>我可以使用str函数显式地将数字转换为字符串。<br>I can explicitly turn a number to a string by using the str function.<br>在这个例子中，我有两个字符串，所以说一个字符串加上一个字符串是有意义的。<br>In this case, I have two strings, so saying a string plus a string makes sense.<br>结果出来了。<br>And the result works out.<br>到目前为止，我们看到的字符串操作实际上都是泛型序列操作。<br>The operations we have seen for string so far have really all been generic sequence operations.<br>除了这些操作之外，字符串还有自己的方法，使您能够操作字符串。<br>In addition to these operations, strings also have their own methods that enable you to manipulate strings.<br>为了获得一个包含所有属性的目录，我键入dir、str表示字符串，Python为我提供了一个字符串可用的不同属性的长列表。<br>To get a directory of all attributes, I type dir, str for strings,and Python gives me a long list of different attributes that are available for strings.<br>让我们看看这里有什么样的帮助。<br>Let’s see what type of help is available to us right here.<br>例如，字符串函数“replace”对我来说很有趣，所以我可以只键入strreplace，然后在末尾输入一个问号。<br>For example, the string function “replace” looks interesting to me,so I can just type str replace, and I can enter a question mark at the end.<br>这给了我一个字符串替换方法的非常简短的描述。<br>This gives me a very brief description of the string replace method.<br>让我们通过一个例子来使用replace方法。<br>So let’s use the replace method through an example.<br>我将定义一个字符串，我们称它为“name”。<br>I’m going to define a string,let’s call it “name”.<br>我将在这里使用“Tina Fey”作为字符串，我们想用小写字母T替换第一个大写字母T。<br>I’m going to use “Tina Fey” here as my string and we’d like to replace the first capital T with a lower case t.<br>我调用replace方法，我想用小写的T替换大写的T。<br>I call the replace method,and I’d like to replace the capital T with a lower case t.<br>因为字符串是不可变的对象，Python实际上不会修改字符串。<br>Because strings are immutable objects, Python doesn’t actually modify your string.<br>相反，它会返回一个新字符串给您。<br>Instead what it does – it returns a new string to you.<br>如果我想保留这个新字符串，我必须将它赋给某个变量。<br>If I’d like to keep this new string, I have to assign it to some variable.<br>例如，我可以称之为“新名字”，它由原来的名字和字母T组成。<br>So for example, I could call this “new_name”,which consists of the original name with the letter T replaced.<br>如果我现在看一下我原来名字的内容，你会发现T仍然是大写的。<br>If I now look at the content of my original name,you’ll see that the T remains capitalized.<br>但如果我问，我的新名字是什么？<br>But if I ask, what is my new name?<br>大写字母T现在显示为小写字母T。<br>The capital T now appears as a lowercase t.<br>让我们继续我们的例子。<br>Let’s continue with our example.<br>但这一次，让我们尝试拆分方法。<br>But this time, let’s try the split method.<br>split方法获取一个字符串并将其分解为子字符串。<br>The split method takes a string and breaks that down into substrings.<br>您必须指定要用于拆分字符串的字符。<br>What you have to specify is the character you would like to use for splitting the string.<br>我还可以使用其他字符串方法将这些字符串转换为小写或大写字母。<br>I can also take these strings and turn them into lowercase or uppercase letters using other string methods.<br>让我们找出这个对象的类型——它是一个列表。<br>Let’s find out the type of this object –it’s a list.<br>因此，我们可以询问该列表中包含多少对象。<br>Therefore we can ask how many objects are contained within that list.<br>Python告诉我们这里有两个对象。<br>And Python tells us we have two objects there.<br>因为它是一个列表，所以我们可以通过各个对象的位置来访问它们，所以写名称方括号0或名称方括号1是有意义的。<br>Because it’s a list, we can access individual objects by their position so it makes sense to write names square brackets 0, or names square bracket 1.<br>我们还可以执行以下操作：<br>We can also do the following:<br>我们可以提取列表中的第一个对象，我们可以询问该对象的类型。<br>We can extract the first object in that list,and we can ask what is the type of that object.<br>现在我们知道它是一个字符串，我们可以调用一些字符串方法来修改该名称。<br>Now that we know it’s a string, we can call some string methods to modify that name.<br>让我们用这个字符串命名方括号0，然后调用上面的方法。<br>So let’s take that string – names square brackets 0, and let’s call the upper method.<br>这会将名称“Tina”全部大写。<br>This turns the name “Tina” into all uppercase.<br>我们可以类似地获取位置1处的字符串，并使用lower方法将其转换为小写字符串。<br>We could similarly take, let’s say, the string at location 1,and turn that into a lowercase case string using the lower method.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sets 集合</title>
      <link href="/2021/10/18/ce/pda/1.2.6-sets-ji-he/"/>
      <url>/2021/10/18/ce/pda/1.2.6-sets-ji-he/</url>
      
        <content type="html"><![CDATA[<h1 id="1-2-6-Sets-集合"><a href="#1-2-6-Sets-集合" class="headerlink" title="1.2.6: Sets 集合"></a>1.2.6: Sets 集合</h1><p>集合是不同散列对象的无序集合。<br>Sets are unordered collections of distinct hashable objects.<br>但是，对象是可散列的意味着什么呢？<br>But what does it mean for an object to be hashable?<br>这是一个更具技术性的话题，我们将不在这里详细讨论。<br>That’s a more technical topic, and we will not go into details here.<br>实际上，这意味着您可以将集合用于数字和字符串等不可变对象，但不能用于列表和字典等可变对象。<br>In practice, what that means is you can use sets for immutable objects like numbers and strings, but not for mutable objects like lists and dictionaries.<br>有两种类型的集合。<br>There are two types of sets.<br>一种类型的集合称为“集合”。<br>One type of set is called just “a set”.<br>另一种类型的集合称为“冻结集合”。<br>And the other type of set is called “a frozen set”.<br>这两者之间的区别在于，冻结集在创建后是不可变的。<br>The difference between these two is that a frozen set is not mutable once it has been created.<br>换句话说，它是不可变的。<br>In other words, it’s immutable.<br>相反，通常的法线集是可变的。<br>In contrast, your usual, normal set is mutable.<br>可以将集合视为无序的对象集合。<br>You can think of a set as an unordered collection of objects.<br>关于集合的一个关键思想是它们不能被索引。<br>One of the key ideas about sets is that they cannot be indexed.<br>所以集合中的对象没有位置。<br>So the objects inside sets don’t have locations.<br>关于集合的另一个关键特性是元素永远不会被复制。<br>Another key feature about sets is that the elements can never be duplicated.<br>因此，如果你的集合中有一个给定的元素或对象，比如说数字3，如果你尝试在集合中再次添加该数字，那么什么都不会发生。<br>So if you have a given element or object in your set, say number 3,if you try adding that number again in the set, nothing happens.<br>这意味着集合中的所有对象总是唯一的或不同的。<br>This means that all of the objects inside a set are always going to be unique or distinct.<br>Python集对于跟踪不同的对象和执行诸如并集、交集和集差等数学集操作特别有用。<br>Python sets are especially useful for keeping track of distinct objects and doing mathematical set operations like unions, intersections, and set differences.<br>让我们下一个实验使用集合。<br>Let’s next experiment with using sets.<br>让我先创建一个空集。<br>Let me start by creating an empty set.<br>我将创建一个对象，一个我将调用ID的集合。<br>I’m going to create an object, a set that I’m going to call ids.<br>这个想法是在我的研究或数据集中包含不同的ID。<br>And the idea is that this would contain distinct ids in my study or my data set.<br>我可以创建一个空集，只需使用关键字set，然后再加上一组括号。<br>I can create an empty set by just using the key word set,and just following that with a set of parenthesis.<br>在本例中，我将创建一个名为ids的集合，它将是空的。<br>In this case, I would have created a set called ids, and it would be empty.<br>它里面没有物体。<br>It would have no objects in it.<br>比如说，我想做一些不同的事情。<br>Let’s say that I want to do something a little different.<br>我想创建一个包含几个成员的集合。<br>I’d like to create a set that has a few members in it.<br>在本例中，语法非常相似。<br>And in this case, the syntax is very similar.<br>我使用关键字集，后跟括号。<br>I use the keyword set, followed by parentheses.<br>在括号内，我插入了一个列表。<br>And inside the parenthesis, I insert a list.<br>假设我们被试的数字或ID如下——1、2、4、6、7、8和9。<br>Let’s say that the numbers or the ids of our subjects are the following– 1, 2, 4, 6, 7, 8, and 9.<br>这是我的第一集。<br>And this is my initial set.<br>如果我想问这个集合中有多少成员，我可以使用len函数。<br>If I wanted to ask how many members do I have in this set,I can use the len function.<br>Python告诉我在这个集合中有七个对象。<br>And Python tells me that I have seven objects in this set.<br>假设我想在这个集合中再添加一个id。<br>Let’s say I wanted to add one more id to this set.<br>我们把那个身份证号码打10。<br>Let’s call that id number 10.<br>因此，我会键入ids.add，并将id号为10的对象添加到我的集合中。<br>So I would type ids.add, and I am adding an object with an id number 10 to my set.<br>如果我键入id，Python会告诉我这些是集合的当前成员。<br>If I type ids, Python tells me that these are the current members of the set.<br>身份证号码10已添加到此集合中。<br>And id number 10 has been added to this set.<br>如果我尝试添加，比方说，第2个，我已经在我的集合中，然后我问集合中的其他成员，你会看到什么都没有发生。<br>If I try adding, let’s say, number 2, which I already have in my set,and then I ask what other members of the set now,you’ll see that nothing has happened.<br>这是set的关键特性之一。<br>And this is one of the key features of set.<br>换句话说，如果集合中已有一个对象，并且再次尝试添加该对象，则不会发生任何事情。<br>In other words, if you already have an object in the set,and if you try adding that same object again, nothing happens.<br>我们可以使用pop函数从集合中删除成员或对象。<br>We can remove members or objects from sets using the pop function.<br>在这种情况下，Python将返回该集合的任意成员。<br>In that case, Python returns to you an arbitrary member of that set.<br>所以我可以运行几次。<br>So I can run this a couple of times.<br>如果我查看集合的内容，我现在可以看到集合中还有五个对象。<br>If I look at the contents of my set, I can see now that I have five objects remaining in my set.<br>让我重新定义我的ID集。<br>Let me redefine my ids set.<br>假设它由ID范围为0到9的个人组成。<br>Let’s say that it consists of individuals with ids ranging from 0 to 9.<br>我可以看一下内容，这看起来是正确的。<br>I can look at the contents and this looks correct.<br>想象一下，其中一些物体是男性和女性。<br>Imagine that some of these objects are males and females.<br>所以我要构造一个集合，我称之为雄性。<br>So I’m going to construct a set that I’m going to call males.<br>所以这是一套。<br>So it’s a set.<br>我需要建立一个列表。<br>I need to build that as a list.<br>假设这些是雄性的ID。<br>And let’s say that these are the ids of the males.<br>集合的一个非常有用的特性是，我们可以从数学集合运算中使用它们。<br>A very useful property of sets is that we can use them from a mathematical set operations.<br>我现在可以用雄性来定义一个新的集合，我称之为雌性。<br>I can now use the set males to define a new set that I’m going to call females.<br>所以我将女性定义为所有ID减去男性。<br>So I’m going to define females as all of the ids minus males.<br>如果我问Python女性是什么类型的，Python会告诉我这是一个集合。<br>If I ask Python what is the type of females, Python is telling me it’s a set.<br>我可以看看那一套的内容。<br>I can look at the contents of that set.<br>我还可以查看我的男性套装的内容。<br>I can also look at the contents of my males set.<br>我发现这两者是截然不同的。<br>And I see that these two are distinct.<br>在Python中还有其他执行集合操作的方法。<br>There are other ways to perform set operations in Python.<br>例如，我可以非常方便地执行集合并集操作。<br>For example, I can perform the set union operation in a very handy way.<br>假设我想创建一个集合，我将给每个人打电话。<br>Let’s say that I want to create a set which I’m going to call everyone.<br>每个人都包括所有的男性和女性。<br>And everyone consists of all of the males and all of the females.<br>Python中集合并集的简写操作是垂直线。<br>The short hand operation for a set union in Python is a vertical line.<br>再次，如果我查看集合everyone的内容，我可以看到集合中的所有成员都在那里。<br>Again if I look at the contents of the set everyone,I can see that all of the set members are there.<br>最后，我可以使用“与”运算求两个集合的交集。<br>Finally, I can take an intersection of two sets using the ampersand operation.<br>比如说，我想带走所有人，我想再拿出一套。<br>Let’s say I want to take everyone, and I wanted to take out another set.<br>因此，这是在交叉口操作中执行的。<br>So this is performing at the intersection operation.<br>我可以定义另一个集合，在本例中它由ID1、2和3组成。<br>I can define another set, which in this case consists of the ids 1, 2, and 3.<br>然后我可以让Python返回这两个集合相交的所有人——一个集合包含成员1、2和3，另一个集合包含所有人。<br>And then I can ask Python to return everybody who is in the intersection of these two sets–one set containing members 1, 2, and 3 and the other one containing everybody.<br>在本例中，答案是由IDs1、2和3组成的集合。<br>And in this case, the answer is the set that consists of the ids 1, 2, and 3.<br>作为集合的一个简单应用，让我们使用集合来计算单词中唯一字母的数量。<br>As a simple application of sets, let’s use sets to count the number of unique letters in a word.<br>因此，让我首先定义我感兴趣的词。<br>So let me first define my word of interest.<br>让我们来看一些更复杂的东西，比如说一种不可剥夺的精神信仰。<br>Let’s go with something a little more complicated,something like anitdisestablishmentarianism.<br>我拼对了。<br>I spelt that right.<br>接下来我要做的是构造一个集合，所以我只说集合。<br>Now what I can do next is I can construct a set, so I just say set.<br>我从我的字符串中构造它，它被称为“word”。<br>I construct that from my string which is called “word”.<br>我将称之为“字母”。<br>And I’m going to call this “letters”.<br>为了找出这个单词中有多少个唯一的字母，我只要求Python返回字母对象的长度，即12。<br>To find out how many unique letters I have in this word,I just ask Python to return the length of the letters object, which is 12.<br>因此，在本例中，我们可以使用set对象简单地计算字符串中唯一字母的数量。<br>So in this case, we were able to use the set object to simply count the number of unique letters in a string.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dictionaries 字典</title>
      <link href="/2021/10/18/ce/pda/1.2.7-dictionaries-zi-dian/"/>
      <url>/2021/10/18/ce/pda/1.2.7-dictionaries-zi-dian/</url>
      
        <content type="html"><![CDATA[<h1 id="1-2-7-Dictionaries-字典"><a href="#1-2-7-Dictionaries-字典" class="headerlink" title="1.2.7: Dictionaries 字典"></a>1.2.7: Dictionaries 字典</h1><p>字典是从键对象到值对象的映射。<br>Dictionaries are mappings from key objects to value objects.<br>字典由键：值对组成，其中键必须是不可变的，值可以是任何值。<br>Dictionaries consists of Key:Value pairs, where the keys must be immutable and the values can be anything.<br>词典本身是可变的，因此这意味着一旦创建词典，就可以动态修改其内容。<br>Dictionaries themselves are mutable so this means once you create your dictionary, you can modify its contents on the fly.<br>字典可用于对无序数据执行非常快速的查找。<br>Dictionaries can be used for performing very fast look-ups on unordered data.<br>关于词典，需要注意的一个关键方面是它们不是序列，因此不保持任何类型的左右顺序。<br>A key aspect to be aware about regarding dictionaries is that they are not sequences, and therefore do not maintain any type of left-right order.<br>这意味着，如果在字典上循环，Key:Value对将以任意顺序迭代。<br>This means that if you’re looping over a dictionary,the Key:Value pairs will be iterated over in arbitrary order.<br>让我们看一个图表来阐明这个观点。<br>Let’s look at a diagram to clarify this idea.<br>我们将建立一个简单的字典，其中有与value对象关联的第一个键。<br>We’re going to set up a simple dictionary where we have our first key that’s associated with a value object.<br>我们有第二把钥匙，和另一个物体在一起。<br>We have our second key that goes with another object.<br>假设我们这里有第四个键，它和相应的值对象一起。<br>And let’s say we have key number four here which goes with the corresponding value object.<br>如果这是一个字典，那么这个键对象将始终与这个值对象相关联。<br>If this is a dictionary, this key object will always be associated with this value object.<br>类似地，此键将始终与此值对象一起使用。<br>Similarly, this key will always go with this value object.<br>当我们说字典不维护任何类型的左或右顺序时，我们所说的是这些键值对本身的顺序没有定义。<br>When we say that dictionaries don’t maintain any type of left or right order, what we’re saying is that the ordering of these key-value pairs themselves is not defined.<br>这意味着如果我在这些对上循环，我可能首先得到对应于我的第二个密钥的对。<br>That means if I’m looping over these pairs,I might first get the pair that corresponds to my second key here.<br>然后让我们看看字典的一些用法。<br>Let’s then look at some uses of dictionaries.<br>我想编一本叫做《年龄》的字典。<br>I would like to set up a dictionary which is called age.<br>如果我希望这是一个空字典，我有两种方法来构造它。<br>And if I want this to be an empty dictionary,I have two ways to construct that.<br>第一种方法是只使用一对花括号，这会给我一个字典年龄，在构建时它是空的。<br>The first approach is just to use a pair of curly braces,and this would give me a dictionary age which would be empty at the time of construction.<br>另一种可能是键入“age=dict”，这是一个关键字，用左括号和右括号括起来。<br>Another possibility is to type “age = dict”,which is a key word, open and close parentheses.<br>我又一次创建了一本空字典。<br>And again I have created an empty dictionary.<br>然后，让我们构建一个包含姓名和年龄的词典。<br>Let’s then construct a dictionary that consists of names and ages.<br>在这个特定的字典中，名称将成为键，年龄将成为值对象。<br>In this particular dictionary, the names are going to be the keys and the ages are going to be the value objects.<br>想象一下，我们要做的第一项任务是查找一个人的年龄。<br>Imagine the first task we’d like to do is look up a person’s age.<br>我们使用以下语法来实现这一点。<br>We do this using the following syntax.<br>我们首先键入词典的名称。<br>We first type the name of the dictionary.<br>然后用方括号表示。<br>We then follow with the square brackets.<br>在方括号内，插入我们感兴趣查找的键。<br>Inside the square brackets, we insert the key we’re interested in looking up.<br>比如说，在这种情况下，我们想知道Pam多大了？<br>Let’s say, in this case, we’d like to know, how old is Pam?<br>所以我们在方括号内输入“Pam”。<br>So we’d enter “Pam” inside the square brackets.<br>Python将结果返回给我们。<br>And Python returns the result to us.<br>通常，我们希望修改与特定键关联的值对象。<br>Often, we’d like to modify the value objects that are associated with specific keys.<br>假设我们想把Tim的年龄提高一年。<br>Let’s say we would like to increase the age of Tim by one year.<br>我们可以这样做。<br>Here is how we could do this.<br>我们先拿我们的年龄字典。<br>We first take our age dictionary.<br>我们想修改提姆。<br>We’d like to modify Tim.<br>假设我们想把他的年龄提高一岁。<br>And let’s say we want to increase his age by one year.<br>我们可以使用以下语法。<br>We could use the following kind of syntax.<br>我们可以说Tim的年龄等于Tim的年龄加1。<br>We could say age of Tim is equal to age of Tim plus 1.<br>这当然有效。<br>And this certainly works.<br>然而，将一个对象的值增加一个或其他数字是一种非常常见的操作。<br>However incrementing the value of an object by one, or by some other number,is a very common operation.<br>在Python中有一个非常方便的简写符号。<br>And there’s a very handy shorthand notation for doing that in Python.<br>让我们以Tim的年龄为例，假设我们想将其增加一年，我们可以做以下事情：我们只需输入“+=1”。<br>So let’s take the age of Tim,and say we would like to increase that by one year,we can do the following:We can just type “+= 1”.<br>如果我们检查Tim的年龄会发生什么，我们会再次将Tim年龄增加一年。<br>And what happens if we check the age of Tim,we will have increased Tim age again by one year.<br>让我们确保我们理解当我们说加号等于时会发生什么。<br>Let’s make sure we understand what happens when we say plus equals.<br>当您从左向右读取代码时，加号操作首先发生。<br>When you’re reading code from left to right,the plus operation happens first.<br>然后我们有了等号，这意味着赋值。<br>Then we have the equal sign, which means assignment.<br>例如，当我们说某物加上等于1时，我们首先获取对象的值，我们向该对象添加一个值，然后将其重新分配回原始对象。<br>So when we say something plus equals 1, for example, we first take the value of the object, we add one to that object,and then we reassign it back to the original object.<br>一个常见的错误是有时混淆了这两个操作的顺序。<br>A common mistake is sometimes to mix up the order of these two operations.<br>想想如果你说x等于+1会发生什么。<br>Think about what happens if you say x equals plus 1.<br>您没有将x的值增加1。<br>You’re not incrementing the value of x by 1.<br>相反，你是说x应该被赋值为+1，这和x等于1是一样的。<br>Instead, you’re saying that x should be assigned the value of plus 1, which is just the same thing as saying x is equal to 1.<br>如果希望将变量的值递增1，请先递增，然后赋值。<br>If you wish to increment the value of a variable by 1,you first do it the incrementation and then the assignment.<br>这就是为什么这两个运算的顺序是加号然后等于。<br>That’s why the order of these two operations is plus and then equals.<br>您可以使用dictionary方法键来找出dictionary中的所有键。<br>You can use the dictionary method keys to find out what are all the keys in the dictionary.<br>同样，您可以使用values方法找出字典中的所有值。<br>And similarly, you can use the values method to find out what are all of the values in the dictionary.<br>当您调用这些方法时，Python将返回一个具有非常特殊类型的对象。<br>When you call these methods, Python returns to you an object which has a very special type.<br>返回对象的类型称为“视图对象”。<br>The type of the returned object is what’s called a “view object”.<br>视图对象所做的正是您所想象的。<br>View objects do precisely what you might imagine that they do.<br>它们提供字典中键或值的动态视图。<br>They provide a dynamic view of the keys or values in the dictionary.<br>这里的一个关键点是，当您更新或修改字典时，视图也会相应地改变。<br>A key point here is that as you update or modify your dictionary,the views will also change correspondingly.<br>现在让我们使用刚才定义的字典。<br>Let’s now work with the dictionary that we just defined.<br>我们将首先提取字典中的所有名称。<br>We’re going to first extract all of the names in the dictionary.<br>所以我会说“names=age.keys”。<br>So I’ll do that by saying “names = age.keys”.<br>现在让我们检查一下对象名的类型。<br>Now let’s just check the type of the object names.<br>Python确认这是一个dictionary keys对象。<br>And Python confirms that this is a dictionary keys object.<br>假设我想在我的字典中添加一个新键。<br>Let’s say I would like to add a new key to my dictionary.<br>我们再加上一个叫汤姆的人，他在我们的字典里已经50岁了。<br>Let’s add a person called Tom who is 50 in our dictionary.<br>所以我们说年龄[“Tom”]，然后将值对象50赋给该键。<br>So we say age[“Tom”] and we assign the value object 50 to that key.<br>如果我们现在问，名称是什么，您将看到view对象也包含Tom。<br>If we now ask, what are the names, you’ll see that the view object also contains Tom.<br>我们没有重新定义名称的内容，这就是视图对象的本质。<br>We didn’t redefine the content of names,and this is the nature of view object.<br>当我们修改字典时，视图对象的内容将自动更改。<br>As we modify the dictionary, the content of the view object will change automatically.<br>让我们看看values方法。<br>Let’s look at the values method.<br>因此，如果我们说age.values，Python将返回字典中的所有值。<br>So if we say age.values, Python returns to us all of the values in the dictionary.<br>我将称之为年龄，我们可以看看这个物体。<br>I’m going to call this ages,and we can look at that object.<br>所以在这个例子中，我们有一个，两个，三个，四个，五个不同的年龄段在字典里。<br>So in this case, we have one, two, three, four,five different ages contained in the dictionary.<br>我打算在字典里再加一个人。<br>I’m going to add one more person to the dictionary.<br>我们给那个人打电话叫尼克，尼克31岁了。<br>Let’s call that person Nick,and let’s say Nick is 31 years old.<br>如果我现在问Python，名称是什么，您将看到名称Nick也包含在names对象中。<br>If I now ask Python, what are the names, you’ll see that the name Nick is also contained in the names object.<br>这就是视图对象的本质——它们的内容在您修改字典时动态更新。<br>This is the nature of views objects–their content is dynamically updated as you modify your dictionary.<br>最后，让我们看看如何测试字典中的成员资格。<br>Finally, let’s see how we’ll test for membership in a dictionary.<br>我们知道我们的字典里有一个关键的汤姆。<br>We know that we have a key Tom in our dictionary.<br>如果我想问汤姆是否是我们字典的一员，如果汤姆是我们字典里的一把钥匙，我可以问“汤姆”的年龄？<br>If I want to ask if Tom is a member of our dictionary,if Tom is a key in our dictionary, I can ask, “Tom” in age?<br>答案是“真的”。<br>And the answer is going to be “True”.<br>如果我问，“佐菲亚”在我们的字典里吗？<br>If I ask, is “Zofia” in our dictionary?<br>Python会说“False”。<br>Python is going to say “False”.<br>这就是我们在字典中测试对象成员身份的方法。<br>This is how we test for object membership in a dictionary.</p>]]></content>
      
      
      <categories>
          
          <category> Python数据分析（中英对照） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python,数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
